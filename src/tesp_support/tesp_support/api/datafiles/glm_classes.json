{
"climate": {
	"global_attributes": {
	},
	"climate": {
		"solar_elevation": {
			"type": "double"
		},
		"solar_azimuth": {
			"type": "double"
		},
		"solar_zenith": {
			"type": "double"
		},
		"city": {
			"type": "char32"
		},
		"tmyfile": {
			"type": "char1024"
		},
		"tz_meridian": {
			"type": "double",
			"description": "Specify 15*(time zone offset of weather source) if using CSV, manual, FNCS or HELICS control. Negative value in the U.S."
		},
		"temperature": {
			"type": "double",
			"unit": "degF"
		},
		"humidity": {
			"type": "double",
			"unit": "pu"
		},
		"solar_flux": {
			"type": "double",
			"unit": "W/sf"
		},
		"solar_direct": {
			"type": "double",
			"unit": "W/sf"
		},
		"solar_diffuse": {
			"type": "double",
			"unit": "W/sf"
		},
		"solar_global": {
			"type": "double",
			"unit": "W/sf"
		},
		"extraterrestrial_global_horizontal": {
			"type": "double",
			"unit": "W/sf"
		},
		"extraterrestrial_direct_normal": {
			"type": "double",
			"unit": "W/sf"
		},
		"pressure": {
			"type": "double",
			"unit": "mbar"
		},
		"wind_speed": {
			"type": "double",
			"unit": "mph"
		},
		"wind_dir": {
			"type": "double",
			"unit": "deg"
		},
		"wind_gust": {
			"type": "double",
			"unit": "mph"
		},
		"record.low": {
			"type": "double",
			"unit": "degF"
		},
		"record.low_day": {
			"type": "int32"
		},
		"record.high": {
			"type": "double",
			"unit": "degF"
		},
		"record.high_day": {
			"type": "int32"
		},
		"record.solar": {
			"type": "double",
			"unit": "W/sf"
		},
		"rainfall": {
			"type": "double",
			"unit": "in/h"
		},
		"snowdepth": {
			"type": "double",
			"unit": "in"
		},
		"interpolate": {
			"type": "enumeration",
			"keywords": {
				"QUADRATIC":2,
				"LINEAR":1,
				"NONE":0
			},
			"description": "the interpolation mode used on the climate data"
		},
		"solar_horiz": {
			"type": "double"
		},
		"solar_north": {
			"type": "double"
		},
		"solar_northeast": {
			"type": "double"
		},
		"solar_east": {
			"type": "double"
		},
		"solar_southeast": {
			"type": "double"
		},
		"solar_south": {
			"type": "double"
		},
		"solar_southwest": {
			"type": "double"
		},
		"solar_west": {
			"type": "double"
		},
		"solar_northwest": {
			"type": "double"
		},
		"solar_raw": {
			"type": "double",
			"unit": "W/sf"
		},
		"ground_reflectivity": {
			"type": "double",
			"unit": "pu"
		},
		"reader": {
			"type": "object"
		},
		"forecast": {
			"type": "char1024",
			"description": "forecasting specifications"
		},
		"cloud_model": {
			"type": "enumeration",
			"keywords": {
				"CUMULUS":1,
				"NONE":0
			},
			"description": "the cloud model to use"
		},
		"cloud_opacity": {
			"type": "double",
			"unit": "pu"
		},
		"opq_sky_cov": {
			"type": "double",
			"unit": "pu"
		},
		"cloud_speed_factor": {
			"type": "double",
			"unit": "pu"
		},
		"solar_cloud_direct": {
			"type": "double",
			"unit": "W/sf"
		},
		"solar_cloud_diffuse": {
			"type": "double",
			"unit": "W/sf"
		},
		"solar_cloud_global": {
			"type": "double",
			"unit": "W/sf"
		},
		"cloud_alpha": {
			"type": "double",
			"unit": "pu"
		},
		"cloud_num_layers": {
			"type": "double",
			"unit": "pu"
		},
		"cloud_aerosol_transmissivity": {
			"type": "double",
			"unit": "pu"
		},
		"update_time": {
			"type": "double"
		}
	},
	"csv_reader": {
		"index": {
			"type": "int32"
		},
		"city_name": {
			"type": "char32"
		},
		"state_name": {
			"type": "char32"
		},
		"lat_deg": {
			"type": "double"
		},
		"lat_min": {
			"type": "double"
		},
		"long_deg": {
			"type": "double"
		},
		"long_min": {
			"type": "double"
		},
		"low_temp": {
			"type": "double"
		},
		"high_temp": {
			"type": "double"
		},
		"peak_solar": {
			"type": "double"
		},
		"elevation": {
			"type": "int32"
		},
		"status": {
			"type": "enumeration",
			"keywords": {
				"ERROR":2,
				"OPEN":1,
				"INIT":0
			}
		},
		"timefmt": {
			"type": "char32"
		},
		"timezone": {
			"type": "char32"
		},
		"timezone_offset": {
			"type": "double"
		},
		"columns": {
			"type": "char256"
		},
		"filename": {
			"type": "char256"
		}
	},
	"weather": {
		"temperature": {
			"type": "double",
			"unit": "degF"
		},
		"humidity": {
			"type": "double",
			"unit": "%"
		},
		"solar_dir": {
			"type": "double",
			"unit": "W/sf"
		},
		"solar_direct": {
			"type": "double",
			"unit": "W/sf"
		},
		"solar_diff": {
			"type": "double",
			"unit": "W/sf"
		},
		"solar_diffuse": {
			"type": "double",
			"unit": "W/sf"
		},
		"solar_global": {
			"type": "double",
			"unit": "W/sf"
		},
		"global_horizontal_extra": {
			"type": "double",
			"unit": "W/sf"
		},
		"wind_speed": {
			"type": "double",
			"unit": "mph"
		},
		"wind_dir": {
			"type": "double",
			"unit": "deg"
		},
		"opq_sky_cov": {
			"type": "double",
			"unit": "pu"
		},
		"tot_sky_cov": {
			"type": "double",
			"unit": "pu"
		},
		"rainfall": {
			"type": "double",
			"unit": "in/h"
		},
		"snowdepth": {
			"type": "double",
			"unit": "in"
		},
		"pressure": {
			"type": "double",
			"unit": "mbar"
		},
		"month": {
			"type": "int16"
		},
		"day": {
			"type": "int16"
		},
		"hour": {
			"type": "int16"
		},
		"minute": {
			"type": "int16"
		},
		"second": {
			"type": "int16"
		}
	}
}
,
"commercial": {
	"global_attributes": {
		"warn_control": {
			"type": "bool"
		},
		"warn_low_temp": {
			"type": "double"
		},
		"warn_high_temp": {
			"type": "double"
		}
	},
	"multizone": {
		"from": {
			"type": "object"
		},
		"to": {
			"type": "object"
		},
		"ua": {
			"type": "double"
		}
	},
	"office": {
		"floor_area": {
			"type": "double",
			"unit": "sf"
		},
		"floor_height": {
			"type": "double",
			"unit": "ft"
		},
		"exterior_ua": {
			"type": "double",
			"unit": "Btu/degF/h"
		},
		"interior_ua": {
			"type": "double",
			"unit": "Btu/degF/h"
		},
		"interior_mass": {
			"type": "double",
			"unit": "Btu/degF"
		},
		"glazing": {
			"type": "double",
			"unit": "sf"
		},
		"glazing.north": {
			"type": "double",
			"unit": "sf"
		},
		"glazing.northeast": {
			"type": "double",
			"unit": "sf"
		},
		"glazing.east": {
			"type": "double",
			"unit": "sf"
		},
		"glazing.southeast": {
			"type": "double",
			"unit": "sf"
		},
		"glazing.south": {
			"type": "double",
			"unit": "sf"
		},
		"glazing.southwest": {
			"type": "double",
			"unit": "sf"
		},
		"glazing.west": {
			"type": "double",
			"unit": "sf"
		},
		"glazing.northwest": {
			"type": "double",
			"unit": "sf"
		},
		"glazing.horizontal": {
			"type": "double",
			"unit": "sf"
		},
		"glazing.coefficient": {
			"type": "double",
			"unit": "pu"
		},
		"occupancy": {
			"type": "double"
		},
		"occupants": {
			"type": "double"
		},
		"schedule": {
			"type": "char256"
		},
		"air_temperature": {
			"type": "double",
			"unit": "degF"
		},
		"mass_temperature": {
			"type": "double",
			"unit": "degF"
		},
		"temperature_change": {
			"type": "double",
			"unit": "degF/h"
		},
		"outdoor_temperature": {
			"type": "double",
			"unit": "degF"
		},
		"Qh": {
			"type": "double",
			"unit": "Btu/h"
		},
		"Qs": {
			"type": "double",
			"unit": "Btu/h"
		},
		"Qi": {
			"type": "double",
			"unit": "Btu/h"
		},
		"Qz": {
			"type": "double",
			"unit": "Btu/h"
		},
		"hvac_mode": {
			"type": "enumeration",
			"keywords": {
				"OFF":0,
				"VENT":5,
				"ECON":4,
				"COOL":3,
				"AUX":2,
				"HEAT":1
			}
		},
		"hvac.cooling.balance_temperature": {
			"type": "double",
			"unit": "degF"
		},
		"hvac.cooling.capacity": {
			"type": "double",
			"unit": "Btu/h"
		},
		"hvac.cooling.capacity_perF": {
			"type": "double",
			"unit": "Btu/degF/h"
		},
		"hvac.cooling.design_temperature": {
			"type": "double",
			"unit": "degF"
		},
		"hvac.cooling.efficiency": {
			"type": "double",
			"unit": "pu"
		},
		"hvac.cooling.cop": {
			"type": "double",
			"unit": "pu"
		},
		"hvac.heating.balance_temperature": {
			"type": "double",
			"unit": "degF"
		},
		"hvac.heating.capacity": {
			"type": "double",
			"unit": "Btu/h"
		},
		"hvac.heating.capacity_perF": {
			"type": "double",
			"unit": "Btu/degF/h"
		},
		"hvac.heating.design_temperature": {
			"type": "double",
			"unit": "degF"
		},
		"hvac.heating.efficiency": {
			"type": "double",
			"unit": "pu"
		},
		"hvac.heating.cop": {
			"type": "double",
			"unit": "pu"
		},
		"lights.capacity": {
			"type": "double",
			"unit": "kW"
		},
		"lights.fraction": {
			"type": "double",
			"unit": "pu"
		},
		"plugs.capacity": {
			"type": "double",
			"unit": "kW"
		},
		"plugs.fraction": {
			"type": "double",
			"unit": "pu"
		},
		"demand": {
			"type": "complex",
			"unit": "kW"
		},
		"total_load": {
			"type": "complex",
			"unit": "kW"
		},
		"energy": {
			"type": "complex",
			"unit": "kWh"
		},
		"power_factor": {
			"type": "double"
		},
		"power": {
			"type": "complex",
			"unit": "kW"
		},
		"current": {
			"type": "complex",
			"unit": "A"
		},
		"admittance": {
			"type": "complex",
			"unit": "1/Ohm"
		},
		"hvac.demand": {
			"type": "complex",
			"unit": "kW"
		},
		"hvac.load": {
			"type": "complex",
			"unit": "kW"
		},
		"hvac.energy": {
			"type": "complex",
			"unit": "kWh"
		},
		"hvac.power_factor": {
			"type": "double"
		},
		"lights.demand": {
			"type": "complex",
			"unit": "kW"
		},
		"lights.load": {
			"type": "complex",
			"unit": "kW"
		},
		"lights.energy": {
			"type": "complex",
			"unit": "kWh"
		},
		"lights.power_factor": {
			"type": "double"
		},
		"lights.heatgain_fraction": {
			"type": "double"
		},
		"lights.heatgain": {
			"type": "double",
			"unit": "kW"
		},
		"plugs.demand": {
			"type": "complex",
			"unit": "kW"
		},
		"plugs.load": {
			"type": "complex",
			"unit": "kW"
		},
		"plugs.energy": {
			"type": "complex",
			"unit": "kWh"
		},
		"plugs.power_factor": {
			"type": "double"
		},
		"plugs.heatgain_fraction": {
			"type": "double"
		},
		"plugs.heatgain": {
			"type": "double",
			"unit": "kW"
		},
		"cooling_setpoint": {
			"type": "double",
			"unit": "degF"
		},
		"heating_setpoint": {
			"type": "double",
			"unit": "degF"
		},
		"thermostat_deadband": {
			"type": "double",
			"unit": "degF"
		},
		"control.ventilation_fraction": {
			"type": "double"
		},
		"control.lighting_fraction": {
			"type": "double"
		},
		"ACH": {
			"type": "double"
		}
	}
}
,
"connection": {
	"global_attributes": {
		"security": {
			"type": "enumeration",
			"keywords": {
				"PARANOID":5,
				"EXTREME":4,
				"HIGH":3,
				"STANDARD":2,
				"LOW":1,
				"NONE":0
			},
			"description": "default connection security level"
		},
		"lockout": {
			"type": "double",
			"unit": "s",
			"description": "default connection security lockout time"
		},
		"enable_subsecond_models": {
			"type": "bool",
			"description": "Enable deltamode capabilities within the connection module"
		}
	},
	"fncs_msg": {
		"version": {
			"type": "double",
			"description": "fncs_msg version"
		},
		"message_type": {
			"type": "enumeration",
			"keywords": {
				"JSON":1,
				"GENERAL":0
			},
			"description": "use this for wanting to send a bundled json formatted message in a single topic"
		},
		"gridappd_publish_period": {
			"type": "int32",
			"description": "use this with json bundling to set the period [s] at which data is published."
		},
		"aggregate_publications": {
			"type": "bool",
			"description": "enable FNCS flag to aggregate publications"
		},
		"aggregate_subscriptions": {
			"type": "bool",
			"description": "enable FNCS flag to aggregate subscriptions"
		}
	},
	"helics_msg": {
		"version": {
			"type": "double",
			"description": "helics_msg version"
		},
		"message_type": {
			"type": "enumeration",
			"keywords": {
				"JSON":1,
				"GENERAL":0
			},
			"description": "use this for want to send a bundled json formatted messag in a single topic."
		},
		"publish_period": {
			"type": "int32",
			"description": "use this with json bundling to set the period [s] at which data is published."
		}
	},
	"json": {
		"native": {
			"type": "parent"
		},
		"version": {
			"type": "double",
			"description": "json version"
		}
	},
	"native": {
		"mode": {
			"type": "enumeration",
			"keywords": {
				"NONE":0,
				"CLIENT":1,
				"SERVER":2
			},
			"description": "connection mode"
		},
		"transport": {
			"type": "enumeration",
			"keywords": {
				"NONE":0,
				"TCP":2,
				"UDP":1
			},
			"description": "connection transport"
		},
		"timestep": {
			"type": "double",
			"unit": "s",
			"description": "timestep between updates"
		}
	}
}
,
"generators": {
	"global_attributes": {
		"default_line_voltage": {
			"type": "double",
			"unit": "V",
			"description": "line voltage (L-N) to use when no circuit is attached"
		},
		"enable_subsecond_models": {
			"type": "bool",
			"description": "Enable deltamode capabilities within the generators module"
		},
		"all_generator_delta": {
			"type": "bool",
			"description": "Forces all generator objects that are capable to participate in deltamode"
		},
		"deltamode_timestep": {
			"type": "double",
			"unit": "ns",
			"description": "Desired minimum timestep for deltamode-related simulations"
		},
		"default_temperature_value": {
			"type": "double",
			"unit": "degF",
			"description": "Temperature when no climate module is detected"
		}
	},
	"battery": {
		"generator_mode": {
			"type": "enumeration",
			"keywords": {
				"POWER_VOLTAGE_HYBRID":7,
				"VOLTAGE_CONTROLLED":6,
				"POWER_DRIVEN":5,
				"SUPPLY_DRIVEN":4,
				"CONSTANT_PF":3,
				"CONSTANT_PQ":2,
				"CONSTANT_V":1,
				"UNKNOWN":0
			},
			"description": "LEGACY MODEL: Selects generator control mode when using legacy model; in non-legacy models, this should be SUPPLY_DRIVEN."
		},
		"additional_controls": {
			"type": "enumeration",
			"keywords": {
				"LINEAR_TEMPERATURE":1,
				"NONE":0
			},
			"description": "LEGACY MODEL: In conjunction with POWER_DRIVEN, VOLTAGE_CONTROLLED, and POWER_VOLTAGE_HYBRID, this will activate control set points that adjust with temperature"
		},
		"generator_status": {
			"type": "enumeration",
			"keywords": {
				"ONLINE":2,
				"OFFLINE":1
			},
			"description": "describes whether the generator is online or offline"
		},
		"rfb_size": {
			"type": "enumeration",
			"keywords": {
				"LARGE":4,
				"MED_HIGH_ENERGY":3,
				"MED_COMMERCIAL":2,
				"SMALL":1,
				"HOUSEHOLD":5
			},
			"description": "Default settings for certain sizes of batteries"
		},
		"power_type": {
			"type": "enumeration",
			"keywords": {
				"DC":1,
				"AC":2
			},
			"description": "LEGACY MODEL: Not currently used"
		},
		"battery_state": {
			"type": "enumeration",
			"keywords": {
				"CONFLICTED":5,
				"EMPTY":4,
				"FULL":3,
				"WAITING":0,
				"DISCHARGING":2,
				"CHARGING":1
			},
			"description": "Describes the current state of the battery"
		},
		"number_battery_state_changes": {
			"type": "double",
			"description": "LEGACY MODEL: Number of times battery switches between charging and discharging"
		},
		"monitored_power": {
			"type": "double",
			"unit": "W",
			"description": "LEGACY MODEL: output only; power output value of parent meter when performing load following modes (POWER_DRIVEN)"
		},
		"power_set_high": {
			"type": "double",
			"unit": "W",
			"description": "LEGACY MODEL: high set point of dead band for load following (POWER_DRIVEN)"
		},
		"power_set_low": {
			"type": "double",
			"unit": "W",
			"description": "LEGACY MODEL: low set point of dead band for load following (POWER_DRIVEN)"
		},
		"power_set_high_highT": {
			"type": "double",
			"unit": "W",
			"description": "LEGACY MODEL: high set point of dead band for load following at higher temperatures (POWER_DRIVEN + LINEAR_TEMPERATURE)"
		},
		"power_set_low_highT": {
			"type": "double",
			"unit": "W",
			"description": "LEGACY MODEL: low set point of dead band for load following at higher temperatures (POWER_DRIVEN + LINEAR_TEMPERATURE)"
		},
		"check_power_low": {
			"type": "double",
			"unit": "W",
			"description": "LEGACY MODEL: high set point of dead band for load following at lower temperatures (POWER_DRIVEN + LINEAR_TEMPERATURE)"
		},
		"check_power_high": {
			"type": "double",
			"unit": "W",
			"description": "LEGACY MODEL: low set point of dead band for load following at lower temperatures (POWER_DRIVEN + LINEAR_TEMPERATURE)"
		},
		"voltage_set_high": {
			"type": "double",
			"unit": "V",
			"description": "LEGACY MODEL: high set point for voltage control"
		},
		"voltage_set_low": {
			"type": "double",
			"unit": "V",
			"description": "LEGACY MODEL: low set point for voltage control"
		},
		"deadband": {
			"type": "double",
			"unit": "V",
			"description": "LEGACY MODEL: voltage deadband"
		},
		"sensitivity": {
			"type": "double",
			"description": "LEGACY MODEL: describes how sensitive the control is to temperature excursions; defines slope of linear control"
		},
		"high_temperature": {
			"type": "double",
			"description": "LEGACY MODEL: high temperature of linear control; defines slope"
		},
		"midpoint_temperature": {
			"type": "double",
			"description": "LEGACY MODEL: midpoint temperature of linear control; defines slope"
		},
		"low_temperature": {
			"type": "double",
			"description": "LEGACY MODEL: low temperature of linear control; defines slope"
		},
		"scheduled_power": {
			"type": "double",
			"unit": "W",
			"description": "LEGACY MODEL: real power output of battery/inverter system"
		},
		"Rinternal": {
			"type": "double",
			"unit": "Ohm",
			"description": "LEGACY MODEL: the internal resistance of the battery."
		},
		"V_Max": {
			"type": "double",
			"unit": "V",
			"description": "LEGACY MODEL: the maximum terminal voltage of the battery."
		},
		"I_Max": {
			"type": "complex",
			"unit": "A",
			"description": "LEGACY MODEL: the maximum current output of the battery."
		},
		"E_Max": {
			"type": "double",
			"unit": "Wh",
			"description": "LEGACY MODEL: the maximum capacity of the battery."
		},
		"P_Max": {
			"type": "double",
			"unit": "W",
			"description": "LEGACY MODEL: the maximum power output of the battery."
		},
		"power_factor": {
			"type": "double",
			"description": "LEGACY MODEL: the power factor output of the battery."
		},
		"Energy": {
			"type": "double",
			"unit": "Wh",
			"description": "LEGACY MODEL: the available capacity of the battery."
		},
		"efficiency": {
			"type": "double",
			"unit": "unit",
			"description": "LEGACY MODEL: the efficiency of the battery."
		},
		"base_efficiency": {
			"type": "double",
			"unit": "unit",
			"description": "LEGACY MODEL: the efficiency of the battery at rated voltaged and current."
		},
		"parasitic_power_draw": {
			"type": "double",
			"unit": "W",
			"description": "LEGACY MODEL: the parasytic power draw of the battery when idle."
		},
		"V_Out": {
			"type": "complex",
			"unit": "V",
			"description": "LEGACY MODEL: the AC voltage at the terminals of the battery."
		},
		"I_Out": {
			"type": "complex",
			"unit": "A",
			"description": "LEGACY MODEL: the AC current output of the battery."
		},
		"VA_Out": {
			"type": "complex",
			"unit": "VA",
			"description": "LEGACY MODEL: the power output of the battery."
		},
		"I_In": {
			"type": "complex",
			"unit": "A",
			"description": "LEGACY MODEL: the current flowing into the battery of the battery."
		},
		"V_Internal": {
			"type": "complex",
			"unit": "V",
			"description": "LEGACY MODEL: the internal voltage of the battery."
		},
		"I_Internal": {
			"type": "complex",
			"unit": "A",
			"description": "LEGACY MODEL: the internal current of the battery."
		},
		"I_Prev": {
			"type": "complex",
			"unit": "A",
			"description": "LEGACY MODEL: the previous current output of the battery."
		},
		"power_transferred": {
			"type": "double",
			"description": "LEGACY MODEL: the power output of the battery."
		},
		"use_internal_battery_model": {
			"type": "bool",
			"description": "Enables the INTERNAL BATTERY MODEL."
		},
		"battery_type": {
			"type": "enumeration",
			"keywords": {
				"LEAD_ACID":2,
				"LI_ION":1,
				"UNKNOWON":0
			},
			"description": "INTERNAL BATTERY MODEL: the type of the battery. Used to determine the soc vs voltage curve."
		},
		"nominal_voltage": {
			"type": "double",
			"unit": "V",
			"description": "INTERNAL BATTERY MODEL: the rated DC voltage at the terminals of the battery."
		},
		"rated_power": {
			"type": "double",
			"unit": "W",
			"description": "INTERNAL BATTERY MODEL: the rated power output of the battery."
		},
		"battery_capacity": {
			"type": "double",
			"unit": "Wh",
			"description": "INTERNAL BATTERY MODEL: the rated battery capacity of the battery."
		},
		"round_trip_efficiency": {
			"type": "double",
			"unit": "pu",
			"description": "INTERNAL BATTERY MODEL: the round trip efficiency of the battery according to a full discharge/charge cycle."
		},
		"state_of_charge": {
			"type": "double",
			"unit": "pu",
			"description": "INTERNAL BATTERY MODEL: the current state of charge of the battery."
		},
		"battery_load": {
			"type": "double",
			"unit": "W",
			"description": "INTERNAL BATTERY MODEL: the current power output of the battery."
		},
		"reserve_state_of_charge": {
			"type": "double",
			"unit": "pu",
			"description": "INTERNAL BATTERY MODEL: the reserve state of charge the battery can reach."
		}
	},
	"central_dg_control": {
		"controlled_dgs": {
			"type": "char32",
			"description": "the group ID of the dg objects the controller controls."
		},
		"feederhead_meter": {
			"type": "object",
			"description": "the name of the meter."
		},
		"control_mode_0": {
			"type": "enumeration",
			"keywords": {
				"PEAK_SHAVING":2,
				"CONSTANT_PF":1,
				"NO_CONTROL":0
			}
		},
		"control_mode_1": {
			"type": "enumeration",
			"keywords": {
				"PEAK_SHAVING":2,
				"CONSTANT_PF":1,
				"NO_CONTROL":0
			}
		},
		"control_mode_2": {
			"type": "enumeration",
			"keywords": {
				"PEAK_SHAVING":2,
				"CONSTANT_PF":1,
				"NO_CONTROL":0
			}
		},
		"control_mode_3": {
			"type": "enumeration",
			"keywords": {
				"PEAK_SHAVING":2,
				"CONSTANT_PF":1,
				"NO_CONTROL":0
			}
		},
		"peak_S": {
			"type": "double",
			"unit": "W"
		},
		"pf_low": {
			"type": "double",
			"unit": "unit"
		},
		"pf_high": {
			"type": "double",
			"unit": "unit"
		}
	},
	"controller_dg": {
		"groupid_dg": {
			"type": "char32",
			"description": "the group ID of the dg objects the controller controls."
		},
		"ki": {
			"type": "double",
			"description": "parameter of the propotional control"
		},
		"kp": {
			"type": "double",
			"description": "parameter of the integral control"
		},
		"gain": {
			"type": "double",
			"description": "Gain of the controller"
		},
		"ki_QV": {
			"type": "double",
			"description": "parameter of the propotional control for secondary voltage control"
		},
		"kp_QV": {
			"type": "double",
			"description": "parameter of the integral control for secondary voltage control"
		},
		"gain_QV": {
			"type": "double",
			"description": "Gain of the controller for secondary voltage control"
		}
	},
	"diesel_dg": {
		"Gen_type": {
			"type": "enumeration",
			"keywords": {
				"DYN_SYNCHRONOUS":1,
				"CONSTANT_PQ":2
			},
			"description": "Dynamics-capable implementation of synchronous diesel generator"
		},
		"Rated_V": {
			"type": "double",
			"unit": "V",
			"description": "nominal line-line voltage in Volts"
		},
		"Rated_VA": {
			"type": "double",
			"unit": "VA",
			"description": "nominal capacity in VA"
		},
		"overload_limit": {
			"type": "double",
			"unit": "pu",
			"description": "per-unit value of the maximum power the generator can provide"
		},
		"deltamode_only_changes": {
			"type": "bool",
			"description": "Flag to prevent reinitialization of dynamic equations - implies all changes are in deltamode"
		},
		"current_out_A": {
			"type": "complex",
			"unit": "A",
			"description": "Output current of phase A"
		},
		"current_out_B": {
			"type": "complex",
			"unit": "A",
			"description": "Output current of phase B"
		},
		"current_out_C": {
			"type": "complex",
			"unit": "A",
			"description": "Output current of phase C"
		},
		"power_out_A": {
			"type": "complex",
			"unit": "VA",
			"description": "Output power of phase A"
		},
		"power_out_B": {
			"type": "complex",
			"unit": "VA",
			"description": "Output power of phase B"
		},
		"power_out_C": {
			"type": "complex",
			"unit": "VA",
			"description": "Output power of phase C"
		},
		"real_power_out_A": {
			"type": "double",
			"unit": "W",
			"description": "Real power output of phase A"
		},
		"real_power_out_B": {
			"type": "double",
			"unit": "W",
			"description": "Real power output of phase B"
		},
		"real_power_out_C": {
			"type": "double",
			"unit": "W",
			"description": "Real power output of phase C"
		},
		"reactive_power_out_A": {
			"type": "double",
			"unit": "VAr",
			"description": "Reactive power output of phase A"
		},
		"reactive_power_out_B": {
			"type": "double",
			"unit": "VAr",
			"description": "Reactive power output of phase B"
		},
		"reactive_power_out_C": {
			"type": "double",
			"unit": "VAr",
			"description": "Reactive power output of phase C"
		},
		"omega_ref": {
			"type": "double",
			"unit": "rad/s",
			"description": "Reference frequency of generator (rad/s)"
		},
		"inertia": {
			"type": "double",
			"description": "Inertial constant (H) of generator"
		},
		"damping": {
			"type": "double",
			"description": "Damping constant (D) of generator"
		},
		"number_poles": {
			"type": "double",
			"description": "Number of poles in the generator"
		},
		"Ra": {
			"type": "double",
			"unit": "pu",
			"description": "Stator resistance (p.u.)"
		},
		"Xd": {
			"type": "double",
			"unit": "pu",
			"description": "d-axis reactance (p.u.)"
		},
		"Xq": {
			"type": "double",
			"unit": "pu",
			"description": "q-axis reactance (p.u.)"
		},
		"Xdp": {
			"type": "double",
			"unit": "pu",
			"description": "d-axis transient reactance (p.u.)"
		},
		"Xqp": {
			"type": "double",
			"unit": "pu",
			"description": "q-axis transient reactance (p.u.)"
		},
		"Xdpp": {
			"type": "double",
			"unit": "pu",
			"description": "d-axis subtransient reactance (p.u.)"
		},
		"Xqpp": {
			"type": "double",
			"unit": "pu",
			"description": "q-axis subtransient reactance (p.u.)"
		},
		"Xl": {
			"type": "double",
			"unit": "pu",
			"description": "Leakage reactance (p.u.)"
		},
		"Tdp": {
			"type": "double",
			"unit": "s",
			"description": "d-axis short circuit time constant (s)"
		},
		"Tdop": {
			"type": "double",
			"unit": "s",
			"description": "d-axis open circuit time constant (s)"
		},
		"Tqop": {
			"type": "double",
			"unit": "s",
			"description": "q-axis open circuit time constant (s)"
		},
		"Tdopp": {
			"type": "double",
			"unit": "s",
			"description": "d-axis open circuit subtransient time constant (s)"
		},
		"Tqopp": {
			"type": "double",
			"unit": "s",
			"description": "q-axis open circuit subtransient time constant (s)"
		},
		"Ta": {
			"type": "double",
			"unit": "s",
			"description": "Armature short-circuit time constant (s)"
		},
		"X0": {
			"type": "complex",
			"unit": "pu",
			"description": "Zero sequence impedance (p.u.)"
		},
		"X2": {
			"type": "complex",
			"unit": "pu",
			"description": "Negative sequence impedance (p.u.)"
		},
		"rotor_speed_convergence": {
			"type": "double",
			"unit": "rad/s",
			"description": "Convergence criterion on rotor speed used to determine when to exit deltamode"
		},
		"voltage_convergence": {
			"type": "double",
			"unit": "V",
			"description": "Convergence criterion for voltage changes (if exciter present) to determine when to exit deltamode"
		},
		"current_convergence": {
			"type": "double",
			"unit": "A",
			"description": "Convergence criterion for current changes on first timestep - basically initialization of system"
		},
		"rotor_speed_convergence_enabled": {
			"type": "bool",
			"description": "Uses rotor_speed_convergence to determine if an exit of deltamode is needed"
		},
		"voltage_magnitude_convergence_enabled": {
			"type": "bool",
			"description": "Uses voltage_convergence to determine if an exit of deltamode is needed - only works if an exciter is present"
		},
		"rotor_angle": {
			"type": "double",
			"unit": "rad",
			"description": "rotor angle state variable"
		},
		"rotor_speed": {
			"type": "double",
			"unit": "rad/s",
			"description": "machine speed state variable"
		},
		"field_voltage": {
			"type": "double",
			"unit": "pu",
			"description": "machine field voltage state variable"
		},
		"flux1d": {
			"type": "double",
			"unit": "pu",
			"description": "machine transient flux on d-axis state variable"
		},
		"flux2q": {
			"type": "double",
			"unit": "pu",
			"description": "machine subtransient flux on q-axis state variable"
		},
		"EpRotated": {
			"type": "complex",
			"unit": "pu",
			"description": "d-q rotated E-prime internal voltage state variable"
		},
		"VintRotated": {
			"type": "complex",
			"unit": "pu",
			"description": "d-q rotated Vint voltage state variable"
		},
		"Eint_A": {
			"type": "complex",
			"unit": "V",
			"description": "Unrotated, unsequenced phase A internal voltage"
		},
		"Eint_B": {
			"type": "complex",
			"unit": "V",
			"description": "Unrotated, unsequenced phase B internal voltage"
		},
		"Eint_C": {
			"type": "complex",
			"unit": "V",
			"description": "Unrotated, unsequenced phase C internal voltage"
		},
		"Irotated": {
			"type": "complex",
			"unit": "pu",
			"description": "d-q rotated sequence current state variable"
		},
		"pwr_electric": {
			"type": "complex",
			"unit": "VA",
			"description": "Current electrical output of machine"
		},
		"pwr_mech": {
			"type": "double",
			"unit": "W",
			"description": "Current mechanical output of machine"
		},
		"torque_mech": {
			"type": "double",
			"unit": "N*m",
			"description": "Current mechanical torque of machine"
		},
		"torque_elec": {
			"type": "double",
			"unit": "N*m",
			"description": "Current electrical torque output of machine"
		},
		"wref": {
			"type": "double",
			"unit": "pu",
			"description": "wref input to governor controls (per-unit)"
		},
		"w_ref": {
			"type": "double",
			"unit": "rad/s",
			"description": "w_ref input to governor controls (rad/s) - takes priority over wref"
		},
		"vset": {
			"type": "double",
			"unit": "pu",
			"description": "vset input to AVR controls (per-unit)"
		},
		"Vset": {
			"type": "double",
			"unit": "pu",
			"description": "Vset input to AVR controls (per-unit)"
		},
		"Pref": {
			"type": "double",
			"unit": "pu",
			"description": "Pref input to governor controls (per-unit), if supported"
		},
		"Pset": {
			"type": "double",
			"unit": "pu",
			"description": "Pset input to governor controls (per-unit), if supported"
		},
		"fset": {
			"type": "double",
			"unit": "Hz",
			"description": "fset input to governor controls (Hz) - takes priority over wref"
		},
		"Qref": {
			"type": "double",
			"unit": "pu",
			"description": "Qref input to govornor or AVR controls (per-unit), if supported"
		},
		"Exciter_type": {
			"type": "enumeration",
			"keywords": {
				"SEXS":2,
				"NO_EXC":1
			},
			"description": "Simplified Excitation System"
		},
		"SEXS_mode": {
			"type": "enumeration",
			"keywords": {
				"Q_V_DROOP":3,
				"CONSTANT_Q":2,
				"CONSTANT_VOLTAGE":1
			},
			"description": "Q-V droop function"
		},
		"KA": {
			"type": "double",
			"unit": "pu",
			"description": "Exciter gain (p.u.)"
		},
		"TA": {
			"type": "double",
			"unit": "s",
			"description": "Exciter time constant (seconds)"
		},
		"TB": {
			"type": "double",
			"unit": "s",
			"description": "Exciter transient gain reduction time constant (seconds)"
		},
		"TC": {
			"type": "double",
			"unit": "s",
			"description": "Exciter transient gain reduction time constant (seconds)"
		},
		"EMAX": {
			"type": "double",
			"unit": "pu",
			"description": "Exciter upper limit (p.u.)"
		},
		"EMIN": {
			"type": "double",
			"unit": "pu",
			"description": "Exciter lower limit (p.u.)"
		},
		"Vterm_max": {
			"type": "double",
			"unit": "pu",
			"description": "Upper voltage limit for super-second (p.u.)"
		},
		"Vterm_min": {
			"type": "double",
			"unit": "pu",
			"description": "Lower voltage limit for super-second (p.u.)"
		},
		"mq_QV_Droop": {
			"type": "double",
			"unit": "pu",
			"description": "Q-V droop slope"
		},
		"SEXS_Q_V_droop": {
			"type": "double",
			"unit": "pu",
			"description": "Q-V droop slope"
		},
		"Vset_QV_droop": {
			"type": "double",
			"unit": "pu",
			"description": "Voltage setpoint of QV droop"
		},
		"SEXS_Vset": {
			"type": "double",
			"unit": "pu",
			"description": "Voltage setpoint of QV droop"
		},
		"Vref_SEXS": {
			"type": "double",
			"unit": "pu",
			"description": "Voltage reference for SEXS exciter"
		},
		"bias": {
			"type": "double",
			"unit": "pu",
			"description": "Exciter bias state variable"
		},
		"xe": {
			"type": "double",
			"unit": "pu",
			"description": "Exciter state variable"
		},
		"xb": {
			"type": "double",
			"unit": "pu",
			"description": "Exciter state variable"
		},
		"x_cvr1": {
			"type": "double",
			"unit": "pu",
			"description": "Exciter state variable - CVR mode"
		},
		"x_cvr2": {
			"type": "double",
			"unit": "pu",
			"description": "Exciter state variable - CVR mode"
		},
		"Vref": {
			"type": "double",
			"unit": "pu",
			"description": "Exciter CVR control voltage reference value"
		},
		"CVR_mode": {
			"type": "enumeration",
			"keywords": {
				"Feedback":2,
				"HighOrder":1
			},
			"description": "First order control mode with feedback loop"
		},
		"P_CONSTANT_ki": {
			"type": "double",
			"description": "parameter of the integration control for constant P mode"
		},
		"P_CONSTANT_kp": {
			"type": "double",
			"description": "parameter of the proportional control for constant P mode"
		},
		"Exciter_Q_constant_ki": {
			"type": "double",
			"unit": "pu",
			"description": "parameter of the integration control for constant Q mode"
		},
		"Exciter_Q_constant_kp": {
			"type": "double",
			"unit": "pu",
			"description": "parameter of the propotional control for constant Q mode"
		},
		"P_CONSTANT_Pref": {
			"type": "double",
			"unit": "pu",
			"description": "Pref input to governor controls (per-unit), if supported"
		},
		"Exciter_Q_constant_Qref": {
			"type": "double",
			"unit": "pu",
			"description": "Qref input to AVR controls (per-unit), if supported"
		},
		"CVR_enabled": {
			"type": "bool",
			"description": "True if the CVR control is enabled in the exciter"
		},
		"CVR_ki_cvr": {
			"type": "double",
			"unit": "pu",
			"description": "parameter of the integration control for CVR control"
		},
		"CVR_kp_cvr": {
			"type": "double",
			"unit": "pu",
			"description": "parameter of the proportional control for CVR control"
		},
		"CVR_kd_cvr": {
			"type": "double",
			"unit": "pu",
			"description": "parameter of the deviation control for CVR control"
		},
		"CVR_kt_cvr": {
			"type": "double",
			"unit": "pu",
			"description": "parameter of the gain in feedback loop for CVR control"
		},
		"CVR_kw_cvr": {
			"type": "double",
			"unit": "pu",
			"description": "parameter of the gain in feedback loop for CVR control"
		},
		"CVR_PI": {
			"type": "bool",
			"description": "True if the PI controller is implemented in CVR control"
		},
		"CVR_PID": {
			"type": "bool",
			"description": "True if the PID controller is implemented in CVR control"
		},
		"CVR_Kd1": {
			"type": "double",
			"description": "parameter of the second order transfer function for CVR control"
		},
		"CVR_Kd2": {
			"type": "double",
			"description": "parameter of the second order transfer function for CVR control"
		},
		"CVR_Kd3": {
			"type": "double",
			"description": "parameter of the second order transfer function for CVR control"
		},
		"CVR_Kn1": {
			"type": "double",
			"description": "parameter of the second order transfer function for CVR control"
		},
		"CVR_Kn2": {
			"type": "double",
			"description": "parameter of the second order transfer function for CVR control"
		},
		"vset_delta_MAX": {
			"type": "double",
			"unit": "pu",
			"description": "Maximum delta Vset limit"
		},
		"vset_delta_MIN": {
			"type": "double",
			"unit": "pu",
			"description": "Minimum delta Vset limit"
		},
		"vadd": {
			"type": "double",
			"unit": "pu",
			"description": "Delta Vset"
		},
		"vadd_a": {
			"type": "double",
			"unit": "pu",
			"description": "Delta Vset before going into bound check"
		},
		"Governor_type": {
			"type": "enumeration",
			"keywords": {
				"P_CONSTANT":6,
				"GGOV1":5,
				"GAST":3,
				"DEGOV1":2,
				"NO_GOV":1
			},
			"description": "P_CONSTANT mode Governor Model"
		},
		"P_f_droop_setting_mode": {
			"type": "enumeration",
			"keywords": {
				"PSET_MODE":1,
				"FSET_MODE":0
			},
			"description": "Definition of P-f droop curve"
		},
		"DEGOV1_R": {
			"type": "double",
			"unit": "pu",
			"description": "Governor droop constant (p.u.)"
		},
		"DEGOV1_T1": {
			"type": "double",
			"unit": "s",
			"description": "Governor electric control box time constant (s)"
		},
		"DEGOV1_T2": {
			"type": "double",
			"unit": "s",
			"description": "Governor electric control box time constant (s)"
		},
		"DEGOV1_T3": {
			"type": "double",
			"unit": "s",
			"description": "Governor electric control box time constant (s)"
		},
		"DEGOV1_T4": {
			"type": "double",
			"unit": "s",
			"description": "Governor actuator time constant (s)"
		},
		"DEGOV1_T5": {
			"type": "double",
			"unit": "s",
			"description": "Governor actuator time constant (s)"
		},
		"DEGOV1_T6": {
			"type": "double",
			"unit": "s",
			"description": "Governor actuator time constant (s)"
		},
		"DEGOV1_K": {
			"type": "double",
			"unit": "pu",
			"description": "Governor actuator gain"
		},
		"DEGOV1_TMAX": {
			"type": "double",
			"unit": "pu",
			"description": "Governor actuator upper limit (p.u.)"
		},
		"DEGOV1_TMIN": {
			"type": "double",
			"unit": "pu",
			"description": "Governor actuator lower limit (p.u.)"
		},
		"DEGOV1_TD": {
			"type": "double",
			"unit": "s",
			"description": "Governor combustion delay (s)"
		},
		"DEGOV1_x1": {
			"type": "double",
			"unit": "pu",
			"description": "Governor electric box state variable"
		},
		"DEGOV1_x2": {
			"type": "double",
			"unit": "pu",
			"description": "Governor electric box state variable"
		},
		"DEGOV1_x4": {
			"type": "double",
			"unit": "pu",
			"description": "Governor electric box state variable"
		},
		"DEGOV1_x5": {
			"type": "double",
			"unit": "pu",
			"description": "Governor electric box state variable"
		},
		"DEGOV1_x6": {
			"type": "double",
			"unit": "pu",
			"description": "Governor electric box state variable"
		},
		"DEGOV1_throttle": {
			"type": "double",
			"unit": "pu",
			"description": "Governor throttle state variable"
		},
		"GAST_R": {
			"type": "double",
			"unit": "pu",
			"description": "Governor droop constant (p.u.)"
		},
		"GAST_T1": {
			"type": "double",
			"unit": "s",
			"description": "Governor electric control box time constant (s)"
		},
		"GAST_T2": {
			"type": "double",
			"unit": "s",
			"description": "Governor electric control box time constant (s)"
		},
		"GAST_T3": {
			"type": "double",
			"unit": "s",
			"description": "Governor temperature limiter time constant (s)"
		},
		"GAST_AT": {
			"type": "double",
			"unit": "s",
			"description": "Governor Ambient Temperature load limit (units)"
		},
		"GAST_KT": {
			"type": "double",
			"unit": "pu",
			"description": "Governor temperature control loop gain"
		},
		"GAST_VMAX": {
			"type": "double",
			"unit": "pu",
			"description": "Governor actuator upper limit (p.u.)"
		},
		"GAST_VMIN": {
			"type": "double",
			"unit": "pu",
			"description": "Governor actuator lower limit (p.u.)"
		},
		"GAST_x1": {
			"type": "double",
			"description": "Governor electric box state variable"
		},
		"GAST_x2": {
			"type": "double",
			"description": "Governor electric box state variable"
		},
		"GAST_x3": {
			"type": "double",
			"description": "Governor electric box state variable"
		},
		"GAST_throttle": {
			"type": "double",
			"description": "Governor throttle state variable"
		},
		"GGOV1_R": {
			"type": "double",
			"unit": "pu",
			"description": "Permanent droop, p.u."
		},
		"GGOV1_Rselect": {
			"type": "int32",
			"description": "Feedback signal for droop, = 1 selected electrical power, = 0 none (isochronous governor), = -1 fuel valve stroke ( true stroke),= -2 governor output ( requested stroke)"
		},
		"GGOV1_Tpelec": {
			"type": "double",
			"unit": "s",
			"description": "Electrical power transducer time constant, sec. (>0.)"
		},
		"GGOV1_maxerr": {
			"type": "double",
			"unit": "pu",
			"description": "Maximum value for speed error signal"
		},
		"GGOV1_minerr": {
			"type": "double",
			"unit": "pu",
			"description": "Minimum value for speed error signal"
		},
		"GGOV1_Kpgov": {
			"type": "double",
			"description": "Governor proportional gain"
		},
		"GGOV1_Kigov": {
			"type": "double",
			"description": "Governor integral gain"
		},
		"GGOV1_Kdgov": {
			"type": "double",
			"description": "Governor derivative gain"
		},
		"GGOV1_Tdgov": {
			"type": "double",
			"unit": "s",
			"description": "Governor derivative controller time constant, sec."
		},
		"GGOV1_vmax": {
			"type": "double",
			"unit": "pu",
			"description": "Maximum valve position limit"
		},
		"GGOV1_vmin": {
			"type": "double",
			"unit": "pu",
			"description": "Minimum valve position limit"
		},
		"GGOV1_Tact": {
			"type": "double",
			"unit": "s",
			"description": "Actuator time constant"
		},
		"GGOV1_Kturb": {
			"type": "double",
			"description": "Turbine gain (>0.)"
		},
		"GGOV1_wfnl": {
			"type": "double",
			"unit": "pu",
			"description": "No load fuel flow, p.u"
		},
		"GGOV1_Tb": {
			"type": "double",
			"unit": "s",
			"description": "Turbine lag time constant, sec. (>0.)"
		},
		"GGOV1_Tc": {
			"type": "double",
			"unit": "s",
			"description": "Turbine lead time constant, sec."
		},
		"GGOV1_Fuel_lag": {
			"type": "int32",
			"description": "Switch for fuel source characteristic, = 0 for fuel flow independent of speed, = 1 fuel flow proportional to speed"
		},
		"GGOV1_Teng": {
			"type": "double",
			"unit": "s",
			"description": "Transport lag time constant for diesel engine"
		},
		"GGOV1_Tfload": {
			"type": "double",
			"unit": "s",
			"description": "Load Limiter time constant, sec. (>0.)"
		},
		"GGOV1_Kpload": {
			"type": "double",
			"description": "Load limiter proportional gain for PI controller"
		},
		"GGOV1_Kiload": {
			"type": "double",
			"description": "Load limiter integral gain for PI controller"
		},
		"GGOV1_Ldref": {
			"type": "double",
			"unit": "pu",
			"description": "Load limiter reference value p.u."
		},
		"GGOV1_Dm": {
			"type": "double",
			"unit": "pu",
			"description": "Speed sensitivity coefficient, p.u."
		},
		"GGOV1_ropen": {
			"type": "double",
			"unit": "pu/s",
			"description": "Maximum valve opening rate, p.u./sec."
		},
		"GGOV1_rclose": {
			"type": "double",
			"unit": "pu/s",
			"description": "Minimum valve closing rate, p.u./sec."
		},
		"GGOV1_Kimw": {
			"type": "double",
			"description": "Power controller (reset) gain"
		},
		"GGOV1_Pmwset": {
			"type": "double",
			"unit": "MW",
			"description": "Power controller setpoint, MW"
		},
		"GGOV1_aset": {
			"type": "double",
			"unit": "pu/s",
			"description": "Acceleration limiter setpoint, p.u. / sec."
		},
		"GGOV1_Ka": {
			"type": "double",
			"description": "Acceleration limiter Gain"
		},
		"GGOV1_Ta": {
			"type": "double",
			"unit": "s",
			"description": "Acceleration limiter time constant, sec. (>0.)"
		},
		"GGOV1_db": {
			"type": "double",
			"description": "Speed governor dead band"
		},
		"GGOV1_Tsa": {
			"type": "double",
			"unit": "s",
			"description": "Temperature detection lead time constant, sec."
		},
		"GGOV1_Tsb": {
			"type": "double",
			"unit": "s",
			"description": "Temperature detection lag time constant, sec."
		},
		"GGOV1_Pset": {
			"type": "double",
			"unit": "pu",
			"description": "GGOV1_Pset input to governor controls (per-unit), if supported"
		},
		"GGOV1_fset": {
			"type": "double",
			"unit": "Hz",
			"description": "fset input to governor controls (Hz) - takes priority over wref"
		},
		"GGOV1_Load_Limit_enable": {
			"type": "bool",
			"description": "Enables/disables load limiter (fsrt) of low-value-select"
		},
		"GGOV1_Acceleration_Limit_enable": {
			"type": "bool",
			"description": "Enables/disables acceleration limiter (fsra) of low-value-select"
		},
		"GGOV1_PID_enable": {
			"type": "bool",
			"description": "Enables/disables PID controller (fsrn) of low-value-select"
		},
		"GGOV1_fsrt": {
			"type": "double",
			"description": "Load limiter block input to low-value-select"
		},
		"GGOV1_fsra": {
			"type": "double",
			"description": "Acceleration limiter block input to low-value-select"
		},
		"GGOV1_fsrn": {
			"type": "double",
			"description": "PID block input to low-value-select"
		},
		"GGOV1_speed_error": {
			"type": "double",
			"unit": "pu",
			"description": "Speed difference in per-unit for input to PID controller"
		},
		"GGOV1_x1": {
			"type": "double"
		},
		"GGOV1_x2": {
			"type": "double"
		},
		"GGOV1_x2a": {
			"type": "double"
		},
		"GGOV1_x3": {
			"type": "double"
		},
		"GGOV1_x3a": {
			"type": "double"
		},
		"GGOV1_x4": {
			"type": "double"
		},
		"GGOV1_x4a": {
			"type": "double"
		},
		"GGOV1_x4b": {
			"type": "double"
		},
		"GGOV1_x5": {
			"type": "double"
		},
		"GGOV1_x5a": {
			"type": "double"
		},
		"GGOV1_x5b": {
			"type": "double"
		},
		"GGOV1_x6": {
			"type": "double"
		},
		"GGOV1_x7": {
			"type": "double"
		},
		"GGOV1_x7a": {
			"type": "double"
		},
		"GGOV1_x8": {
			"type": "double"
		},
		"GGOV1_x8a": {
			"type": "double"
		},
		"GGOV1_x9": {
			"type": "double"
		},
		"GGOV1_x9a": {
			"type": "double"
		},
		"GGOV1_x10": {
			"type": "double"
		},
		"GGOV1_x10a": {
			"type": "double"
		},
		"GGOV1_x10b": {
			"type": "double"
		},
		"GGOV1_ValveStroke": {
			"type": "double"
		},
		"GGOV1_FuelFlow": {
			"type": "double"
		},
		"GGOV1_GovOutPut": {
			"type": "double"
		},
		"GGOV1_RselectValue": {
			"type": "double"
		},
		"GGOV1_fsrtNoLim": {
			"type": "double"
		},
		"GGOV1_err2": {
			"type": "double"
		},
		"GGOV1_err2a": {
			"type": "double"
		},
		"GGOV1_err3": {
			"type": "double"
		},
		"GGOV1_err4": {
			"type": "double"
		},
		"GGOV1_err7": {
			"type": "double"
		},
		"GGOV1_LowValSelect1": {
			"type": "double"
		},
		"GGOV1_LowValSelect": {
			"type": "double"
		},
		"P_CONSTANT_Tpelec": {
			"type": "double",
			"unit": "s",
			"description": "Electrical power transducer time constant, sec. (>0.)"
		},
		"P_CONSTANT_Tact": {
			"type": "double",
			"unit": "s",
			"description": "Actuator time constant"
		},
		"P_CONSTANT_Kturb": {
			"type": "double",
			"unit": "pu",
			"description": "Turbine gain (>0.)"
		},
		"P_CONSTANT_wfnl": {
			"type": "double",
			"unit": "pu",
			"description": "No load fuel flow, p.u"
		},
		"P_CONSTANT_Tb": {
			"type": "double",
			"unit": "s",
			"description": "Turbine lag time constant, sec. (>0.)"
		},
		"P_CONSTANT_Tc": {
			"type": "double",
			"unit": "s",
			"description": "Turbine lead time constant, sec."
		},
		"P_CONSTANT_Teng": {
			"type": "double",
			"unit": "s",
			"description": "Transport lag time constant for diesel engine"
		},
		"P_CONSTANT_ropen": {
			"type": "double",
			"unit": "pu/s",
			"description": "Maximum valve opening rate, p.u./sec."
		},
		"P_CONSTANT_rclose": {
			"type": "double",
			"unit": "pu/s",
			"description": "Minimum valve closing rate, p.u./sec."
		},
		"P_CONSTANT_x1": {
			"type": "double",
			"unit": "pu"
		},
		"P_CONSTANT_x4": {
			"type": "double",
			"unit": "pu"
		},
		"P_CONSTANT_x4a": {
			"type": "double",
			"unit": "pu"
		},
		"P_CONSTANT_x4b": {
			"type": "double",
			"unit": "pu"
		},
		"P_CONSTANT_x5": {
			"type": "double",
			"unit": "pu"
		},
		"P_CONSTANT_x5a": {
			"type": "double",
			"unit": "pu"
		},
		"P_CONSTANT_x5b": {
			"type": "double",
			"unit": "pu"
		},
		"P_CONSTANT_x_Pconstant": {
			"type": "double",
			"unit": "pu"
		},
		"P_CONSTANT_err4": {
			"type": "double",
			"unit": "pu"
		},
		"P_CONSTANT_ValveStroke": {
			"type": "double",
			"unit": "pu"
		},
		"P_CONSTANT_FuelFlow": {
			"type": "double",
			"unit": "pu"
		},
		"P_CONSTANT_GovOutPut": {
			"type": "double",
			"unit": "pu"
		},
		"fuelEmissionCal": {
			"type": "bool",
			"description": "Boolean value indicating whether fuel and emission calculations are used or not"
		},
		"outputEnergy": {
			"type": "double",
			"unit": "kWh",
			"description": "Total energy(kWh) output from the generator"
		},
		"FuelUse": {
			"type": "double",
			"unit": "gal",
			"description": "Total fuel usage (gal) based on kW power output"
		},
		"efficiency": {
			"type": "double",
			"unit": "kWh/gal",
			"description": "Total energy output per fuel usage (kWh/gal)"
		},
		"CO2_emission": {
			"type": "double",
			"unit": "lb",
			"description": "Total CO2 emissions (lbs) based on fuel usage"
		},
		"SOx_emission": {
			"type": "double",
			"unit": "lb",
			"description": "Total SOx emissions (lbs) based on fuel usage"
		},
		"NOx_emission": {
			"type": "double",
			"unit": "lb",
			"description": "Total NOx emissions (lbs) based on fuel usage"
		},
		"PM10_emission": {
			"type": "double",
			"unit": "lb",
			"description": "Total PM-10 emissions (lbs) based on fuel usage"
		},
		"frequency_deviation": {
			"type": "double",
			"unit": "pu",
			"description": "Frequency deviation of diesel_dg"
		},
		"frequency_deviation_energy": {
			"type": "double",
			"unit": "pu",
			"description": "Frequency deviation accumulation of diesel_dg"
		},
		"frequency_deviation_max": {
			"type": "double",
			"unit": "pu",
			"description": "Frequency deviation of diesel_dg"
		},
		"realPowerChange": {
			"type": "double",
			"unit": "W",
			"description": "Real power output change of diesel_dg"
		},
		"ratio_f_p": {
			"type": "double",
			"unit": "pu",
			"description": "Ratio of frequency deviation to real power output change of diesel_dg"
		},
		"real_power_generation": {
			"type": "double",
			"unit": "W",
			"description": "The total real power generation"
		},
		"reactive_power_generation": {
			"type": "double",
			"unit": "VAr",
			"description": "The total reactive power generation"
		}
	},
	"energy_storage": {
		"generator_mode": {
			"type": "enumeration",
			"keywords": {
				"SUPPLY_DRIVEN":4,
				"CONSTANT_PF":3,
				"CONSTANT_PQ":2,
				"CONSTANT_V":1,
				"UNKNOWN":0
			}
		},
		"generator_status": {
			"type": "enumeration",
			"keywords": {
				"ONLINE":2,
				"OFFLINE":1
			}
		},
		"power_type": {
			"type": "enumeration",
			"keywords": {
				"DC":0,
				"AC":1
			}
		},
		"Rinternal": {
			"type": "double"
		},
		"V_Max": {
			"type": "double",
			"unit": "V"
		},
		"I_Max": {
			"type": "complex",
			"unit": "A"
		},
		"E_Max": {
			"type": "double"
		},
		"Energy": {
			"type": "double"
		},
		"efficiency": {
			"type": "double"
		},
		"Rated_kVA": {
			"type": "double",
			"unit": "kVA"
		},
		"V_Out": {
			"type": "complex",
			"unit": "V"
		},
		"I_Out": {
			"type": "complex",
			"unit": "A"
		},
		"VA_Out": {
			"type": "complex",
			"unit": "VA"
		},
		"V_In": {
			"type": "complex",
			"unit": "V"
		},
		"I_In": {
			"type": "complex",
			"unit": "A"
		},
		"V_Internal": {
			"type": "complex",
			"unit": "V"
		},
		"I_Internal": {
			"type": "complex",
			"unit": "A"
		},
		"I_Prev": {
			"type": "complex",
			"unit": "A"
		},
		"phases": {
			"type": "set",
			"keywords": {
				"S":112,
				"N":8,
				"C":4,
				"B":2,
				"A":1
			}
		}
	},
	"inverter": {
		"inverter_type": {
			"type": "enumeration",
			"keywords": {
				"FOUR_QUADRANT":4,
				"PWM":3,
				"TWELVE_PULSE":2,
				"SIX_PULSE":1,
				"TWO_PULSE":0
			},
			"description": "LEGACY MODEL: Sets efficiencies and other parameters; if using four_quadrant_control_mode, set this to FOUR_QUADRANT"
		},
		"four_quadrant_control_mode": {
			"type": "enumeration",
			"keywords": {
				"VOLTAGE_SOURCE":9,
				"GROUP_LOAD_FOLLOWING":7,
				"LOAD_FOLLOWING":5,
				"VOLT_VAR_FREQ_PWR":8,
				"VOLT_WATT":10,
				"VOLT_VAR":4,
				"CONSTANT_PF":2,
				"CONSTANT_PQ":1,
				"NONE":0
			},
			"description": "FOUR QUADRANT MODEL: Activates various control modes"
		},
		"pf_reg": {
			"type": "enumeration",
			"keywords": {
				"EXCLUDED":2,
				"INCLUDED_ALT":3,
				"INCLUDED":1
			},
			"description": "Activate (or not) power factor regulation in four_quadrant_control_mode"
		},
		"generator_status": {
			"type": "enumeration",
			"keywords": {
				"ONLINE":2,
				"OFFLINE":1
			},
			"description": "describes whether the generator is online or offline"
		},
		"generator_mode": {
			"type": "enumeration",
			"keywords": {
				"SUPPLY_DRIVEN":5,
				"CONSTANT_PF":4,
				"CONSTANT_PQ":2,
				"CONSTANT_V":1,
				"UNKNOWN":0
			},
			"description": "LEGACY MODEL: Selects generator control mode when using legacy model; in non-legacy models, this should be SUPPLY_DRIVEN."
		},
		"inverter_convergence_criterion": {
			"type": "double",
			"description": "The maximum change in error threshold for exitting deltamode."
		},
		"current_convergence": {
			"type": "double",
			"unit": "A",
			"description": "Convergence criterion for current changes on first timestep - basically initialization of system"
		},
		"V_In": {
			"type": "double",
			"unit": "V",
			"description": "DC voltage"
		},
		"I_In": {
			"type": "double",
			"unit": "A",
			"description": "DC current"
		},
		"P_In": {
			"type": "double",
			"unit": "W",
			"description": "DC power"
		},
		"VA_Out": {
			"type": "complex",
			"unit": "VA",
			"description": "AC power"
		},
		"Vdc": {
			"type": "double",
			"unit": "V",
			"description": "LEGACY MODEL: DC voltage"
		},
		"phaseA_V_Out": {
			"type": "complex",
			"unit": "V",
			"description": "AC voltage on A phase in three-phase system; 240-V connection on a triplex system"
		},
		"phaseB_V_Out": {
			"type": "complex",
			"unit": "V",
			"description": "AC voltage on B phase in three-phase system"
		},
		"phaseC_V_Out": {
			"type": "complex",
			"unit": "V",
			"description": "AC voltage on C phase in three-phase system"
		},
		"phaseA_I_Out": {
			"type": "complex",
			"unit": "V",
			"description": "AC current on A phase in three-phase system; 240-V connection on a triplex system"
		},
		"phaseB_I_Out": {
			"type": "complex",
			"unit": "V",
			"description": "AC current on B phase in three-phase system"
		},
		"phaseC_I_Out": {
			"type": "complex",
			"unit": "V",
			"description": "AC current on C phase in three-phase system"
		},
		"power_A": {
			"type": "complex",
			"unit": "VA",
			"description": "AC power on A phase in three-phase system; 240-V connection on a triplex system"
		},
		"power_B": {
			"type": "complex",
			"unit": "VA",
			"description": "AC power on B phase in three-phase system"
		},
		"power_C": {
			"type": "complex",
			"unit": "VA",
			"description": "AC power on C phase in three-phase system"
		},
		"curr_VA_out_A": {
			"type": "complex",
			"unit": "VA",
			"description": "AC power on A phase in three-phase system; 240-V connection on a triplex system"
		},
		"curr_VA_out_B": {
			"type": "complex",
			"unit": "VA",
			"description": "AC power on B phase in three-phase system"
		},
		"curr_VA_out_C": {
			"type": "complex",
			"unit": "VA",
			"description": "AC power on C phase in three-phase system"
		},
		"prev_VA_out_A": {
			"type": "complex",
			"unit": "VA",
			"description": "AC power on A phase in three-phase system; 240-V connection on a triplex system"
		},
		"prev_VA_out_B": {
			"type": "complex",
			"unit": "VA",
			"description": "AC power on B phase in three-phase system"
		},
		"prev_VA_out_C": {
			"type": "complex",
			"unit": "VA",
			"description": "AC power on C phase in three-phase system"
		},
		"phaseA_I_Forming": {
			"type": "complex",
			"unit": "A",
			"description": "AC current on A phase in three-phase system, only for grid_forming"
		},
		"phaseB_I_Forming": {
			"type": "complex",
			"unit": "A",
			"description": "AC current on B phase in three-phase system, only for grid_forming"
		},
		"phaseC_I_Forming": {
			"type": "complex",
			"unit": "A",
			"description": "AC current on C phase in three-phase system, only for grid_forming"
		},
		"phaseA_I_Following": {
			"type": "complex",
			"unit": "A",
			"description": "AC current on A phase in three-phase system, only for grid_following"
		},
		"phaseB_I_Following": {
			"type": "complex",
			"unit": "A",
			"description": "AC current on B phase in three-phase system, only for grid_following"
		},
		"phaseC_I_Following": {
			"type": "complex",
			"unit": "A",
			"description": "AC current on C phase in three-phase system, only for grid_following"
		},
		"P_Out": {
			"type": "double",
			"unit": "VA",
			"description": "FOUR QUADRANT MODEL: Scheduled real power out in CONSTANT_PQ control mode"
		},
		"Q_Out": {
			"type": "double",
			"unit": "VAr",
			"description": "FOUR QUADRANT MODEL: Schedule reactive power out in CONSTANT_PQ control mode"
		},
		"power_in": {
			"type": "double",
			"unit": "W",
			"description": "LEGACY MODEL: No longer used"
		},
		"rated_power": {
			"type": "double",
			"unit": "VA",
			"description": "FOUR QUADRANT MODEL: The rated power of the inverter"
		},
		"rated_battery_power": {
			"type": "double",
			"unit": "W",
			"description": "FOUR QUADRANT MODEL: The rated power of battery when battery is attached"
		},
		"inverter_efficiency": {
			"type": "double",
			"description": "FOUR QUADRANT MODEL: The efficiency of the inverter"
		},
		"battery_soc": {
			"type": "double",
			"unit": "pu",
			"description": "FOUR QUADRANT MODEL: The state of charge of an attached battery"
		},
		"soc_reserve": {
			"type": "double",
			"unit": "pu",
			"description": "FOUR QUADRANT MODEL: The reserve state of charge of an attached battery for islanding cases"
		},
		"power_factor": {
			"type": "double",
			"unit": "unit",
			"description": "FOUR QUADRANT MODEL: The power factor used for CONSTANT_PF control mode"
		},
		"islanded_state": {
			"type": "bool",
			"description": "FOUR QUADRANT MODEL: Boolean used to let control modes to act under island conditions"
		},
		"nominal_frequency": {
			"type": "double",
			"unit": "Hz"
		},
		"Pref": {
			"type": "double",
			"description": "DELTAMODE: The real power reference."
		},
		"Qref": {
			"type": "double",
			"description": "DELTAMODE: The reactive power reference."
		},
		"kpd": {
			"type": "double",
			"description": "DELTAMODE: The d-axis integration gain for the current modulation PI controller."
		},
		"kpq": {
			"type": "double",
			"description": "DELTAMODE: The q-axis integration gain for the current modulation PI controller."
		},
		"kid": {
			"type": "double",
			"description": "DELTAMODE: The d-axis proportional gain for the current modulation PI controller."
		},
		"kiq": {
			"type": "double",
			"description": "DELTAMODE: The q-axis proportional gain for the current modulation PI controller."
		},
		"kdd": {
			"type": "double",
			"description": "DELTAMODE: The d-axis differentiator gain for the current modulation PID controller"
		},
		"kdq": {
			"type": "double",
			"description": "DELTAMODE: The q-axis differentiator gain for the current modulation PID controller"
		},
		"epA": {
			"type": "double",
			"description": "DELTAMODE: The real current error for phase A or triplex phase."
		},
		"epB": {
			"type": "double",
			"description": "DELTAMODE: The real current error for phase B."
		},
		"epC": {
			"type": "double",
			"description": "DELTAMODE: The real current error for phase C."
		},
		"eqA": {
			"type": "double",
			"description": "DELTAMODE: The reactive current error for phase A or triplex phase."
		},
		"eqB": {
			"type": "double",
			"description": "DELTAMODE: The reactive current error for phase B."
		},
		"eqC": {
			"type": "double",
			"description": "DELTAMODE: The reactive current error for phase C."
		},
		"delta_epA": {
			"type": "double",
			"description": "DELTAMODE: The change in real current error for phase A or triplex phase."
		},
		"delta_epB": {
			"type": "double",
			"description": "DELTAMODE: The change in real current error for phase B."
		},
		"delta_epC": {
			"type": "double",
			"description": "DELTAMODE: The change in real current error for phase C."
		},
		"delta_eqA": {
			"type": "double",
			"description": "DELTAMODE: The change in reactive current error for phase A or triplex phase."
		},
		"delta_eqB": {
			"type": "double",
			"description": "DELTAMODE: The change in reactive current error for phase B."
		},
		"delta_eqC": {
			"type": "double",
			"description": "DELTAMODE: The change in reactive current error for phase C."
		},
		"mdA": {
			"type": "double",
			"description": "DELTAMODE: The d-axis current modulation for phase A or triplex phase."
		},
		"mdB": {
			"type": "double",
			"description": "DELTAMODE: The d-axis current modulation for phase B."
		},
		"mdC": {
			"type": "double",
			"description": "DELTAMODE: The d-axis current modulation for phase C."
		},
		"mqA": {
			"type": "double",
			"description": "DELTAMODE: The q-axis current modulation for phase A or triplex phase."
		},
		"mqB": {
			"type": "double",
			"description": "DELTAMODE: The q-axis current modulation for phase B."
		},
		"mqC": {
			"type": "double",
			"description": "DELTAMODE: The q-axis current modulation for phase C."
		},
		"delta_mdA": {
			"type": "double",
			"description": "DELTAMODE: The change in d-axis current modulation for phase A or triplex phase."
		},
		"delta_mdB": {
			"type": "double",
			"description": "DELTAMODE: The change in d-axis current modulation for phase B."
		},
		"delta_mdC": {
			"type": "double",
			"description": "DELTAMODE: The change in d-axis current modulation for phase C."
		},
		"delta_mqA": {
			"type": "double",
			"description": "DELTAMODE: The change in q-axis current modulation for phase A or triplex phase."
		},
		"delta_mqB": {
			"type": "double",
			"description": "DELTAMODE: The change in q-axis current modulation for phase B."
		},
		"delta_mqC": {
			"type": "double",
			"description": "DELTAMODE: The change in q-axis current modulation for phase C."
		},
		"IdqA": {
			"type": "complex",
			"description": "DELTAMODE: The dq-axis current for phase A or triplex phase."
		},
		"IdqB": {
			"type": "complex",
			"description": "DELTAMODE: The dq-axis current for phase B."
		},
		"IdqC": {
			"type": "complex",
			"description": "DELTAMODE: The dq-axis current for phase C."
		},
		"Tfreq_delay": {
			"type": "double",
			"description": "DELTAMODE: The time constant for delayed frequency seen by the inverter"
		},
		"inverter_droop_fp": {
			"type": "bool",
			"description": "DELTAMODE: Boolean used to indicate whether inverter f/p droop is included or not"
		},
		"R_fp": {
			"type": "double",
			"description": "DELTAMODE: The droop parameter of the f/p droop"
		},
		"kppmax": {
			"type": "double",
			"description": "DELTAMODE: The proportional gain of Pmax controller"
		},
		"kipmax": {
			"type": "double",
			"description": "DELTAMODE: The integral gain of Pmax controller"
		},
		"Pmax": {
			"type": "double",
			"description": "DELTAMODE: power limit of grid forming inverter"
		},
		"Pmin": {
			"type": "double",
			"description": "DELTAMODE: power limit of grid forming inverter"
		},
		"Pmax_Low_Limit": {
			"type": "double",
			"description": "DELTAMODE: output limit of Pmax controller"
		},
		"Tvol_delay": {
			"type": "double",
			"description": "DELTAMODE: The time constant for delayed voltage seen by the inverter"
		},
		"inverter_droop_vq": {
			"type": "bool",
			"description": "DELTAMODE: Boolean used to indicate whether inverter q/v droop is included or not"
		},
		"R_vq": {
			"type": "double",
			"description": "DELTAMODE: The droop parameter of the v/q droop"
		},
		"Tp_delay": {
			"type": "double",
			"description": "DELTAMODE: The time constant for delayed real power seen by the VSI droop controller"
		},
		"Tq_delay": {
			"type": "double",
			"description": "DELTAMODE: The time constant for delayed reactive power seen by the VSI droop controller"
		},
		"VSI_Rfilter": {
			"type": "complex",
			"unit": "pu",
			"description": "VSI filter resistance (p.u.)"
		},
		"VSI_Xfilter": {
			"type": "complex",
			"unit": "pu",
			"description": "VSI filter inductance (p.u.)"
		},
		"VSI_mode": {
			"type": "enumeration",
			"keywords": {
				"VSI_DROOP":1,
				"VSI_ISOCHRONOUS":0
			},
			"description": "VSI MODEL: Selects VSI mode for either isochronous or droop one"
		},
		"VSI_freq": {
			"type": "double",
			"description": "VSI frequency"
		},
		"ki_Vterminal": {
			"type": "double",
			"description": "DELTAMODE: The integrator gain for the VSI terminal voltage modulation"
		},
		"kp_Vterminal": {
			"type": "double",
			"description": "DELTAMODE: The proportional gain for the VSI terminal voltage modulation"
		},
		"V_set_droop": {
			"type": "double",
			"description": "DELTAMODE: The voltage setpoint of droop control"
		},
		"V_set0": {
			"type": "double",
			"description": "DELTAMODE: The voltage setpoint of grid-following Q-V droop control"
		},
		"V_set1": {
			"type": "double",
			"description": "DELTAMODE: The voltage setpoint of grid-following Q-V droop control"
		},
		"V_set2": {
			"type": "double",
			"description": "DELTAMODE: The voltage setpoint of grid-following Q-V droop control"
		},
		"enable_ramp_rates_real": {
			"type": "bool",
			"description": "DELTAMODE: Boolean used to indicate whether inverter ramp rate is enforced or not"
		},
		"max_ramp_up_real": {
			"type": "double",
			"unit": "W/s",
			"description": "DELTAMODE: The real power ramp up rate limit"
		},
		"max_ramp_down_real": {
			"type": "double",
			"unit": "W/s",
			"description": "DELTAMODE: The real power ramp down rate limit"
		},
		"enable_ramp_rates_reactive": {
			"type": "bool",
			"description": "DELTAMODE: Boolean used to indicate whether inverter ramp rate is enforced or not"
		},
		"max_ramp_up_reactive": {
			"type": "double",
			"unit": "VAr/s",
			"description": "DELTAMODE: The reactive power ramp up rate limit"
		},
		"max_ramp_down_reactive": {
			"type": "double",
			"unit": "VAr/s",
			"description": "DELTAMODE: The reactive power ramp down rate limit"
		},
		"dynamic_model_mode": {
			"type": "enumeration",
			"keywords": {
				"PI":1,
				"PID":0
			},
			"description": "DELTAMODE: Underlying model to use for deltamode control"
		},
		"enable_1547_checks": {
			"type": "bool",
			"description": "DELTAMODE: Enable IEEE 1547-2003 disconnect checking"
		},
		"reconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "DELTAMODE: Time delay after IEEE 1547-2003 violation clears before resuming generation"
		},
		"inverter_1547_status": {
			"type": "bool",
			"description": "DELTAMODE: Indicator if the inverter is curtailed due to a 1547 violation or not"
		},
		"IEEE_1547_version": {
			"type": "enumeration",
			"keywords": {
				"IEEE1547A_2014":2,
				"IEEE1547_2003":1,
				"IEEE1547A":2,
				"IEEE1547":1,
				"NONE":0
			},
			"description": "DELTAMODE: Version of IEEE 1547 to use to populate defaults"
		},
		"over_freq_high_cutout": {
			"type": "double",
			"unit": "Hz",
			"description": "DELTAMODE: OF2 set point for IEEE 1547a"
		},
		"over_freq_high_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "DELTAMODE: OF2 clearing time for IEEE1547a"
		},
		"over_freq_low_cutout": {
			"type": "double",
			"unit": "Hz",
			"description": "DELTAMODE: OF1 set point for IEEE 1547a"
		},
		"over_freq_low_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "DELTAMODE: OF1 clearing time for IEEE 1547a"
		},
		"under_freq_high_cutout": {
			"type": "double",
			"unit": "Hz",
			"description": "DELTAMODE: UF2 set point for IEEE 1547a"
		},
		"under_freq_high_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "DELTAMODE: UF2 clearing time for IEEE1547a"
		},
		"under_freq_low_cutout": {
			"type": "double",
			"unit": "Hz",
			"description": "DELTAMODE: UF1 set point for IEEE 1547a"
		},
		"under_freq_low_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "DELTAMODE: UF1 clearing time for IEEE 1547a"
		},
		"under_voltage_low_cutout": {
			"type": "double",
			"unit": "pu",
			"description": "Lowest voltage threshold for undervoltage"
		},
		"under_voltage_middle_cutout": {
			"type": "double",
			"unit": "pu",
			"description": "Middle-lowest voltage threshold for undervoltage"
		},
		"under_voltage_high_cutout": {
			"type": "double",
			"unit": "pu",
			"description": "High value of low voltage threshold for undervoltage"
		},
		"over_voltage_low_cutout": {
			"type": "double",
			"unit": "pu",
			"description": "Lowest voltage value for overvoltage"
		},
		"over_voltage_high_cutout": {
			"type": "double",
			"unit": "pu",
			"description": "High voltage value for overvoltage"
		},
		"under_voltage_low_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "Lowest voltage clearing time for undervoltage"
		},
		"under_voltage_middle_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "Middle-lowest voltage clearing time for undervoltage"
		},
		"under_voltage_high_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "Highest voltage clearing time for undervoltage"
		},
		"over_voltage_low_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "Lowest voltage clearing time for overvoltage"
		},
		"over_voltage_high_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "Highest voltage clearing time for overvoltage"
		},
		"IEEE_1547_trip_method": {
			"type": "enumeration",
			"keywords": {
				"OVER_VOLTAGE_HIGH":9,
				"OVER_VOLTAGE_LOW":8,
				"UNDER_VOLTAGE_HIGH":7,
				"UNDER_VOLTAGE_MID":6,
				"UNDER_VOLTAGE_LOW":5,
				"UNDER_FREQUENCY_LOW":4,
				"UNDER_FREQUENCY_HIGH":3,
				"OVER_FREQUENCY_LOW":2,
				"OVER_FREQUENCY_HIGH":1,
				"NONE":0
			},
			"description": "High over-voltage level trip"
		},
		"phases": {
			"type": "set",
			"keywords": {
				"S":112,
				"N":8,
				"C":4,
				"B":2,
				"A":1
			},
			"description": "The phases the inverter is attached to"
		},
		"use_multipoint_efficiency": {
			"type": "bool",
			"description": "FOUR QUADRANT MODEL: boolean to used the multipoint efficiency curve for the inverter when solar is attached"
		},
		"inverter_manufacturer": {
			"type": "enumeration",
			"keywords": {
				"XANTREX":3,
				"SMA":2,
				"FRONIUS":1,
				"NONE":0
			},
			"description": "MULTIPOINT EFFICIENCY MODEL: the manufacturer of the inverter to setup up pre-existing efficiency curves"
		},
		"maximum_dc_power": {
			"type": "double",
			"description": "MULTIPOINT EFFICIENCY MODEL: the maximum dc power point for the efficiency curve"
		},
		"maximum_dc_voltage": {
			"type": "double",
			"description": "MULTIPOINT EFFICIENCY MODEL: the maximum dc voltage point for the efficiency curve"
		},
		"minimum_dc_power": {
			"type": "double",
			"description": "MULTIPOINT EFFICIENCY MODEL: the minimum dc power point for the efficiency curve"
		},
		"c_0": {
			"type": "double",
			"description": "MULTIPOINT EFFICIENCY MODEL: the first coefficient in the efficiency curve"
		},
		"c_1": {
			"type": "double",
			"description": "MULTIPOINT EFFICIENCY MODEL: the second coefficient in the efficiency curve"
		},
		"c_2": {
			"type": "double",
			"description": "MULTIPOINT EFFICIENCY MODEL: the third coefficient in the efficiency curve"
		},
		"c_3": {
			"type": "double",
			"description": "MULTIPOINT EFFICIENCY MODEL: the fourth coefficient in the efficiency curve"
		},
		"sense_object": {
			"type": "object",
			"description": "FOUR QUADRANT MODEL: name of the object the inverter is trying to mitigate the load on (node/link) in LOAD_FOLLOWING"
		},
		"max_charge_rate": {
			"type": "double",
			"unit": "W",
			"description": "FOUR QUADRANT MODEL: maximum rate the battery can be charged in LOAD_FOLLOWING"
		},
		"max_discharge_rate": {
			"type": "double",
			"unit": "W",
			"description": "FOUR QUADRANT MODEL: maximum rate the battery can be discharged in LOAD_FOLLOWING"
		},
		"charge_on_threshold": {
			"type": "double",
			"unit": "W",
			"description": "FOUR QUADRANT MODEL: power level at which the inverter should try charging the battery in LOAD_FOLLOWING"
		},
		"charge_off_threshold": {
			"type": "double",
			"unit": "W",
			"description": "FOUR QUADRANT MODEL: power level at which the inverter should cease charging the battery in LOAD_FOLLOWING"
		},
		"discharge_on_threshold": {
			"type": "double",
			"unit": "W",
			"description": "FOUR QUADRANT MODEL: power level at which the inverter should try discharging the battery in LOAD_FOLLOWING"
		},
		"discharge_off_threshold": {
			"type": "double",
			"unit": "W",
			"description": "FOUR QUADRANT MODEL: power level at which the inverter should cease discharging the battery in LOAD_FOLLOWING"
		},
		"excess_input_power": {
			"type": "double",
			"unit": "W",
			"description": "FOUR QUADRANT MODEL: Excess power at the input of the inverter that is otherwise just lost, or could be shunted to a battery"
		},
		"charge_lockout_time": {
			"type": "double",
			"unit": "s",
			"description": "FOUR QUADRANT MODEL: Lockout time when a charging operation occurs before another LOAD_FOLLOWING dispatch operation can occur"
		},
		"discharge_lockout_time": {
			"type": "double",
			"unit": "s",
			"description": "FOUR QUADRANT MODEL: Lockout time when a discharging operation occurs before another LOAD_FOLLOWING dispatch operation can occur"
		},
		"pf_reg_activate": {
			"type": "double",
			"description": "FOUR QUADRANT MODEL: Lowest acceptable power-factor level below which power-factor regulation will activate."
		},
		"pf_reg_deactivate": {
			"type": "double",
			"description": "FOUR QUADRANT MODEL: Lowest acceptable power-factor above which no power-factor regulation is needed."
		},
		"pf_target": {
			"type": "double",
			"description": "FOUR QUADRANT MODEL: Desired power-factor to maintain (signed) positive is inductive"
		},
		"pf_reg_high": {
			"type": "double",
			"description": "FOUR QUADRANT MODEL: Upper limit for power-factor - if exceeds, go full reverse reactive"
		},
		"pf_reg_low": {
			"type": "double",
			"description": "FOUR QUADRANT MODEL: Lower limit for power-factor - if exceeds, stop regulating - pf_target_var is below this"
		},
		"pf_reg_activate_lockout_time": {
			"type": "double",
			"unit": "s",
			"description": "FOUR QUADRANT MODEL: Mandatory pause between the deactivation of power-factor regulation and it reactivation"
		},
		"disable_volt_var_if_no_input_power": {
			"type": "bool"
		},
		"delay_time": {
			"type": "double",
			"unit": "s"
		},
		"max_var_slew_rate": {
			"type": "double",
			"unit": "VAr/s"
		},
		"max_pwr_slew_rate": {
			"type": "double",
			"unit": "W/s"
		},
		"volt_var_sched": {
			"type": "char1024"
		},
		"freq_pwr_sched": {
			"type": "char1024"
		},
		"charge_threshold": {
			"type": "double",
			"unit": "W",
			"description": "FOUR QUADRANT MODEL: Level at which all inverters in the group will begin charging attached batteries. Regulated minimum load level."
		},
		"discharge_threshold": {
			"type": "double",
			"unit": "W",
			"description": "FOUR QUADRANT MODEL: Level at which all inverters in the group will begin discharging attached batteries. Regulated maximum load level."
		},
		"group_max_charge_rate": {
			"type": "double",
			"unit": "W",
			"description": "FOUR QUADRANT MODEL: Sum of the charge rates of the batteries involved in the group load-following."
		},
		"group_max_discharge_rate": {
			"type": "double",
			"unit": "W",
			"description": "FOUR QUADRANT MODEL: Sum of the discharge rates of the batteries involved in the group load-following."
		},
		"group_rated_power": {
			"type": "double",
			"unit": "W",
			"description": "FOUR QUADRANT MODEL: Sum of the inverter power ratings of the inverters involved in the group power-factor regulation."
		},
		"V_base": {
			"type": "double",
			"unit": "V",
			"description": "FOUR QUADRANT MODEL: The base voltage on the grid side of the inverter. Used in VOLT_VAR control mode."
		},
		"V1": {
			"type": "double",
			"unit": "pu",
			"description": "FOUR QUADRANT MODEL: voltage point 1 in volt/var curve. Used in VOLT_VAR control mode."
		},
		"Q1": {
			"type": "double",
			"unit": "pu",
			"description": "FOUR QUADRANT MODEL: VAR point 1 in volt/var curve. Used in VOLT_VAR control mode."
		},
		"V2": {
			"type": "double",
			"unit": "pu",
			"description": "FOUR QUADRANT MODEL: voltage point 2 in volt/var curve. Used in VOLT_VAR control mode."
		},
		"Q2": {
			"type": "double",
			"unit": "pu",
			"description": "FOUR QUADRANT MODEL: VAR point 2 in volt/var curve. Used in VOLT_VAR control mode."
		},
		"V3": {
			"type": "double",
			"unit": "pu",
			"description": "FOUR QUADRANT MODEL: voltage point 3 in volt/var curve. Used in VOLT_VAR control mode."
		},
		"Q3": {
			"type": "double",
			"unit": "pu",
			"description": "FOUR QUADRANT MODEL: VAR point 3 in volt/var curve. Used in VOLT_VAR control mode."
		},
		"V4": {
			"type": "double",
			"unit": "pu",
			"description": "FOUR QUADRANT MODEL: voltage point 4 in volt/var curve. Used in VOLT_VAR control mode."
		},
		"Q4": {
			"type": "double",
			"unit": "pu",
			"description": "FOUR QUADRANT MODEL: VAR point 4 in volt/var curve. Used in VOLT_VAR control mode."
		},
		"volt_var_control_lockout": {
			"type": "double",
			"unit": "s",
			"description": "FOUR QUADRANT QUADRANT MODEL: the lockout time between volt/var actions."
		},
		"VW_V1": {
			"type": "double",
			"unit": "pu",
			"description": "FOUR QUADRANT MODEL: Voltage at which power limiting begins (e.g. 1.0583). Used in VOLT_WATT control mode."
		},
		"VW_V2": {
			"type": "double",
			"unit": "pu",
			"description": "FOUR QUADRANT MODEL: Voltage at which power limiting ends. (e.g. 1.1000). Used in VOLT_WATT control mode."
		},
		"VW_P1": {
			"type": "double",
			"unit": "pu",
			"description": "FOUR QUADRANT MODEL: Power limit at VW_P1 (e.g. 1). Used in VOLT_WATT control mode."
		},
		"VW_P2": {
			"type": "double",
			"unit": "pu",
			"description": "FOUR QUADRANT MODEL: Power limit at VW_P2 (e.g. 0). Used in VOLT_WATT control mode."
		},
		"WT_is_connected": {
			"type": "bool",
			"description": "Internal flag that indicates a wind turbine child is connected"
		}
	},
	"inverter_dyn": {
		"control_mode": {
			"type": "enumeration",
			"keywords": {
				"GFL_CURRENT_SOURCE":2,
				"GRID_FOLLOWING":1,
				"GRID_FORMING":0
			},
			"description": "Inverter control mode: grid-forming or grid-following"
		},
		"grid_following_mode": {
			"type": "enumeration",
			"keywords": {
				"POSITIVE_SEQUENCE":1,
				"BALANCED_POWER":0
			},
			"description": "grid-following mode, positive sequency or balanced three phase power"
		},
		"grid_forming_mode": {
			"type": "enumeration",
			"keywords": {
				"DYNAMIC_DC_BUS":1,
				"CONSTANT_DC_BUS":0
			},
			"description": "grid-forming mode, CONSTANT_DC_BUS or DYNAMIC_DC_BUS"
		},
		"P_f_droop_setting_mode": {
			"type": "enumeration",
			"keywords": {
				"PSET_MODE":1,
				"FSET_MODE":0
			},
			"description": "Definition of P-f droop curve"
		},
		"phaseA_I_Out": {
			"type": "complex",
			"unit": "A",
			"description": "AC current on A phase in three-phase system"
		},
		"phaseB_I_Out": {
			"type": "complex",
			"unit": "A",
			"description": "AC current on B phase in three-phase system"
		},
		"phaseC_I_Out": {
			"type": "complex",
			"unit": "A",
			"description": "AC current on C phase in three-phase system"
		},
		"phaseA_I_Out_PU": {
			"type": "complex",
			"unit": "pu",
			"description": "AC current on A phase in three-phase system, pu"
		},
		"phaseB_I_Out_PU": {
			"type": "complex",
			"unit": "pu",
			"description": "AC current on B phase in three-phase system, pu"
		},
		"phaseC_I_Out_PU": {
			"type": "complex",
			"unit": "pu",
			"description": "AC current on C phase in three-phase system, pu"
		},
		"IA_Out_PU_temp": {
			"type": "complex",
			"unit": "pu",
			"description": " Phase A current for current limiting calculation of a grid-forming inverter, pu"
		},
		"IB_Out_PU_temp": {
			"type": "complex",
			"unit": "pu",
			"description": " Phase B current for current limiting calculation of a grid-forming inverter, pu"
		},
		"IC_Out_PU_temp": {
			"type": "complex",
			"unit": "pu",
			"description": " Phase C current for current limiting calculation of a grid-forming inverter, pu"
		},
		"power_A": {
			"type": "complex",
			"unit": "VA",
			"description": "AC power on A phase in three-phase system"
		},
		"power_B": {
			"type": "complex",
			"unit": "VA",
			"description": "AC power on B phase in three-phase system"
		},
		"power_C": {
			"type": "complex",
			"unit": "VA",
			"description": "AC power on C phase in three-phase system"
		},
		"VA_Out": {
			"type": "complex",
			"unit": "VA",
			"description": "AC power"
		},
		"rated_power": {
			"type": "double",
			"unit": "VA",
			"description": " The rated power of the inverter"
		},
		"rated_DC_Voltage": {
			"type": "double",
			"unit": "V",
			"description": " The rated dc bus of the inverter"
		},
		"Xfilter": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE:  per-unit values of inverter filter."
		},
		"Rfilter": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE:  per-unit values of inverter filter."
		},
		"Pref": {
			"type": "double",
			"unit": "W",
			"description": "DELTAMODE: The real power reference."
		},
		"Qref": {
			"type": "double",
			"unit": "VAr",
			"description": "DELTAMODE: The reactive power reference."
		},
		"kpc": {
			"type": "double",
			"description": "DELTAMODE: Proportional gain of the current loop."
		},
		"kic": {
			"type": "double",
			"description": "DELTAMODE: Integral gain of the current loop."
		},
		"F_current": {
			"type": "double",
			"description": "DELTAMODE: feed forward term gain in current loop."
		},
		"Tif": {
			"type": "double",
			"description": "DELTAMODE: time constant of first-order low-pass filter of current loop when using current source representation."
		},
		"frequency_watt": {
			"type": "bool",
			"description": "DELTAMODE: Boolean used to indicate whether inverter f/p droop is included or not"
		},
		"checkRampRate_real": {
			"type": "bool",
			"description": "DELTAMODE: Boolean used to indicate whether check the ramp rate"
		},
		"volt_var": {
			"type": "bool",
			"description": "DELTAMODE: Boolean used to indicate whether inverter volt-var droop is included or not"
		},
		"checkRampRate_reactive": {
			"type": "bool",
			"description": "DELTAMODE: Boolean used to indicate whether check the ramp rate"
		},
		"Tpf": {
			"type": "double",
			"unit": "s",
			"description": "DELTAMODE: the time constant of power measurement low pass filter in frequency-watt."
		},
		"Tff": {
			"type": "double",
			"unit": "s",
			"description": "DELTAMODE: the time constant of frequency measurement low pass filter in frequency-watt."
		},
		"Tqf": {
			"type": "double",
			"unit": "s",
			"description": "DELTAMODE: the time constant of low pass filter in volt-var."
		},
		"Tvf": {
			"type": "double",
			"unit": "s",
			"description": "DELTAMODE: the time constant of low pass filter in volt-var."
		},
		"Pref_max": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: the upper and lower limits of power references in grid-following mode."
		},
		"Pref_min": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: the upper and lower limits of power references in grid-following mode."
		},
		"Qref_max": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: the upper and lower limits of reactive power references in grid-following mode."
		},
		"Qref_min": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: the upper and lower limits of reactive power references in grid-following mode."
		},
		"Rp": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: p-f droop gain in frequency-watt."
		},
		"frequency_watt_droop": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: p-f droop gain in frequency-watt."
		},
		"db_UF": {
			"type": "double",
			"unit": "Hz",
			"description": "DELTAMODE: upper dead band for frequency-watt control, UF for under-frequency"
		},
		"db_OF": {
			"type": "double",
			"unit": "Hz",
			"description": "DELTAMODE: lower dead band for frequency-watt control, OF for over-frequency"
		},
		"Rq": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: Q-V droop gain in volt-var."
		},
		"volt_var_droop": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: Q-V droop gain in volt-var."
		},
		"db_UV": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: dead band for volt-var control, UV for under-voltage"
		},
		"db_OV": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: dead band for volt-var control, OV for over-voltage"
		},
		"rampUpRate_real": {
			"type": "double",
			"description": "DELTAMODE: ramp rate for grid-following frequency-watt"
		},
		"rampDownRate_real": {
			"type": "double",
			"description": "DELTAMODE: ramp rate for grid-following frequency-watt"
		},
		"rampUpRate_reactive": {
			"type": "double",
			"description": "DELTAMODE: ramp rate for grid-following volt-var"
		},
		"rampDownRate_reactive": {
			"type": "double",
			"description": "DELTAMODE: ramp rate for grid-following volt-var"
		},
		"frequency_convergence_criterion": {
			"type": "double",
			"unit": "rad/s",
			"description": "Max frequency update for grid-forming inverters to return to QSTS"
		},
		"voltage_convergence_criterion": {
			"type": "double",
			"unit": "V",
			"description": "Max voltage update for grid-forming inverters to return to QSTS"
		},
		"current_convergence_criterion": {
			"type": "double",
			"unit": "A",
			"description": "Max current magnitude update for grid-following inverters to return to QSTS, or initialize"
		},
		"kpPLL": {
			"type": "double",
			"description": "DELTAMODE: Proportional gain of the PLL."
		},
		"kiPLL": {
			"type": "double",
			"description": "DELTAMODE: Proportional gain of the PLL."
		},
		"Tp": {
			"type": "double",
			"description": "DELTAMODE: time constant of low pass filter, P calculation."
		},
		"Tq": {
			"type": "double",
			"description": "DELTAMODE: time constant of low pass filter, Q calculation."
		},
		"Tv": {
			"type": "double",
			"description": "DELTAMODE: time constant of low pass filter, V calculation."
		},
		"Vset": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: voltage set point in grid-forming inverter, usually 1 pu."
		},
		"kpv": {
			"type": "double",
			"description": "DELTAMODE: proportional gain and integral gain of voltage loop."
		},
		"kiv": {
			"type": "double",
			"description": "DELTAMODE: proportional gain and integral gain of voltage loop."
		},
		"mq": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: Q-V droop gain, usually 0.05 pu."
		},
		"Q_V_droop": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: Q-V droop gain, usually 0.05 pu."
		},
		"E_max": {
			"type": "double",
			"description": "DELTAMODE: E_max and E_min are the maximum and minimum of the output of voltage controller."
		},
		"E_min": {
			"type": "double",
			"description": "DELTAMODE: E_max and E_min are the maximum and minimum of the output of voltage controller."
		},
		"Emax": {
			"type": "double",
			"description": "DELTAMODE: E_max and E_min are the maximum and minimum of the output of voltage controller."
		},
		"Emin": {
			"type": "double",
			"description": "DELTAMODE: E_max and E_min are the maximum and minimum of the output of voltage controller."
		},
		"Pset": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: power set point in P-f droop."
		},
		"fset": {
			"type": "double",
			"unit": "Hz",
			"description": "DELTAMODE: frequency set point in P-f droop."
		},
		"mp": {
			"type": "double",
			"unit": "rad/s/pu",
			"description": "DELTAMODE: P-f droop gain, usually 3.77 rad/s/pu."
		},
		"P_f_droop": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: P-f droop gain in per unit value, usually 0.01."
		},
		"kppmax": {
			"type": "double",
			"description": "DELTAMODE: proportional and integral gains for Pmax controller."
		},
		"kipmax": {
			"type": "double",
			"description": "DELTAMODE: proportional and integral gains for Pmax controller."
		},
		"w_lim": {
			"type": "double",
			"description": "DELTAMODE: saturation limit of Pmax controller."
		},
		"Pmax": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: maximum limit and minimum limit of Pmax controller and Pmin controller."
		},
		"Pmin": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: maximum limit and minimum limit of Pmax controller and Pmin controller."
		},
		"w_ref": {
			"type": "double",
			"unit": "rad/s",
			"description": "DELTAMODE: the rated frequency, usually 376.99 rad/s."
		},
		"freq": {
			"type": "double",
			"unit": "Hz",
			"description": "DELTAMODE: the frequency obtained from the P-f droop controller."
		},
		"Imax": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: the maximum current of a grid-forming inverter."
		},
		"kpqmax": {
			"type": "double",
			"description": "DELTAMODE: proportional and integral gains for Qmax controller."
		},
		"kiqmax": {
			"type": "double",
			"description": "DELTAMODE: proportional and integral gains for Qmax controller."
		},
		"Qmax": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: maximum limit and minimum limit of Qmax controller and Qmin controller."
		},
		"Qmin": {
			"type": "double",
			"unit": "pu",
			"description": "DELTAMODE: maximum limit and minimum limit of Qmax controller and Qmin controller."
		},
		"V_In": {
			"type": "double",
			"unit": "V",
			"description": "DC input voltage"
		},
		"I_In": {
			"type": "double",
			"unit": "A",
			"description": "DC input current"
		},
		"P_In": {
			"type": "double",
			"unit": "W",
			"description": "DC input power"
		},
		"enable_1547_checks": {
			"type": "bool",
			"description": "DELTAMODE: Enable IEEE 1547-2003 disconnect checking"
		},
		"reconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "DELTAMODE: Time delay after IEEE 1547-2003 violation clears before resuming generation"
		},
		"inverter_1547_status": {
			"type": "bool",
			"description": "DELTAMODE: Indicator if the inverter is curtailed due to a 1547 violation or not"
		},
		"IEEE_1547_version": {
			"type": "enumeration",
			"keywords": {
				"IEEE1547_2018":3,
				"IEEE1547A_2014":2,
				"IEEE1547_2003":1,
				"NONE":0
			},
			"description": "DELTAMODE: Version of IEEE 1547 to use to populate defaults"
		},
		"over_freq_high_cutout": {
			"type": "double",
			"unit": "Hz",
			"description": "DELTAMODE: OF2 set point for IEEE 1547a"
		},
		"over_freq_high_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "DELTAMODE: OF2 clearing time for IEEE1547a"
		},
		"over_freq_low_cutout": {
			"type": "double",
			"unit": "Hz",
			"description": "DELTAMODE: OF1 set point for IEEE 1547a"
		},
		"over_freq_low_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "DELTAMODE: OF1 clearing time for IEEE 1547a"
		},
		"under_freq_high_cutout": {
			"type": "double",
			"unit": "Hz",
			"description": "DELTAMODE: UF2 set point for IEEE 1547a"
		},
		"under_freq_high_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "DELTAMODE: UF2 clearing time for IEEE1547a"
		},
		"under_freq_low_cutout": {
			"type": "double",
			"unit": "Hz",
			"description": "DELTAMODE: UF1 set point for IEEE 1547a"
		},
		"under_freq_low_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "DELTAMODE: UF1 clearing time for IEEE 1547a"
		},
		"under_voltage_low_cutout": {
			"type": "double",
			"unit": "pu",
			"description": "Lowest voltage threshold for undervoltage"
		},
		"under_voltage_middle_cutout": {
			"type": "double",
			"unit": "pu",
			"description": "Middle-lowest voltage threshold for undervoltage"
		},
		"under_voltage_high_cutout": {
			"type": "double",
			"unit": "pu",
			"description": "High value of low voltage threshold for undervoltage"
		},
		"over_voltage_low_cutout": {
			"type": "double",
			"unit": "pu",
			"description": "Lowest voltage value for overvoltage"
		},
		"over_voltage_high_cutout": {
			"type": "double",
			"unit": "pu",
			"description": "High voltage value for overvoltage"
		},
		"under_voltage_low_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "Lowest voltage clearing time for undervoltage"
		},
		"under_voltage_middle_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "Middle-lowest voltage clearing time for undervoltage"
		},
		"under_voltage_high_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "Highest voltage clearing time for undervoltage"
		},
		"over_voltage_low_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "Lowest voltage clearing time for overvoltage"
		},
		"over_voltage_high_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "Highest voltage clearing time for overvoltage"
		},
		"IEEE_1547_trip_method": {
			"type": "enumeration",
			"keywords": {
				"OVER_VOLTAGE_HIGH":9,
				"OVER_VOLTAGE_LOW":8,
				"UNDER_VOLTAGE_HIGH":7,
				"UNDER_VOLTAGE_MID":6,
				"UNDER_VOLTAGE_LOW":5,
				"UNDER_FREQUENCY_LOW":4,
				"UNDER_FREQUENCY_HIGH":3,
				"OVER_FREQUENCY_LOW":2,
				"OVER_FREQUENCY_HIGH":1,
				"NONE":0
			},
			"description": "High over-voltage level trip"
		}
	},
	"rectifier": {
		"rectifier_type": {
			"type": "enumeration",
			"keywords": {
				"TWELVE_PULSE":4,
				"SIX_PULSE":3,
				"THREE_PULSE":2,
				"TWO_PULSE":1,
				"ONE_PULSE":0
			}
		},
		"generator_mode": {
			"type": "enumeration",
			"keywords": {
				"SUPPLY_DRIVEN":5,
				"CONSTANT_PF":4,
				"CONSTANT_PQ":2,
				"CONSTANT_V":1,
				"UNKNOWN":0
			}
		},
		"V_Out": {
			"type": "complex",
			"unit": "V"
		},
		"V_Rated": {
			"type": "double",
			"unit": "V"
		},
		"I_Out": {
			"type": "complex",
			"unit": "A"
		},
		"VA_Out": {
			"type": "complex",
			"unit": "VA"
		},
		"voltage_A": {
			"type": "complex",
			"unit": "V"
		},
		"voltage_B": {
			"type": "complex",
			"unit": "V"
		},
		"voltage_C": {
			"type": "complex",
			"unit": "V"
		},
		"current_A": {
			"type": "complex",
			"unit": "V"
		},
		"current_B": {
			"type": "complex",
			"unit": "V"
		},
		"current_C": {
			"type": "complex",
			"unit": "V"
		},
		"power_out_A": {
			"type": "complex",
			"unit": "VA"
		},
		"power_out_B": {
			"type": "complex",
			"unit": "VA"
		},
		"power_out_C": {
			"type": "complex",
			"unit": "VA"
		},
		"phases": {
			"type": "set",
			"keywords": {
				"S":112,
				"N":8,
				"C":4,
				"B":2,
				"A":1
			}
		}
	},
	"solar": {
		"pvc_Pmax_calc_simp_mode": {
			"type": "bool",
			"description": "If the simple mode is selected, the pvc_Pmax = pvc_U_m_V * pvc_I_m_A."
		},
		"t_ref_cels": {
			"type": "double",
			"unit": "degC",
			"description": "The referenced temperature"
		},
		"S_ref_wpm2": {
			"type": "double",
			"unit": "W/m^2",
			"description": "The referenced insolation"
		},
		"pvc_a1_inv_cels": {
			"type": "double",
			"description": "In the calculation of dI, this is the coefficient that adjusts the difference between t (temperature) and pvc_t_ref_cels (referenced temperature)"
		},
		"pvc_b1_inv_cels": {
			"type": "double",
			"description": "In the calculation of dU, this is the coefficient that adjusts the difference between t (temperature) and pvc_t_ref_cels (referenced temperature)"
		},
		"pvc_U_oc_V": {
			"type": "double",
			"unit": "V",
			"description": "The open circuit voltage"
		},
		"pvc_I_sc_A": {
			"type": "double",
			"unit": "A",
			"description": "The short circuit current"
		},
		"pvc_U_m_V": {
			"type": "double",
			"unit": "V",
			"description": "Voltage at maximum power point"
		},
		"pvc_I_m_A": {
			"type": "double",
			"unit": "A",
			"description": "Current at maximum power point"
		},
		"MAX_NR_ITERATIONS": {
			"type": "int16",
			"description": "The allowed maximum number of newton-raphson itrations"
		},
		"x0_root_rt": {
			"type": "double",
			"description": "Set the initial guess at this extra percentage of the absolute x value at the extreme point"
		},
		"DOA_NR_ITERATIONS": {
			"type": "double",
			"description": "Set the degree of accuracy of newton-raphson method"
		},
		"panel_type": {
			"type": "enumeration",
			"keywords": {
				"CONCENTRATOR":5,
				"THIN_FILM_GA_AS":4,
				"AMORPHOUS_SILICON":3,
				"MULTI_CRYSTAL_SILICON":2,
				"SINGLE_CRYSTAL_SILICON":1
			}
		},
		"SOLAR_TILT_MODEL": {
			"type": "enumeration",
			"keywords": {
				"PLAYERVALUE":2,
				"SOLPOS":1,
				"DEFAULT":0
			},
			"description": "solar tilt model used to compute insolation values"
		},
		"SOLAR_POWER_MODEL": {
			"type": "enumeration",
			"keywords": {
				"PV_CURVE":2,
				"FLATPLATE":1,
				"DEFAULT":0
			}
		},
		"a_coeff": {
			"type": "double",
			"description": "a coefficient for module temperature correction formula"
		},
		"b_coeff": {
			"type": "double",
			"unit": "s/m",
			"description": "b coefficient for module temperature correction formula"
		},
		"dT_coeff": {
			"type": "double",
			"unit": "m*m*degC/kW",
			"description": "Temperature difference coefficient for module temperature correction formula"
		},
		"T_coeff": {
			"type": "double",
			"unit": "%/degC",
			"description": "Maximum power temperature coefficient for module temperature correction formula"
		},
		"NOCT": {
			"type": "double",
			"unit": "degF"
		},
		"Tmodule": {
			"type": "double",
			"unit": "degF"
		},
		"Tambient": {
			"type": "double",
			"unit": "degC"
		},
		"wind_speed": {
			"type": "double",
			"unit": "mph"
		},
		"ambient_temperature": {
			"type": "double",
			"unit": "degF",
			"description": "Current ambient temperature of air"
		},
		"Insolation": {
			"type": "double",
			"unit": "W/sf"
		},
		"Rinternal": {
			"type": "double",
			"unit": "Ohm"
		},
		"Rated_Insolation": {
			"type": "double",
			"unit": "W/sf"
		},
		"Pmax_temp_coeff": {
			"type": "double"
		},
		"Voc_temp_coeff": {
			"type": "double"
		},
		"V_Max": {
			"type": "double",
			"unit": "V"
		},
		"Voc_Max": {
			"type": "double",
			"unit": "V"
		},
		"Voc": {
			"type": "double",
			"unit": "V"
		},
		"efficiency": {
			"type": "double",
			"unit": "unit"
		},
		"area": {
			"type": "double",
			"unit": "sf"
		},
		"soiling": {
			"type": "double",
			"unit": "pu",
			"description": "Soiling of array factor - representing dirt on array"
		},
		"derating": {
			"type": "double",
			"unit": "pu",
			"description": "Panel derating to account for manufacturing variances"
		},
		"Tcell": {
			"type": "double",
			"unit": "degC"
		},
		"rated_power": {
			"type": "double",
			"unit": "W",
			"description": "Used to define the size of the solar panel in power rather than square footage."
		},
		"P_Out": {
			"type": "double",
			"unit": "kW"
		},
		"V_Out": {
			"type": "double",
			"unit": "V"
		},
		"I_Out": {
			"type": "double",
			"unit": "A"
		},
		"weather": {
			"type": "object"
		},
		"shading_factor": {
			"type": "double",
			"unit": "pu",
			"description": "Shading factor for scaling solar power to the array"
		},
		"tilt_angle": {
			"type": "double",
			"unit": "deg",
			"description": "Tilt angle of PV array"
		},
		"orientation_azimuth": {
			"type": "double",
			"unit": "deg",
			"description": "Facing direction of the PV array"
		},
		"latitude_angle_fix": {
			"type": "bool",
			"description": "Fix tilt angle to installation latitude value"
		},
		"orientation": {
			"type": "enumeration",
			"keywords": {
				"FIXED_AXIS":1,
				"DEFAULT":0
			}
		}
	},
	"sync_ctrl": {
		"armed": {
			"type": "bool",
			"description": "Flag to arm the synchronization control functionality."
		},
		"sync_check_object": {
			"type": "object",
			"description": "The object reference/name of the sync_check object, which works with this sync_ctrl object."
		},
		"controlled_generation_unit": {
			"type": "object",
			"description": "The object reference/name of the controlled generation unit (i.e., a diesel_dg/inverter_dyn object), which serves as the actuator of the PI controllers of this sync_ctrl object."
		},
		"frequency_tolerance_ub_hz": {
			"type": "double",
			"unit": "Hz",
			"description": "The user-specified tolerance in Hz for checking the upper bound of the frequency metric."
		},
		"frequency_tolerance_lb_hz": {
			"type": "double",
			"unit": "Hz",
			"description": "The user-specified tolerance in Hz for checking the lower bound of the frequency metric."
		},
		"voltage_magnitude_tolerance_pu": {
			"type": "double",
			"unit": "pu",
			"description": "The user-specified tolerance in per unit for the difference in voltage magnitudes for checking the voltage metric."
		},
		"controlling_period": {
			"type": "double",
			"unit": "s",
			"description": "The user-defined period when both metrics are satisfied and this sync_ctrl object works in mode A."
		},
		"monitoring_period": {
			"type": "double",
			"unit": "s",
			"description": "The user-defined period when this sync_ctrl object keeps on monitoring in mode B, if both metrics are not violated and the switch object is not closed."
		},
		"pi_freq_kp": {
			"type": "double",
			"description": "The user-defined proportional gain constant of the PI controller for adjusting the frequency setting."
		},
		"pi_freq_ki": {
			"type": "double",
			"description": "The user-defined integral gain constant of the PI controller for adjusting the frequency setting."
		},
		"pi_freq_ub_pu": {
			"type": "double",
			"unit": "pu",
			"description": "The upper bound of the output (i.e., the control variable 'Pset'/'fset') of the PI controller that adjusts the frequency difference in per unit."
		},
		"pi_freq_lb_pu": {
			"type": "double",
			"unit": "pu",
			"description": "The lower bound of the output (i.e., the control variable 'Pset'/'fset') of the PI controller that adjusts the frequency difference in per unit."
		},
		"pi_volt_mag_kp": {
			"type": "double",
			"description": "The user-defined proportional gain constant of the PI controller for adjusting the voltage magnitude setting."
		},
		"pi_volt_mag_ki": {
			"type": "double",
			"description": "The user-defined integral gain constant of the PI controller for adjusting the voltage magnitude setting."
		},
		"pi_volt_mag_ub_pu": {
			"type": "double",
			"unit": "pu",
			"description": "The upper bound of the output (i.e., the control variable 'Vset') of the PI controller that adjusts the voltage magnitude difference in per unit."
		},
		"pi_volt_mag_lb_pu": {
			"type": "double",
			"unit": "pu",
			"description": "The lower bound of the output (i.e., the control variable 'Vset') of the PI controller that adjusts the voltage magnitude difference in per unit"
		}
	},
	"windturb_dg": {
		"Gen_status": {
			"type": "enumeration",
			"keywords": {
				"ONLINE":2,
				"OFFLINE":1
			},
			"description": "COP: Generator is currently available to supply power"
		},
		"Gen_type": {
			"type": "enumeration",
			"keywords": {
				"SYNCHRONOUS":2,
				"INDUCTION":1
			},
			"description": "COP: Standard synchronous generator; is also used to 'fake' a doubly-fed induction generator for now"
		},
		"Gen_mode": {
			"type": "enumeration",
			"keywords": {
				"CONSTANTPQ":3,
				"CONSTANTP":2,
				"CONSTANTE":1
			},
			"description": "COP: Maintains the real and reactive output at the terminals - currently unsupported"
		},
		"Turbine_Model": {
			"type": "enumeration",
			"keywords": {
				"GEN_TURB_POW_CURVE_1_5MW":14,
				"GEN_TURB_POW_CURVE_100KW":13,
				"GEN_TURB_POW_CURVE_10KW":12,
				"GEN_TURB_POW_CURVE_2_4KW":11,
				"BERGEY_10kW":10,
				"GE_25MW":9,
				"VESTAS_V82":8,
				"USER_DEFINED":7,
				"GENERIC_IND_LARGE":6,
				"GENERIC_IND_MID":5,
				"GENERIC_IND_SMALL":4,
				"GENERIC_SYNCH_LARGE":3,
				"GENERIC_SYNCH_MID":2,
				"GENERIC_SYNCH_SMALL":1,
				"GENERIC_DEFAULT":0
			},
			"description": "Generic model for a 1.5MW turbine, power curve implementation"
		},
		"Turbine_implementation": {
			"type": "enumeration",
			"keywords": {
				"POWER_CURVE":1,
				"COEFF_OF_PERFORMANCE":2
			},
			"description": "Wind turbine implementation based on Generic Power Curve"
		},
		"Wind_speed_source": {
			"type": "enumeration",
			"keywords": {
				"CLIMATE_DATA":4,
				"WIND_SPEED":3,
				"BUILT_IN":2,
				"DEFAULT":1
			},
			"description": "The climate data specifying the wind speed"
		},
		"turbine_height": {
			"type": "double",
			"unit": "m",
			"description": "Describes the height of the wind turbine hub above the ground"
		},
		"roughness_length_factor": {
			"type": "double",
			"description": "European Wind Atlas unitless correction factor for adjusting wind speed at various heights above ground and terrain types, default=0.055"
		},
		"blade_diam": {
			"type": "double",
			"unit": "m",
			"description": "COP: Diameter of blades"
		},
		"blade_diameter": {
			"type": "double",
			"unit": "m",
			"description": "COP: Diameter of blades"
		},
		"cut_in_ws": {
			"type": "double",
			"unit": "m/s",
			"description": "COP: Minimum wind speed for generator operation"
		},
		"cut_out_ws": {
			"type": "double",
			"unit": "m/s",
			"description": "COP: Maximum wind speed for generator operation"
		},
		"ws_rated": {
			"type": "double",
			"unit": "m/s",
			"description": "COP: Rated wind speed for generator operation"
		},
		"ws_maxcp": {
			"type": "double",
			"unit": "m/s",
			"description": "COP: Wind speed at which generator reaches maximum Cp"
		},
		"Cp_max": {
			"type": "double",
			"unit": "pu",
			"description": "COP: Maximum coefficient of performance"
		},
		"Cp_rated": {
			"type": "double",
			"unit": "pu",
			"description": "COP: Rated coefficient of performance"
		},
		"Cp": {
			"type": "double",
			"unit": "pu",
			"description": "COP: Calculated coefficient of performance"
		},
		"Rated_VA": {
			"type": "double",
			"unit": "VA",
			"description": "Rated generator power output"
		},
		"Rated_V": {
			"type": "double",
			"unit": "V",
			"description": "COP: Rated generator terminal voltage"
		},
		"Pconv": {
			"type": "double",
			"unit": "W",
			"description": "COP: Amount of electrical power converted from mechanical power delivered"
		},
		"P_converted": {
			"type": "double",
			"unit": "W",
			"description": "COP: Amount of electrical power converted from mechanical power delivered"
		},
		"GenElecEff": {
			"type": "double",
			"unit": "%",
			"description": "COP: Calculated generator electrical efficiency"
		},
		"generator_efficiency": {
			"type": "double",
			"unit": "%",
			"description": "COP: Calculated generator electrical efficiency"
		},
		"TotalRealPow": {
			"type": "double",
			"unit": "W",
			"description": "Total real power output"
		},
		"total_real_power": {
			"type": "double",
			"unit": "W",
			"description": "Total real power output"
		},
		"TotalReacPow": {
			"type": "double",
			"unit": "VA",
			"description": "Total reactive power output"
		},
		"total_reactive_power": {
			"type": "double",
			"unit": "VA",
			"description": "Total reactive power output"
		},
		"power_A": {
			"type": "complex",
			"unit": "VA",
			"description": "Total complex power injected on phase A"
		},
		"power_B": {
			"type": "complex",
			"unit": "VA",
			"description": "Total complex power injected on phase B"
		},
		"power_C": {
			"type": "complex",
			"unit": "VA",
			"description": "Total complex power injected on phase C"
		},
		"power_12": {
			"type": "complex",
			"unit": "VA",
			"description": "Triplex mode - Total complex power on line 1 and 2"
		},
		"WSadj": {
			"type": "double",
			"unit": "m/s",
			"description": "Speed of wind at hub height"
		},
		"wind_speed_adjusted": {
			"type": "double",
			"unit": "m/s",
			"description": "Speed of wind at hub height"
		},
		"Wind_Speed": {
			"type": "double",
			"unit": "m/s",
			"description": "Wind speed at 5-15m level (typical measurement height)"
		},
		"wind_speed": {
			"type": "double",
			"unit": "m/s",
			"description": "Wind speed at 5-15m level (typical measurement height)"
		},
		"air_density": {
			"type": "double",
			"unit": "kg/m^3",
			"description": "COP: Estimated air density"
		},
		"wind_speed_hub_ht": {
			"type": "double",
			"unit": "m/s",
			"description": "Wind speed at hub height. This is an input"
		},
		"R_stator": {
			"type": "double",
			"unit": "pu*Ohm",
			"description": "COP: Induction generator primary stator resistance in p.u."
		},
		"X_stator": {
			"type": "double",
			"unit": "pu*Ohm",
			"description": "COP: Induction generator primary stator reactance in p.u."
		},
		"R_rotor": {
			"type": "double",
			"unit": "pu*Ohm",
			"description": "COP: Induction generator primary rotor resistance in p.u."
		},
		"X_rotor": {
			"type": "double",
			"unit": "pu*Ohm",
			"description": "COP: Induction generator primary rotor reactance in p.u."
		},
		"R_core": {
			"type": "double",
			"unit": "pu*Ohm",
			"description": "COP: Induction generator primary core resistance in p.u."
		},
		"X_magnetic": {
			"type": "double",
			"unit": "pu*Ohm",
			"description": "COP: Induction generator primary core reactance in p.u."
		},
		"Max_Vrotor": {
			"type": "double",
			"unit": "pu*V",
			"description": "COP: Induction generator maximum induced rotor voltage in p.u., e.g. 1.2"
		},
		"Min_Vrotor": {
			"type": "double",
			"unit": "pu*V",
			"description": "COP: Induction generator minimum induced rotor voltage in p.u., e.g. 0.8"
		},
		"Rs": {
			"type": "double",
			"unit": "pu*Ohm",
			"description": "COP: Synchronous generator primary stator resistance in p.u."
		},
		"Xs": {
			"type": "double",
			"unit": "pu*Ohm",
			"description": "COP: Synchronous generator primary stator reactance in p.u."
		},
		"Rg": {
			"type": "double",
			"unit": "pu*Ohm",
			"description": "COP: Synchronous generator grounding resistance in p.u."
		},
		"Xg": {
			"type": "double",
			"unit": "pu*Ohm",
			"description": "COP: Synchronous generator grounding reactance in p.u."
		},
		"Max_Ef": {
			"type": "double",
			"unit": "pu*V",
			"description": "COP: Synchronous generator maximum induced rotor voltage in p.u., e.g. 0.8"
		},
		"Min_Ef": {
			"type": "double",
			"unit": "pu*V",
			"description": "COP: Synchronous generator minimum induced rotor voltage in p.u., e.g. 0.8"
		},
		"pf": {
			"type": "double",
			"unit": "pu",
			"description": "COP: Desired power factor in CONSTANTP mode (can be modified over time)"
		},
		"power_factor": {
			"type": "double",
			"unit": "pu",
			"description": "COP: Desired power factor in CONSTANTP mode (can be modified over time)"
		},
		"power_curve_csv": {
			"type": "char1024",
			"description": "Name of .csv file containing user defined power curve"
		},
		"power_curve_pu": {
			"type": "bool",
			"description": "Flag when set indicates that user provided power curve has power values in p.u. Defaults to false"
		},
		"current_A": {
			"type": "complex",
			"unit": "A",
			"description": "Calculated terminal current on phase A"
		},
		"current_B": {
			"type": "complex",
			"unit": "A",
			"description": "Calculated terminal current on phase B"
		},
		"current_C": {
			"type": "complex",
			"unit": "A",
			"description": "Calculated terminal current on phase C"
		},
		"current_12": {
			"type": "complex",
			"unit": "A",
			"description": "Triplex mode - Calculated line current 12"
		},
		"EfA": {
			"type": "complex",
			"unit": "V",
			"description": "COP: Synchronous generator induced voltage on phase A"
		},
		"EfB": {
			"type": "complex",
			"unit": "V",
			"description": "COP: Synchronous generator induced voltage on phase B"
		},
		"EfC": {
			"type": "complex",
			"unit": "V",
			"description": "COP: Synchronous generator induced voltage on phase C"
		},
		"Vrotor_A": {
			"type": "complex",
			"unit": "V",
			"description": "COP: Induction generator induced voltage on phase A in p.u."
		},
		"Vrotor_B": {
			"type": "complex",
			"unit": "V",
			"description": "COP: Induction generator induced voltage on phase B in p.u."
		},
		"Vrotor_C": {
			"type": "complex",
			"unit": "V",
			"description": "COP: Induction generator induced voltage on phase C in p.u."
		},
		"Irotor_A": {
			"type": "complex",
			"unit": "V",
			"description": "COP: Induction generator induced current on phase A in p.u."
		},
		"Irotor_B": {
			"type": "complex",
			"unit": "V",
			"description": "COP: Induction generator induced current on phase B in p.u."
		},
		"Irotor_C": {
			"type": "complex",
			"unit": "V",
			"description": "COP: Induction generator induced current on phase C in p.u."
		},
		"phases": {
			"type": "set",
			"keywords": {
				"S":112,
				"N":8,
				"C":4,
				"B":2,
				"A":1
			},
			"description": "Specifies which phases to connect to - currently triplex mode is only supported for power curve implementation"
		}
	}
}
,
"market": {
	"global_attributes": {
		"bid_offset": {
			"type": "double",
			"unit": "$",
			"description": "the bid offset value that prevents bids from being wrongly triggered"
		}
	},
	"auction": {
		"unit": {
			"type": "char32",
			"description": "unit of quantity"
		},
		"period": {
			"type": "double",
			"unit": "s",
			"description": "interval of time between market clearings"
		},
		"latency": {
			"type": "double",
			"unit": "s",
			"description": "latency between market clearing and delivery"
		},
		"market_id": {
			"type": "int64",
			"description": "unique identifier of market clearing"
		},
		"network": {
			"type": "object",
			"description": "the comm network used by object to talk to the market (if any)"
		},
		"verbose": {
			"type": "bool",
			"description": "enable verbose auction operations"
		},
		"price_cap": {
			"type": "double",
			"description": "the maximum price (magnitude) allowed"
		},
		"special_mode": {
			"type": "enumeration",
			"keywords": {
				"BUYERS_ONLY":2,
				"SELLERS_ONLY":1,
				"NONE":0
			}
		},
		"statistic_mode": {
			"type": "enumeration",
			"keywords": {
				"OFF":1,
				"ON":0
			}
		},
		"fixed_price": {
			"type": "double"
		},
		"fixed_quantity": {
			"type": "double"
		},
		"capacity_reference_object": {
			"type": "object"
		},
		"capacity_reference_property": {
			"type": "char32"
		},
		"capacity_reference_bid_price": {
			"type": "double"
		},
		"max_capacity_reference_bid_quantity": {
			"type": "double"
		},
		"fixed_uncontrollable_load": {
			"type": "double"
		},
		"capacity_reference_bid_quantity": {
			"type": "double"
		},
		"init_price": {
			"type": "double"
		},
		"init_stdev": {
			"type": "double"
		},
		"future_mean_price": {
			"type": "double"
		},
		"use_future_mean_price": {
			"type": "bool"
		},
		"current_market.start_time": {
			"type": "timestamp"
		},
		"current_market.end_time": {
			"type": "timestamp"
		},
		"current_market.clearing_price": {
			"type": "double",
			"unit": "$"
		},
		"current_market.clearing_quantity": {
			"type": "double"
		},
		"current_market.clearing_type": {
			"type": "enumeration",
			"keywords": {
				"NULL":0,
				"FAILURE":5,
				"EXACT":4,
				"MARGINAL_PRICE":3,
				"MARGINAL_BUYER":2,
				"MARGINAL_SELLER":1
			}
		},
		"current_market.marginal_quantity_load": {
			"type": "double"
		},
		"current_market.marginal_quantity": {
			"type": "double"
		},
		"current_market.marginal_quantity_bid": {
			"type": "double"
		},
		"current_market.marginal_quantity_frac": {
			"type": "double"
		},
		"current_market.seller_total_quantity": {
			"type": "double"
		},
		"current_market.buyer_total_quantity": {
			"type": "double"
		},
		"current_market.seller_min_price": {
			"type": "double"
		},
		"current_market.buyer_total_unrep": {
			"type": "double"
		},
		"current_market.cap_ref_unrep": {
			"type": "double"
		},
		"next_market.start_time": {
			"type": "timestamp"
		},
		"next_market.end_time": {
			"type": "timestamp"
		},
		"next_market.clearing_price": {
			"type": "double",
			"unit": "$"
		},
		"next_market.clearing_quantity": {
			"type": "double"
		},
		"next_market.clearing_type": {
			"type": "enumeration",
			"keywords": {
				"NULL":0,
				"FAILURE":5,
				"EXACT":4,
				"MARGINAL_PRICE":3,
				"MARGINAL_BUYER":2,
				"MARGINAL_SELLER":1
			}
		},
		"next_market.marginal_quantity_load": {
			"type": "double"
		},
		"next_market.marginal_quantity_bid": {
			"type": "double"
		},
		"next_market.marginal_quantity_frac": {
			"type": "double"
		},
		"next_market.seller_total_quantity": {
			"type": "double"
		},
		"next_market.buyer_total_quantity": {
			"type": "double"
		},
		"next_market.seller_min_price": {
			"type": "double"
		},
		"next_market.cap_ref_unrep": {
			"type": "double"
		},
		"past_market.start_time": {
			"type": "timestamp"
		},
		"past_market.end_time": {
			"type": "timestamp"
		},
		"past_market.clearing_price": {
			"type": "double",
			"unit": "$"
		},
		"past_market.clearing_quantity": {
			"type": "double"
		},
		"past_market.clearing_type": {
			"type": "enumeration",
			"keywords": {
				"NULL":0,
				"FAILURE":5,
				"EXACT":4,
				"MARGINAL_PRICE":3,
				"MARGINAL_BUYER":2,
				"MARGINAL_SELLER":1
			}
		},
		"past_market.marginal_quantity_load": {
			"type": "double"
		},
		"past_market.marginal_quantity_bid": {
			"type": "double"
		},
		"past_market.marginal_quantity_frac": {
			"type": "double"
		},
		"past_market.seller_total_quantity": {
			"type": "double"
		},
		"past_market.buyer_total_quantity": {
			"type": "double"
		},
		"past_market.seller_min_price": {
			"type": "double"
		},
		"past_market.cap_ref_unrep": {
			"type": "double"
		},
		"margin_mode": {
			"type": "enumeration",
			"keywords": {
				"PROB":2,
				"DENY":1,
				"NORMAL":0
			}
		},
		"warmup": {
			"type": "int32"
		},
		"ignore_failed_market": {
			"type": "enumeration",
			"keywords": {
				"TRUE":1,
				"FALSE":0
			}
		},
		"ignore_pricecap": {
			"type": "enumeration",
			"keywords": {
				"TRUE":1,
				"FALSE":0
			}
		},
		"transaction_log_file": {
			"type": "char256"
		},
		"transaction_log_limit": {
			"type": "int32"
		},
		"curve_log_file": {
			"type": "char256"
		},
		"curve_log_limit": {
			"type": "int32"
		},
		"curve_log_info": {
			"type": "enumeration",
			"keywords": {
				"EXTRA":1,
				"NORMAL":0
			}
		}
	},
	"controller": {
		"simple_mode": {
			"type": "enumeration",
			"keywords": {
				"DOUBLE_RAMP":6,
				"WATERHEATER":5,
				"HOUSE_PRECOOL":4,
				"HOUSE_PREHEAT":3,
				"HOUSE_COOL":2,
				"HOUSE_HEAT":1,
				"NONE":0
			}
		},
		"bid_mode": {
			"type": "enumeration",
			"keywords": {
				"PROXY":2,
				"OFF":0,
				"ON":1
			}
		},
		"use_override": {
			"type": "enumeration",
			"keywords": {
				"ON":1,
				"OFF":0
			}
		},
		"ramp_low": {
			"type": "double",
			"unit": "degF",
			"description": "the comfort response below the setpoint"
		},
		"ramp_high": {
			"type": "double",
			"unit": "degF",
			"description": "the comfort response above the setpoint"
		},
		"range_low": {
			"type": "double",
			"description": "the setpoint limit on the low side"
		},
		"range_high": {
			"type": "double",
			"description": "the setpoint limit on the high side"
		},
		"target": {
			"type": "char32",
			"description": "the observed property (e.g., air temperature)"
		},
		"setpoint": {
			"type": "char32",
			"description": "the controlled property (e.g., heating setpoint)"
		},
		"demand": {
			"type": "char32",
			"description": "the controlled load when on"
		},
		"load": {
			"type": "char32",
			"description": "the current controlled load"
		},
		"total": {
			"type": "char32",
			"description": "the uncontrolled load (if any)"
		},
		"market": {
			"type": "char32",
			"description": "the market to bid into"
		},
		"state": {
			"type": "char32",
			"description": "the state property of the controlled load"
		},
		"avg_target": {
			"type": "char32"
		},
		"std_target": {
			"type": "char32"
		},
		"bid_price": {
			"type": "double",
			"description": "the bid price"
		},
		"bid_quantity": {
			"type": "double",
			"description": "the bid quantity"
		},
		"set_temp": {
			"type": "double",
			"unit": "degF",
			"description": "the reset value"
		},
		"base_setpoint": {
			"type": "double",
			"unit": "degF"
		},
		"market_price": {
			"type": "double",
			"description": "the current market clearing price seen by the controller."
		},
		"period": {
			"type": "double",
			"unit": "s",
			"description": "interval of time between market clearings"
		},
		"control_mode": {
			"type": "enumeration",
			"keywords": {
				"DOUBLE_PRICE":3,
				"DEV_LEVEL":2,
				"DOUBLE_RAMP":1,
				"RAMP":0
			}
		},
		"resolve_mode": {
			"type": "enumeration",
			"keywords": {
				"SLIDING":1,
				"DEADBAND":0
			}
		},
		"slider_setting": {
			"type": "double"
		},
		"slider_setting_heat": {
			"type": "double"
		},
		"slider_setting_cool": {
			"type": "double"
		},
		"override": {
			"type": "char32"
		},
		"heating_range_high": {
			"type": "double",
			"unit": "degF"
		},
		"heating_range_low": {
			"type": "double",
			"unit": "degF"
		},
		"heating_ramp_high": {
			"type": "double"
		},
		"heating_ramp_low": {
			"type": "double"
		},
		"cooling_range_high": {
			"type": "double",
			"unit": "degF"
		},
		"cooling_range_low": {
			"type": "double",
			"unit": "degF"
		},
		"cooling_ramp_high": {
			"type": "double"
		},
		"cooling_ramp_low": {
			"type": "double"
		},
		"heating_base_setpoint": {
			"type": "double",
			"unit": "degF"
		},
		"cooling_base_setpoint": {
			"type": "double",
			"unit": "degF"
		},
		"deadband": {
			"type": "char32"
		},
		"heating_setpoint": {
			"type": "char32"
		},
		"heating_demand": {
			"type": "char32"
		},
		"cooling_setpoint": {
			"type": "char32"
		},
		"cooling_demand": {
			"type": "char32"
		},
		"sliding_time_delay": {
			"type": "double",
			"unit": "s",
			"description": "time interval desired for the sliding resolve mode to change from cooling or heating to off"
		},
		"use_predictive_bidding": {
			"type": "bool"
		},
		"device_actively_engaged": {
			"type": "double"
		},
		"cleared_market": {
			"type": "int32"
		},
		"locked": {
			"type": "int32"
		},
		"p_ON": {
			"type": "double"
		},
		"p_OFF": {
			"type": "double"
		},
		"p_ONLOCK": {
			"type": "double"
		},
		"p_OFFLOCK": {
			"type": "double"
		},
		"delta_u": {
			"type": "double"
		},
		"regulation_market_on": {
			"type": "char32",
			"description": "the willing to change state from ON->OFF market to bid into for regulation case"
		},
		"regulation_market_off": {
			"type": "char32",
			"description": "the willing to change state from OFF->ON market to bid into for regulation case"
		},
		"fast_regulation_signal": {
			"type": "double",
			"unit": "s",
			"description": "the regulation signal that the controller compares against (i.e., how often is there a control action"
		},
		"market_price_on": {
			"type": "double",
			"description": "the current market clearing price seen by the controller in ON->OFF regulation market"
		},
		"market_price_off": {
			"type": "double",
			"description": "the current market clearing price seen by the controller  in OFF->ON regulation market"
		},
		"period_on": {
			"type": "double",
			"unit": "s",
			"description": "interval of time between market clearings in ON->OFF regulation market"
		},
		"period_off": {
			"type": "double",
			"unit": "s",
			"description": "interval of time between market clearings in  OFF->ON regulation market"
		},
		"regulation_period": {
			"type": "int32",
			"description": "fast regulation signal period"
		},
		"r1": {
			"type": "double",
			"description": "temporary diagnostic variable"
		},
		"mu0": {
			"type": "double",
			"description": "temporary diagnostic variable"
		},
		"mu1": {
			"type": "double",
			"description": "temporary diagnostic variable"
		},
		"average_target": {
			"type": "char32"
		},
		"standard_deviation_target": {
			"type": "char32"
		},
		"bid_id": {
			"type": "int64"
		},
		"bid_delay": {
			"type": "int32"
		},
		"thermostat_state": {
			"type": "char32",
			"description": "The name of the thermostat state property within the object being controlled"
		},
		"proxy_average": {
			"type": "double"
		},
		"proxy_standard_deviation": {
			"type": "double"
		},
		"proxy_market_id": {
			"type": "int64"
		},
		"proxy_market2_id": {
			"type": "int64"
		},
		"proxy_clear_price": {
			"type": "double",
			"unit": "$"
		},
		"proxy_clear_price2": {
			"type": "double",
			"unit": "$"
		},
		"proxy_price_cap": {
			"type": "double"
		},
		"proxy_price_cap2": {
			"type": "double"
		},
		"proxy_market_unit": {
			"type": "char32"
		},
		"proxy_initial_price": {
			"type": "double"
		},
		"proxy_marginal_fraction": {
			"type": "double"
		},
		"proxy_marginal_fraction2": {
			"type": "double"
		},
		"proxy_clearing_quantity": {
			"type": "double"
		},
		"proxy_clearing_quantity2": {
			"type": "double"
		},
		"proxy_seller_total_quantity": {
			"type": "double"
		},
		"proxy_seller_total_quantity2": {
			"type": "double"
		},
		"proxy_margin_mode": {
			"type": "enumeration",
			"keywords": {
				"PROB":2,
				"DENY":1,
				"NORMAL":0
			}
		},
		"proxy_clearing_type": {
			"type": "enumeration",
			"keywords": {
				"NULL":0,
				"FAILURE":5,
				"EXACT":4,
				"MARGINAL_PRICE":3,
				"MARGINAL_BUYER":2,
				"MARGINAL_SELLER":1
			}
		},
		"proxy_clearing_type2": {
			"type": "enumeration",
			"keywords": {
				"NULL":0,
				"FAILURE":5,
				"EXACT":4,
				"MARGINAL_PRICE":3,
				"MARGINAL_BUYER":2,
				"MARGINAL_SELLER":1
			}
		}
	},
	"double_controller": {
		"thermostat_mode": {
			"type": "enumeration",
			"keywords": {
				"COOL":3,
				"HEAT":2,
				"OFF":1,
				"INVALID":0
			}
		},
		"last_mode": {
			"type": "enumeration",
			"keywords": {
				"COOL":3,
				"HEAT":2,
				"OFF":1,
				"INVALID":0
			}
		},
		"resolve_mode": {
			"type": "enumeration",
			"keywords": {
				"STICKY":2,
				"DEADBAND":1,
				"NONE":0
			}
		},
		"setup_mode": {
			"type": "enumeration",
			"keywords": {
				"HOUSE":1,
				"NONE":0
			}
		},
		"bid_mode": {
			"type": "enumeration",
			"keywords": {
				"OFF":0,
				"ON":1
			}
		},
		"last_mode_timer": {
			"type": "int64"
		},
		"cool_ramp_low": {
			"type": "double"
		},
		"cool_ramp_high": {
			"type": "double"
		},
		"cool_range_low": {
			"type": "double"
		},
		"cool_range_high": {
			"type": "double"
		},
		"cool_set_base": {
			"type": "double"
		},
		"cool_setpoint": {
			"type": "double"
		},
		"heat_ramp_low": {
			"type": "double"
		},
		"heat_ramp_high": {
			"type": "double"
		},
		"heat_range_low": {
			"type": "double"
		},
		"heat_range_high": {
			"type": "double"
		},
		"heat_set_base": {
			"type": "double"
		},
		"heat_setpoint": {
			"type": "double"
		},
		"temperature_name": {
			"type": "char32"
		},
		"cool_setpoint_name": {
			"type": "char32"
		},
		"cool_demand_name": {
			"type": "char32"
		},
		"heat_setpoint_name": {
			"type": "char32"
		},
		"heat_demand_name": {
			"type": "char32"
		},
		"load_name": {
			"type": "char32"
		},
		"total_load_name": {
			"type": "char32"
		},
		"deadband_name": {
			"type": "char32"
		},
		"state_name": {
			"type": "char32"
		},
		"market": {
			"type": "object",
			"description": "the market to bid into"
		},
		"market_period": {
			"type": "double"
		},
		"bid_price": {
			"type": "double",
			"description": "the bid price"
		},
		"bid_quant": {
			"type": "double",
			"description": "the bid quantity"
		},
		"load": {
			"type": "char32",
			"description": "the current controlled load"
		},
		"total": {
			"type": "char32",
			"description": "the uncontrolled load (if any)"
		},
		"last_price": {
			"type": "double"
		},
		"temperature": {
			"type": "double"
		},
		"cool_bid": {
			"type": "double"
		},
		"heat_bid": {
			"type": "double"
		},
		"cool_demand": {
			"type": "double"
		},
		"heat_demand": {
			"type": "double"
		},
		"price": {
			"type": "double"
		},
		"avg_price": {
			"type": "double"
		},
		"stdev_price": {
			"type": "double"
		}
	},
	"generator_controller": {
		"generator_state": {
			"type": "enumeration",
			"keywords": {
				"STARTING":2,
				"RUNNING":1,
				"OFF":0
			},
			"description": "Current generator state"
		},
		"amortization_type": {
			"type": "enumeration",
			"keywords": {
				"LINEAR_BID":2,
				"LINEAR_COST":1,
				"EXPONENTIAL":0
			},
			"description": "Amortization compounding method"
		},
		"generator_state_number": {
			"type": "int32",
			"description": "Current generator state as numeric value"
		},
		"market": {
			"type": "object",
			"description": "Market the object will watch and bid into"
		},
		"bid_curve": {
			"type": "char1024",
			"description": "Bidding curve text format"
		},
		"bid_curve_file": {
			"type": "char1024",
			"description": "Bidding curve file name"
		},
		"bid_generator_rating": {
			"type": "double",
			"unit": "VA",
			"description": "Size of generator in VA for the bid curve"
		},
		"update_curve": {
			"type": "bool",
			"description": "Flag to force updating of bidding curve parse"
		},
		"is_marginal_gen": {
			"type": "bool",
			"description": "Flag to indicate if the generator is a marginal generator"
		},
		"generator_rating": {
			"type": "double",
			"unit": "VA",
			"description": "Size of generator in VA for the active bid"
		},
		"generator_output": {
			"type": "double",
			"description": "Current real power output of generator"
		},
		"input_unit_base": {
			"type": "double",
			"unit": "MW",
			"description": "Base multiplier for generator bid units"
		},
		"startup_cost": {
			"type": "double",
			"unit": "$",
			"description": "Cost to start the generator from OFF status"
		},
		"shutdown_cost": {
			"type": "double",
			"unit": "$",
			"description": "Cost to shut down the generator prematurely"
		},
		"minimum_runtime": {
			"type": "double",
			"unit": "s",
			"description": "Minimum time the generator should run to avoid shutdown cost"
		},
		"minimum_downtime": {
			"type": "double",
			"unit": "s",
			"description": "Minimum down time for the generator before it can bid again"
		},
		"capacity_factor": {
			"type": "double",
			"description": "Calculation of generator's current capacity factor based on the market period"
		},
		"amortization_factor": {
			"type": "double",
			"unit": "1/s",
			"description": "Exponential decay factor in 1/s for shutdown cost repayment"
		},
		"bid_delay": {
			"type": "double",
			"description": "Time before a market closes to bid"
		},
		"generator_attachment": {
			"type": "enumeration",
			"keywords": {
				"BUILDING":1,
				"STANDALONE":0
			},
			"description": "Generator attachment type - determines interactions"
		},
		"building_load_curr": {
			"type": "double",
			"description": "Present building load value (if BUILDING attachment)"
		},
		"building_load_bid": {
			"type": "double",
			"description": "Expected building load value for currently bidding market period (if BUILDING attachment)"
		},
		"year_runtime_limit": {
			"type": "double",
			"unit": "h",
			"description": "Total number of hours the generator can run in a year"
		},
		"current_year_runtime": {
			"type": "double",
			"unit": "h",
			"description": "Total number of hours generator has run this year"
		},
		"runtime_year_end": {
			"type": "char1024",
			"description": "Date and time the generator runtime year resets"
		},
		"scaling_factor": {
			"type": "double",
			"unit": "unit",
			"description": "scaling factor applied to license premium calculation"
		},
		"license_premium": {
			"type": "double",
			"description": "current value of the generator license premium calculated"
		},
		"hours_in_year": {
			"type": "double",
			"unit": "h",
			"description": "Number of hours assumed for the total year"
		},
		"op_and_maint_cost": {
			"type": "double",
			"unit": "$",
			"description": "Operation and maintenance cost per runtime year"
		},
		"bid_id": {
			"type": "int64"
		}
	},
	"passive_controller": {
		"input_state": {
			"type": "int32"
		},
		"input_setpoint": {
			"type": "double"
		},
		"input_chained": {
			"type": "bool"
		},
		"observation": {
			"type": "double",
			"description": "the observed value"
		},
		"mean_observation": {
			"type": "double",
			"description": "the observed mean value"
		},
		"stdev_observation": {
			"type": "double",
			"description": "the observed standard deviation value"
		},
		"expectation": {
			"type": "double",
			"description": "the observed expected value"
		},
		"period": {
			"type": "double",
			"unit": "s",
			"description": "the cycle period for the controller logic"
		},
		"expectation_property": {
			"type": "char32",
			"description": "the name of the property to observe for the expected value"
		},
		"expectation_object": {
			"type": "object",
			"description": "the object to watch for the expectation property"
		},
		"setpoint": {
			"type": "char32",
			"description": "the name of the setpoint property in the parent object"
		},
		"state_property": {
			"type": "char32",
			"description": "the name of the actuator property in the parent object"
		},
		"observation_object": {
			"type": "object",
			"description": "the object to observe"
		},
		"observation_property": {
			"type": "char32",
			"description": "the name of the observation property"
		},
		"mean_observation_property": {
			"type": "char32",
			"description": "the name of the mean observation property"
		},
		"stdev_observation_property": {
			"type": "char32",
			"description": "the name of the standard deviation observation property"
		},
		"base_setpoint": {
			"type": "double",
			"description": "the base setpoint to base control off of"
		},
		"critical_day": {
			"type": "double",
			"description": "used to switch between TOU and CPP days, 1 is CPP, 0 is TOU"
		},
		"two_tier_cpp": {
			"type": "bool"
		},
		"daily_elasticity": {
			"type": "double"
		},
		"sub_elasticity_first_second": {
			"type": "double"
		},
		"sub_elasticity_first_third": {
			"type": "double"
		},
		"second_tier_hours": {
			"type": "int32"
		},
		"third_tier_hours": {
			"type": "int32"
		},
		"first_tier_hours": {
			"type": "int32"
		},
		"first_tier_price": {
			"type": "double"
		},
		"second_tier_price": {
			"type": "double"
		},
		"third_tier_price": {
			"type": "double"
		},
		"old_first_tier_price": {
			"type": "double"
		},
		"old_second_tier_price": {
			"type": "double"
		},
		"old_third_tier_price": {
			"type": "double"
		},
		"Percent_change_in_price": {
			"type": "double"
		},
		"Percent_change_in_peakoffpeak_ratio": {
			"type": "double"
		},
		"Percent_change_in_Criticalpeakoffpeak_ratio": {
			"type": "double"
		},
		"linearize_elasticity": {
			"type": "bool"
		},
		"price_offset": {
			"type": "double"
		},
		"pool_pump_model": {
			"type": "bool",
			"description": "Boolean flag for turning on the pool pump version of the DUTYCYCLE control"
		},
		"base_duty_cycle": {
			"type": "double",
			"description": "This is the duty cycle before modification due to the price signal"
		},
		"trigger_time_under_frequency": {
			"type": "int32",
			"description": "Time to stay in triggered off state in seconds"
		},
		"trigger_time_over_frequency": {
			"type": "int32",
			"description": "Time to stay in triggered on state in seconds"
		},
		"release_time_under_frequency": {
			"type": "int32",
			"description": "Time to stay in released on state in seconds"
		},
		"release_time_over_frequency": {
			"type": "int32",
			"description": "Time to stay in released off state in seconds"
		},
		"release_point_under_frequency": {
			"type": "double",
			"description": "Frequency value for releasing GFA in under frequency mode"
		},
		"release_point_over_frequency": {
			"type": "double",
			"description": "Frequency value for releasing GFA in over frequency mode"
		},
		"trigger_point_under_frequency": {
			"type": "double",
			"description": "Frequency value for triggereing GFA in under frequency mode"
		},
		"trigger_point_over_frequency": {
			"type": "double",
			"description": "Frequency value for triggereing GFA in over frequency mode"
		},
		"frequency": {
			"type": "double",
			"description": "Frequency value"
		},
		"PFC_mode": {
			"type": "enumeration",
			"keywords": {
				"OVER_UNDER_FREQUENCY":2,
				"UNDER_FREQUENCY":1,
				"OVER_FREQUENCY":0
			},
			"description": "operation mode of the primary frequency controller"
		},
		"PFC_state": {
			"type": "enumeration",
			"keywords": {
				"RELEASED_ON":6,
				"RELEASED_OFF":5,
				"FORCED_ON":4,
				"FORCED_OFF":3,
				"TRIGGERED_ON":2,
				"TRIGGERED_OFF":1,
				"FREE":0
			},
			"description": "State of the primary frequency controller"
		},
		"state_observed": {
			"type": "char32",
			"description": "the name of the observed state property in the parent object"
		},
		"power_observed": {
			"type": "char32",
			"description": "the name of the observed state property in the parent object"
		},
		"output_observed": {
			"type": "int32"
		},
		"bid_delay": {
			"type": "int32",
			"description": "time the controller will bid in advance before clearing"
		},
		"voltage_lockout": {
			"type": "double",
			"unit": "%",
			"description": "lockout primary frequency control if voltage is deviating % from nominal"
		},
		"voltage_lockout_time": {
			"type": "double",
			"unit": "s",
			"description": "voltage lockout period"
		},
		"voltage_lockout_state": {
			"type": "int32",
			"description": "value to determine if water heater is in voltage lockout"
		},
		"distribution_type": {
			"type": "enumeration",
			"keywords": {
				"UNIFORM":2,
				"EXPONENTIAL":1,
				"NORMAL":0
			}
		},
		"comfort_level": {
			"type": "double"
		},
		"range_high": {
			"type": "double"
		},
		"range_low": {
			"type": "double"
		},
		"ramp_high": {
			"type": "double"
		},
		"ramp_low": {
			"type": "double"
		},
		"prob_off": {
			"type": "double"
		},
		"output_state": {
			"type": "int32",
			"description": "the target setpoint given the input observations"
		},
		"output_setpoint": {
			"type": "double"
		},
		"control_mode": {
			"type": "enumeration",
			"keywords": {
				"PRIMARY_FREQUENCY_CONTROL":8,
				"DIRECT_LOAD_CONTROL":7,
				"ELASTICITY_MODEL":6,
				"PROBABILITY_OFF":5,
				"DUTYCYCLE":4,
				"RAMP":1,
				"NONE":0
			},
			"description": "the control mode to use for determining controller action"
		},
		"dlc_mode": {
			"type": "enumeration",
			"keywords": {
				"CYCLING":1,
				"OFF":0
			},
			"description": "this mode is roughly designed to force cycle an AC unit"
		},
		"cycle_length_off": {
			"type": "double",
			"unit": "s"
		},
		"cycle_length_on": {
			"type": "double",
			"unit": "s"
		}
	},
	"stub_bidder": {
		"bid_period": {
			"type": "double",
			"unit": "s"
		},
		"count": {
			"type": "int16"
		},
		"market": {
			"type": "object"
		},
		"role": {
			"type": "enumeration",
			"keywords": {
				"SELLER":1,
				"BUYER":0
			}
		},
		"price": {
			"type": "double"
		},
		"quantity": {
			"type": "double"
		},
		"bid_id": {
			"type": "int64"
		}
	},
	"stubauction": {
		"unit": {
			"type": "char32",
			"description": "unit of quantity"
		},
		"period": {
			"type": "double",
			"unit": "s",
			"description": "interval of time between market clearings"
		},
		"last.P": {
			"type": "double",
			"description": "last cleared price"
		},
		"current_market.clearing_price": {
			"type": "double",
			"description": "next cleared price"
		},
		"past_market.clearing_price": {
			"type": "double",
			"description": "last cleared price"
		},
		"next.P": {
			"type": "double",
			"description": "next cleared price"
		},
		"avg24": {
			"type": "double",
			"description": "daily average of price"
		},
		"std24": {
			"type": "double",
			"description": "daily stdev of price"
		},
		"avg72": {
			"type": "double",
			"description": "three day price average"
		},
		"std72": {
			"type": "double",
			"description": "three day price stdev"
		},
		"avg168": {
			"type": "double",
			"description": "weekly average of price"
		},
		"std168": {
			"type": "double",
			"description": "weekly stdev of price"
		},
		"market_id": {
			"type": "int64",
			"description": "unique identifier of market clearing"
		},
		"verbose": {
			"type": "bool",
			"description": "enable verbose stubauction operations"
		},
		"control_mode": {
			"type": "enumeration",
			"keywords": {
				"DISABLED":1,
				"NORMAL":0
			},
			"description": "the control mode to use for determining average and deviation calculations"
		}
	},
	"supervisory_control": {
		"unit": {
			"type": "char32",
			"description": "unit of quantity"
		},
		"period": {
			"type": "double",
			"unit": "s",
			"description": "interval of time between market clearings"
		},
		"market_id": {
			"type": "int32",
			"description": "unique identifier of market clearing"
		},
		"nominal_frequency": {
			"type": "double",
			"unit": "Hz",
			"description": "nominal frequency"
		},
		"droop": {
			"type": "double",
			"unit": "%",
			"description": "droop value for the supervisor"
		},
		"frequency_deadband": {
			"type": "double",
			"unit": "Hz",
			"description": "frequency deadband for assigning trigger frequencies"
		},
		"PFC_mode": {
			"type": "enumeration",
			"keywords": {
				"OVER_UNDER_FREQUENCY":2,
				"UNDER_FREQUENCY":1,
				"OVER_FREQUENCY":0
			},
			"description": "operation mode of the primary frequency controller"
		},
		"bid_sort_mode": {
			"type": "enumeration",
			"keywords": {
				"VOLTAGE_EXTREMES":4,
				"VOLTAGE_DEVIAION_FROM_NOMINAL":3,
				"POWER_DECREASING":2,
				"POWER_INCREASING":1,
				"NONE":0
			},
			"description": "Determines how the bids into the market is sorted to contruct the PF curve"
		}
	}
}
,
"powerflow": {
	"global_attributes": {
		"show_matrix_values": {
			"type": "bool"
		},
		"primary_voltage_ratio": {
			"type": "double"
		},
		"nominal_frequency": {
			"type": "double"
		},
		"require_voltage_control": {
			"type": "bool"
		},
		"geographic_degree": {
			"type": "double"
		},
		"fault_impedance": {
			"type": "complex"
		},
		"ground_impedance": {
			"type": "complex"
		},
		"warning_underfrequency": {
			"type": "double"
		},
		"warning_overfrequency": {
			"type": "double"
		},
		"warning_undervoltage": {
			"type": "double"
		},
		"warning_overvoltage": {
			"type": "double"
		},
		"warning_voltageangle": {
			"type": "double"
		},
		"maximum_voltage_error": {
			"type": "double"
		},
		"solver_method": {
			"type": "enumeration",
			"keywords": {
				"NR":2,
				"GS":1,
				"FBS":0
			}
		},
		"NR_solver_algorithm": {
			"type": "enumeration",
			"keywords": {
				"FPI":1,
				"TCIM":0
			},
			"description": "Underlying algorithm for NR powerflow - TCIM or FPI"
		},
		"NR_matrix_file": {
			"type": "char256"
		},
		"NR_matrix_output_interval": {
			"type": "enumeration",
			"keywords": {
				"ALL":3,
				"PER_CALL":2,
				"ONCE":1,
				"NEVER":0
			}
		},
		"NR_matrix_output_references": {
			"type": "bool"
		},
		"NR_matrix_output_rhs": {
			"type": "bool",
			"description": "Flag to indicate if the RHS (delta-current-injections) should be output to the matrix dump"
		},
		"NR_island_failure_handled": {
			"type": "bool",
			"description": "Indicates if an island fails if it should be removed from service"
		},
		"line_capacitance": {
			"type": "bool"
		},
		"line_limits": {
			"type": "bool"
		},
		"lu_solver": {
			"type": "char256"
		},
		"NR_iteration_limit": {
			"type": "int64"
		},
		"NR_deltamode_iteration_limit": {
			"type": "int64"
		},
		"NR_superLU_procs": {
			"type": "int32"
		},
		"default_maximum_voltage_error": {
			"type": "double"
		},
		"default_maximum_power_error": {
			"type": "double"
		},
		"NR_admit_change": {
			"type": "bool"
		},
		"enable_subsecond_models": {
			"type": "bool",
			"description": "Enable deltamode capabilities within the powerflow module"
		},
		"all_powerflow_delta": {
			"type": "bool",
			"description": "Forces all powerflow objects that are capable to participate in deltamode"
		},
		"deltamode_timestep": {
			"type": "double",
			"unit": "ns",
			"description": "Desired minimum timestep for deltamode-related simulations"
		},
		"delta_initialize_iterations": {
			"type": "int32",
			"description": "Extra iterations to perform on initial powerflow (when deltamode enabled) to help with initialization"
		},
		"current_frequency": {
			"type": "double",
			"unit": "Hz",
			"description": "Current system-level frequency of the powerflow system"
		},
		"master_frequency_update": {
			"type": "bool",
			"description": "Tracking variable to see if an object has become the system frequency updater"
		},
		"enable_frequency_dependence": {
			"type": "bool",
			"description": "Flag to enable frequency-based variations in impedance values of lines and loads"
		},
		"default_resistance": {
			"type": "double"
		},
		"enable_inrush": {
			"type": "bool",
			"description": "Flag to enable in-rush calculations for lines and transformers in deltamode"
		},
		"inrush_integration": {
			"type": "enumeration",
			"keywords": {
				"BACKWARD_EULER":3,
				"TRAPEZOIDAL":2,
				"NONE":0
			},
			"description": "Determine the integration method utilized in in-rush calculations"
		},
		"all_frequency_measure_default": {
			"type": "enumeration",
			"keywords": {
				"PLL":2,
				"SIMPLE":1,
				"NONE":0
			}
		},
		"low_voltage_impedance_level": {
			"type": "double",
			"description": "Lower limit of voltage (in per-unit) at which all load types are converted to impedance for in-rush calculations"
		},
		"enable_impedance_conversion": {
			"type": "bool",
			"description": "Flag to enable conversion of loads to impedance-based when voltage limit exceeded - non-in-rush capability"
		},
		"enable_mesh_fault_current": {
			"type": "bool",
			"description": "Flag to enable mesh-based fault current calculations"
		},
		"market_price_name": {
			"type": "char1024",
			"description": "Market current price published variable name"
		}
	},
	"billdump": {
		"group": {
			"type": "char32",
			"description": "the group ID to output data for (all nodes if empty)"
		},
		"runtime": {
			"type": "timestamp",
			"description": "the time to check voltage data"
		},
		"filename": {
			"type": "char256",
			"description": "the file to dump the voltage data into"
		},
		"runcount": {
			"type": "int32",
			"description": "the number of times the file has been written to"
		},
		"meter_type": {
			"type": "enumeration",
			"keywords": {
				"METER":1,
				"TRIPLEX_METER":0
			},
			"description": "describes whether to collect from 3-phase or S-phase meters"
		}
	},
	"capacitor": {
		"node": {
			"type": "parent"
		},
		"pt_phase": {
			"type": "set",
			"keywords": {
				"N":8,
				"D":256,
				"C":4,
				"B":2,
				"A":1
			},
			"description": "Phase(s) that the PT is on, used as measurement points for control"
		},
		"phases_connected": {
			"type": "set",
			"keywords": {
				"N":8,
				"D":256,
				"C":4,
				"B":2,
				"A":1
			},
			"description": "phases capacitors connected to"
		},
		"switchA": {
			"type": "enumeration",
			"keywords": {
				"CLOSED":1,
				"OPEN":0
			},
			"description": "capacitor A switch open or close"
		},
		"switchB": {
			"type": "enumeration",
			"keywords": {
				"CLOSED":1,
				"OPEN":0
			},
			"description": "capacitor B switch open or close"
		},
		"switchC": {
			"type": "enumeration",
			"keywords": {
				"CLOSED":1,
				"OPEN":0
			},
			"description": "capacitor C switch open or close"
		},
		"control": {
			"type": "enumeration",
			"keywords": {
				"CURRENT":4,
				"VARVOLT":3,
				"VOLT":2,
				"VAR":1,
				"MANUAL":0
			},
			"description": "control operation strategy"
		},
		"cap_A_switch_count": {
			"type": "double",
			"description": "number of switch operations on Phase A"
		},
		"cap_B_switch_count": {
			"type": "double",
			"description": "number of switch operations on Phase B"
		},
		"cap_C_switch_count": {
			"type": "double",
			"description": "number of switch operations on Phase C"
		},
		"voltage_set_high": {
			"type": "double",
			"unit": "V",
			"description": "Turn off if voltage is above this set point"
		},
		"voltage_set_low": {
			"type": "double",
			"unit": "V",
			"description": "Turns on if voltage is below this set point"
		},
		"voltage_deadband_center": {
			"type": "double",
			"unit": "V",
			"description": "The voltage deadband center"
		},
		"voltage_deadband": {
			"type": "double",
			"unit": "V",
			"description": "The deadband between voltage_set_high and voltage_set_low"
		},
		"VAr_set_high": {
			"type": "double",
			"unit": "VAr",
			"description": "high VAR set point for VAR control (turn off)"
		},
		"VAr_set_low": {
			"type": "double",
			"unit": "VAr",
			"description": "low VAR set point for VAR control (turn on)"
		},
		"VAr_deadband_center": {
			"type": "double",
			"unit": "VAr",
			"description": "The VAr deadband center"
		},
		"VAr_deadband": {
			"type": "double",
			"unit": "VAr",
			"description": "The deadband between VAr_set_high and VAr_set_low"
		},
		"current_set_low": {
			"type": "double",
			"unit": "A",
			"description": "high current set point for current control mode (turn on)"
		},
		"current_set_high": {
			"type": "double",
			"unit": "A",
			"description": "low current set point for current control mode (turn off)"
		},
		"current_deadband_center": {
			"type": "double",
			"unit": "A",
			"description": "The current deadband center"
		},
		"current_deadband": {
			"type": "double",
			"unit": "A",
			"description": "The deadband between current_set_high and current_set_low"
		},
		"capacitor_A": {
			"type": "double",
			"unit": "VAr",
			"description": "Capacitance value for phase A or phase AB"
		},
		"capacitor_B": {
			"type": "double",
			"unit": "VAr",
			"description": "Capacitance value for phase B or phase BC"
		},
		"capacitor_C": {
			"type": "double",
			"unit": "VAr",
			"description": "Capacitance value for phase C or phase CA"
		},
		"cap_nominal_voltage": {
			"type": "double",
			"unit": "V",
			"description": "Nominal voltage for the capacitor. Used for calculation of capacitance value"
		},
		"time_delay": {
			"type": "double",
			"unit": "s",
			"description": "control time delay"
		},
		"dwell_time": {
			"type": "double",
			"unit": "s",
			"description": "Time for system to remain constant before a state change will be passed"
		},
		"lockout_time": {
			"type": "double",
			"unit": "s",
			"description": "Time for capacitor to remain locked out from further switching operations (VARVOLT control)"
		},
		"remote_sense": {
			"type": "object",
			"description": "Remote object for sensing values used for control schemes"
		},
		"remote_sense_B": {
			"type": "object",
			"description": "Secondary Remote object for sensing values used for control schemes (VARVOLT uses two)"
		},
		"control_level": {
			"type": "enumeration",
			"keywords": {
				"INDIVIDUAL":1,
				"BANK":0
			},
			"description": "define bank or individual control"
		}
	},
	"currdump": {
		"group": {
			"type": "char32",
			"description": "the group ID to output data for (all links if empty)"
		},
		"runtime": {
			"type": "timestamp",
			"description": "the time to check current data"
		},
		"filename": {
			"type": "char256",
			"description": "the file to dump the current data into"
		},
		"runcount": {
			"type": "int32",
			"description": "the number of times the file has been written to"
		},
		"mode": {
			"type": "enumeration",
			"keywords": {
				"POLAR":1,
				"RECT":0
			}
		}
	},
	"emissions": {
		"Nuclear_Order": {
			"type": "double"
		},
		"Hydroelectric_Order": {
			"type": "double"
		},
		"Solarthermal_Order": {
			"type": "double"
		},
		"Biomass_Order": {
			"type": "double"
		},
		"Wind_Order": {
			"type": "double"
		},
		"Coal_Order": {
			"type": "double"
		},
		"Naturalgas_Order": {
			"type": "double"
		},
		"Geothermal_Order": {
			"type": "double"
		},
		"Petroleum_Order": {
			"type": "double"
		},
		"Naturalgas_Max_Out": {
			"type": "double",
			"unit": "kWh"
		},
		"Coal_Max_Out": {
			"type": "double",
			"unit": "kWh"
		},
		"Biomass_Max_Out": {
			"type": "double",
			"unit": "kWh"
		},
		"Geothermal_Max_Out": {
			"type": "double",
			"unit": "kWh"
		},
		"Hydroelectric_Max_Out": {
			"type": "double",
			"unit": "kWh"
		},
		"Nuclear_Max_Out": {
			"type": "double",
			"unit": "kWh"
		},
		"Wind_Max_Out": {
			"type": "double",
			"unit": "kWh"
		},
		"Petroleum_Max_Out": {
			"type": "double",
			"unit": "kWh"
		},
		"Solarthermal_Max_Out": {
			"type": "double",
			"unit": "kWh"
		},
		"Naturalgas_Out": {
			"type": "double",
			"unit": "kWh"
		},
		"Coal_Out": {
			"type": "double",
			"unit": "kWh"
		},
		"Biomass_Out": {
			"type": "double",
			"unit": "kWh"
		},
		"Geothermal_Out": {
			"type": "double",
			"unit": "kWh"
		},
		"Hydroelectric_Out": {
			"type": "double",
			"unit": "kWh"
		},
		"Nuclear_Out": {
			"type": "double",
			"unit": "kWh"
		},
		"Wind_Out": {
			"type": "double",
			"unit": "kWh"
		},
		"Petroleum_Out": {
			"type": "double",
			"unit": "kWh"
		},
		"Solarthermal_Out": {
			"type": "double",
			"unit": "kWh"
		},
		"Naturalgas_Conv_Eff": {
			"type": "double",
			"unit": "Btu/kWh"
		},
		"Coal_Conv_Eff": {
			"type": "double",
			"unit": "Btu/kWh"
		},
		"Biomass_Conv_Eff": {
			"type": "double",
			"unit": "Btu/kWh"
		},
		"Geothermal_Conv_Eff": {
			"type": "double",
			"unit": "Btu/kWh"
		},
		"Hydroelectric_Conv_Eff": {
			"type": "double",
			"unit": "Btu/kWh"
		},
		"Nuclear_Conv_Eff": {
			"type": "double",
			"unit": "Btu/kWh"
		},
		"Wind_Conv_Eff": {
			"type": "double",
			"unit": "Btu/kWh"
		},
		"Petroleum_Conv_Eff": {
			"type": "double",
			"unit": "Btu/kWh"
		},
		"Solarthermal_Conv_Eff": {
			"type": "double",
			"unit": "Btu/kWh"
		},
		"Naturalgas_CO2": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Coal_CO2": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Biomass_CO2": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Geothermal_CO2": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Hydroelectric_CO2": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Nuclear_CO2": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Wind_CO2": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Petroleum_CO2": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Solarthermal_CO2": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Naturalgas_SO2": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Coal_SO2": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Biomass_SO2": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Geothermal_SO2": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Hydroelectric_SO2": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Nuclear_SO2": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Wind_SO2": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Petroleum_SO2": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Solarthermal_SO2": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Naturalgas_NOx": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Coal_NOx": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Biomass_NOx": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Geothermal_NOx": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Hydroelectric_NOx": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Nuclear_NOx": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Wind_NOx": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Petroleum_NOx": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Solarthermal_NOx": {
			"type": "double",
			"unit": "lb/Btu"
		},
		"Naturalgas_emissions_CO2": {
			"type": "double",
			"unit": "lb"
		},
		"Naturalgas_emissions_SO2": {
			"type": "double",
			"unit": "lb"
		},
		"Naturalgas_emissions_NOx": {
			"type": "double",
			"unit": "lb"
		},
		"Coal_emissions_CO2": {
			"type": "double",
			"unit": "lb"
		},
		"Coal_emissions_SO2": {
			"type": "double",
			"unit": "lb"
		},
		"Coal_emissions_NOx": {
			"type": "double",
			"unit": "lb"
		},
		"Biomass_emissions_CO2": {
			"type": "double",
			"unit": "lb"
		},
		"Biomass_emissions_SO2": {
			"type": "double",
			"unit": "lb"
		},
		"Biomass_emissions_NOx": {
			"type": "double",
			"unit": "lb"
		},
		"Geothermal_emissions_CO2": {
			"type": "double",
			"unit": "lb"
		},
		"Geothermal_emissions_SO2": {
			"type": "double",
			"unit": "lb"
		},
		"Geothermal_emissions_NOx": {
			"type": "double",
			"unit": "lb"
		},
		"Hydroelectric_emissions_CO2": {
			"type": "double",
			"unit": "lb"
		},
		"Hydroelectric_emissions_SO2": {
			"type": "double",
			"unit": "lb"
		},
		"Hydroelectric_emissions_NOx": {
			"type": "double",
			"unit": "lb"
		},
		"Nuclear_emissions_CO2": {
			"type": "double",
			"unit": "lb"
		},
		"Nuclear_emissions_SO2": {
			"type": "double",
			"unit": "lb"
		},
		"Nuclear_emissions_NOx": {
			"type": "double",
			"unit": "lb"
		},
		"Wind_emissions_CO2": {
			"type": "double",
			"unit": "lb"
		},
		"Wind_emissions_SO2": {
			"type": "double",
			"unit": "lb"
		},
		"Wind_emissions_NOx": {
			"type": "double",
			"unit": "lb"
		},
		"Petroleum_emissions_CO2": {
			"type": "double",
			"unit": "lb"
		},
		"Petroleum_emissions_SO2": {
			"type": "double",
			"unit": "lb"
		},
		"Petroleum_emissions_NOx": {
			"type": "double",
			"unit": "lb"
		},
		"Solarthermal_emissions_CO2": {
			"type": "double",
			"unit": "lb"
		},
		"Solarthermal_emissions_SO2": {
			"type": "double",
			"unit": "lb"
		},
		"Solarthermal_emissions_NOx": {
			"type": "double",
			"unit": "lb"
		},
		"Total_emissions_CO2": {
			"type": "double",
			"unit": "lb"
		},
		"Total_emissions_SO2": {
			"type": "double",
			"unit": "lb"
		},
		"Total_emissions_NOx": {
			"type": "double",
			"unit": "lb"
		},
		"Total_energy_out": {
			"type": "double",
			"unit": "kWh"
		},
		"Region": {
			"type": "double"
		},
		"cycle_interval": {
			"type": "double",
			"unit": "s"
		}
	},
	"fault_check": {
		"check_mode": {
			"type": "enumeration",
			"keywords": {
				"SWITCHING":4,
				"SINGLE_DEBUG":3,
				"ALL":2,
				"ONCHANGE":1,
				"SINGLE":0
			},
			"description": "Frequency of fault checks"
		},
		"output_filename": {
			"type": "char1024",
			"description": "Output filename for list of unsupported nodes"
		},
		"reliability_mode": {
			"type": "bool",
			"description": "General flag indicating if fault_check is operating under faulting or restoration mode -- reliability set this"
		},
		"strictly_radial": {
			"type": "bool",
			"description": "Flag to indicate if a system is known to be strictly radial -- uses radial assumptions for reliability alterations"
		},
		"full_output_file": {
			"type": "bool",
			"description": "Flag to indicate if the output_filename report contains both supported and unsupported nodes -- if false, just does unsupported"
		},
		"grid_association": {
			"type": "bool",
			"description": "Flag to indicate if multiple, distinct grids are allowed in a GLM, or if anything not attached to the master swing is removed"
		},
		"eventgen_object": {
			"type": "object",
			"description": "Link to generic eventgen object to handle unexpected faults"
		}
	},
	"fuse": {
		"link": {
			"type": "parent"
		},
		"phase_A_status": {
			"type": "enumeration",
			"keywords": {
				"GOOD":1,
				"BLOWN":0
			}
		},
		"phase_B_status": {
			"type": "enumeration",
			"keywords": {
				"GOOD":1,
				"BLOWN":0
			}
		},
		"phase_C_status": {
			"type": "enumeration",
			"keywords": {
				"GOOD":1,
				"BLOWN":0
			}
		},
		"repair_dist_type": {
			"type": "enumeration",
			"keywords": {
				"EXPONENTIAL":1,
				"NONE":0
			}
		},
		"current_limit": {
			"type": "double",
			"unit": "A"
		},
		"mean_replacement_time": {
			"type": "double",
			"unit": "s"
		},
		"fuse_resistance": {
			"type": "double",
			"unit": "Ohm",
			"description": "The resistance value of the fuse when it is not blown."
		}
	},
	"impedance_dump": {
		"group": {
			"type": "char32",
			"description": "the group ID to output data for (all links if empty)"
		},
		"filename": {
			"type": "char256",
			"description": "the file to dump the current data into"
		},
		"runtime": {
			"type": "timestamp",
			"description": "the time to check voltage data"
		},
		"runcount": {
			"type": "int32",
			"description": "the number of times the file has been written to"
		}
	},
	"jsondump": {
		"group": {
			"type": "char32",
			"description": "the group ID to output data for (all objects if empty)"
		},
		"filename_dump_system": {
			"type": "char256",
			"description": "the file to dump the current data into"
		},
		"filename_dump_reliability": {
			"type": "char256",
			"description": "the file to dump the current data into"
		},
		"runtime": {
			"type": "timestamp",
			"description": "the time to check voltage data"
		},
		"runcount": {
			"type": "int32",
			"description": "the number of times the file has been written to"
		},
		"write_system_info": {
			"type": "bool",
			"description": "Flag indicating whether system information will be written into JSON file or not"
		},
		"write_reliability": {
			"type": "bool",
			"description": "Flag indicating whether reliabililty information will be written into JSON file or not"
		},
		"write_per_unit": {
			"type": "bool",
			"description": "Output the quantities as per-unit values"
		},
		"system_base": {
			"type": "double",
			"unit": "VA",
			"description": "System base power rating for per-unit calculations"
		},
		"min_node_voltage": {
			"type": "double",
			"unit": "pu",
			"description": "Per-unit minimum voltage level allowed for nodes"
		},
		"max_node_voltage": {
			"type": "double",
			"unit": "pu",
			"description": "Per-unit maximum voltage level allowed for nodes"
		}
	},
	"line": {
		"link": {
			"type": "parent"
		},
		"configuration": {
			"type": "object"
		},
		"length": {
			"type": "double",
			"unit": "ft"
		}
	},
	"line_configuration": {
		"conductor_A": {
			"type": "object"
		},
		"conductor_B": {
			"type": "object"
		},
		"conductor_C": {
			"type": "object"
		},
		"conductor_N": {
			"type": "object"
		},
		"spacing": {
			"type": "object"
		},
		"z11": {
			"type": "complex",
			"unit": "Ohm/mile"
		},
		"z12": {
			"type": "complex",
			"unit": "Ohm/mile"
		},
		"z13": {
			"type": "complex",
			"unit": "Ohm/mile"
		},
		"z21": {
			"type": "complex",
			"unit": "Ohm/mile"
		},
		"z22": {
			"type": "complex",
			"unit": "Ohm/mile"
		},
		"z23": {
			"type": "complex",
			"unit": "Ohm/mile"
		},
		"z31": {
			"type": "complex",
			"unit": "Ohm/mile"
		},
		"z32": {
			"type": "complex",
			"unit": "Ohm/mile"
		},
		"z33": {
			"type": "complex",
			"unit": "Ohm/mile"
		},
		"c11": {
			"type": "double",
			"unit": "nF/mile"
		},
		"c12": {
			"type": "double",
			"unit": "nF/mile"
		},
		"c13": {
			"type": "double",
			"unit": "nF/mile"
		},
		"c21": {
			"type": "double",
			"unit": "nF/mile"
		},
		"c22": {
			"type": "double",
			"unit": "nF/mile"
		},
		"c23": {
			"type": "double",
			"unit": "nF/mile"
		},
		"c31": {
			"type": "double",
			"unit": "nF/mile"
		},
		"c32": {
			"type": "double",
			"unit": "nF/mile"
		},
		"c33": {
			"type": "double",
			"unit": "nF/mile"
		},
		"rating.summer.continuous": {
			"type": "double",
			"unit": "A",
			"description": "amp rating in summer, continuous"
		},
		"rating.summer.emergency": {
			"type": "double",
			"unit": "A",
			"description": "amp rating in summer, short term"
		},
		"rating.winter.continuous": {
			"type": "double",
			"unit": "A",
			"description": "amp rating in winter, continuous"
		},
		"rating.winter.emergency": {
			"type": "double",
			"unit": "A",
			"description": "amp rating in winter, short term"
		}
	},
	"line_spacing": {
		"distance_AB": {
			"type": "double",
			"unit": "ft"
		},
		"distance_BC": {
			"type": "double",
			"unit": "ft"
		},
		"distance_AC": {
			"type": "double",
			"unit": "ft"
		},
		"distance_AN": {
			"type": "double",
			"unit": "ft"
		},
		"distance_BN": {
			"type": "double",
			"unit": "ft"
		},
		"distance_CN": {
			"type": "double",
			"unit": "ft"
		},
		"distance_AE": {
			"type": "double",
			"unit": "ft",
			"description": "distance between phase A wire and earth"
		},
		"distance_BE": {
			"type": "double",
			"unit": "ft",
			"description": "distance between phase B wire and earth"
		},
		"distance_CE": {
			"type": "double",
			"unit": "ft",
			"description": "distance between phase C wire and earth"
		},
		"distance_NE": {
			"type": "double",
			"unit": "ft",
			"description": "distance between neutral wire and earth"
		}
	},
	"link": {
		"powerflow_object": {
			"type": "parent"
		},
		"status": {
			"type": "enumeration",
			"keywords": {
				"OPEN":0,
				"CLOSED":1
			},
			"description": ""
		},
		"from": {
			"type": "object",
			"description": "from_node - source node"
		},
		"to": {
			"type": "object",
			"description": "to_node - load node"
		},
		"power_in": {
			"type": "complex",
			"unit": "VA",
			"description": "power flow in (w.r.t from node)"
		},
		"power_out": {
			"type": "complex",
			"unit": "VA",
			"description": "power flow out (w.r.t to node)"
		},
		"power_out_real": {
			"type": "double",
			"unit": "W",
			"description": "power flow out (w.r.t to node), real"
		},
		"power_losses": {
			"type": "complex",
			"unit": "VA",
			"description": "power losses"
		},
		"power_in_A": {
			"type": "complex",
			"unit": "VA",
			"description": "power flow in (w.r.t from node), phase A"
		},
		"power_in_B": {
			"type": "complex",
			"unit": "VA",
			"description": "power flow in (w.r.t from node), phase B"
		},
		"power_in_C": {
			"type": "complex",
			"unit": "VA",
			"description": "power flow in (w.r.t from node), phase C"
		},
		"power_out_A": {
			"type": "complex",
			"unit": "VA",
			"description": "power flow out (w.r.t to node), phase A"
		},
		"power_out_B": {
			"type": "complex",
			"unit": "VA",
			"description": "power flow out (w.r.t to node), phase B"
		},
		"power_out_C": {
			"type": "complex",
			"unit": "VA",
			"description": "power flow out (w.r.t to node), phase C"
		},
		"power_losses_A": {
			"type": "complex",
			"unit": "VA",
			"description": "power losses, phase A"
		},
		"power_losses_B": {
			"type": "complex",
			"unit": "VA",
			"description": "power losses, phase B"
		},
		"power_losses_C": {
			"type": "complex",
			"unit": "VA",
			"description": "power losses, phase C"
		},
		"current_out_A": {
			"type": "complex",
			"unit": "A",
			"description": "current flow out of link (w.r.t. to node), phase A"
		},
		"current_out_B": {
			"type": "complex",
			"unit": "A",
			"description": "current flow out of link (w.r.t. to node), phase B"
		},
		"current_out_C": {
			"type": "complex",
			"unit": "A",
			"description": "current flow out of link (w.r.t. to node), phase C"
		},
		"current_in_A": {
			"type": "complex",
			"unit": "A",
			"description": "current flow to link (w.r.t from node), phase A"
		},
		"current_in_B": {
			"type": "complex",
			"unit": "A",
			"description": "current flow to link (w.r.t from node), phase B"
		},
		"current_in_C": {
			"type": "complex",
			"unit": "A",
			"description": "current flow to link (w.r.t from node), phase C"
		},
		"fault_current_in_A": {
			"type": "complex",
			"unit": "A",
			"description": "fault current flowing in, phase A"
		},
		"fault_current_in_B": {
			"type": "complex",
			"unit": "A",
			"description": "fault current flowing in, phase B"
		},
		"fault_current_in_C": {
			"type": "complex",
			"unit": "A",
			"description": "fault current flowing in, phase C"
		},
		"fault_current_out_A": {
			"type": "complex",
			"unit": "A",
			"description": "fault current flowing out, phase A"
		},
		"fault_current_out_B": {
			"type": "complex",
			"unit": "A",
			"description": "fault current flowing out, phase B"
		},
		"fault_current_out_C": {
			"type": "complex",
			"unit": "A",
			"description": "fault current flowing out, phase C"
		},
		"fault_voltage_A": {
			"type": "complex",
			"unit": "A",
			"description": "fault voltage, phase A"
		},
		"fault_voltage_B": {
			"type": "complex",
			"unit": "A",
			"description": "fault voltage, phase B"
		},
		"fault_voltage_C": {
			"type": "complex",
			"unit": "A",
			"description": "fault voltage, phase C"
		},
		"overloaded_status": {
			"type": "bool",
			"description": "overloaded status (true/false)"
		},
		"flow_direction": {
			"type": "set",
			"keywords": {
				"CN":768,
				"CR":512,
				"CF":256,
				"BN":48,
				"BR":32,
				"BF":16,
				"AN":3,
				"AR":2,
				"AF":1,
				"UNKNOWN":0
			},
			"description": "flag used for describing direction of the flow of power"
		},
		"mean_repair_time": {
			"type": "double",
			"unit": "s",
			"description": "Time after a fault clears for the object to be back in service"
		},
		"continuous_rating_A": {
			"type": "double",
			"unit": "A",
			"description": "Continuous rating for phase A of this link object (set individual line segments)"
		},
		"continuous_rating_B": {
			"type": "double",
			"unit": "A",
			"description": "Continuous rating for phase B of this link object (set individual line segments)"
		},
		"continuous_rating_C": {
			"type": "double",
			"unit": "A",
			"description": "Continuous rating for phase C of this link object (set individual line segments)"
		},
		"emergency_rating_A": {
			"type": "double",
			"unit": "A",
			"description": "Emergency rating for phase A of this link object (set individual line segments)"
		},
		"emergency_rating_B": {
			"type": "double",
			"unit": "A",
			"description": "Emergency rating for phase B of this link object (set individual line segments)"
		},
		"emergency_rating_C": {
			"type": "double",
			"unit": "A",
			"description": "Emergency rating for phase C of this link object (set individual line segments)"
		},
		"inrush_convergence_value": {
			"type": "double",
			"unit": "V",
			"description": "Tolerance, as change in line voltage drop between iterations, for deltamode in-rush completion"
		},
		"inrush_integration_method_capacitance": {
			"type": "enumeration",
			"keywords": {
				"BACKWARD_EULER":3,
				"TRAPEZOIDAL":2,
				"UNDEFINED":1,
				"NONE":0
			},
			"description": "Selected integration method to use for capacitive elements of the link"
		},
		"inrush_integration_method_inductance": {
			"type": "enumeration",
			"keywords": {
				"BACKWARD_EULER":3,
				"TRAPEZOIDAL":2,
				"UNDEFINED":1,
				"NONE":0
			},
			"description": "Selected integration method to use for inductive elements of the link"
		}
	},
	"load": {
		"node": {
			"type": "parent"
		},
		"load_class": {
			"type": "enumeration",
			"keywords": {
				"A":4,
				"I":3,
				"C":2,
				"R":1,
				"U":0
			},
			"description": "Flag to track load type, not currently used for anything except sorting"
		},
		"load_priority": {
			"type": "enumeration",
			"keywords": {
				"CRITICAL":2,
				"PRIORITY":1,
				"DISCRETIONARY":0
			},
			"description": "Load classification based on priority"
		},
		"constant_power_A": {
			"type": "complex",
			"unit": "VA",
			"description": "constant power load on phase A, specified as VA"
		},
		"constant_power_B": {
			"type": "complex",
			"unit": "VA",
			"description": "constant power load on phase B, specified as VA"
		},
		"constant_power_C": {
			"type": "complex",
			"unit": "VA",
			"description": "constant power load on phase C, specified as VA"
		},
		"constant_power_A_real": {
			"type": "double",
			"unit": "W",
			"description": "constant power load on phase A, real only, specified as W"
		},
		"constant_power_B_real": {
			"type": "double",
			"unit": "W",
			"description": "constant power load on phase B, real only, specified as W"
		},
		"constant_power_C_real": {
			"type": "double",
			"unit": "W",
			"description": "constant power load on phase C, real only, specified as W"
		},
		"constant_power_A_reac": {
			"type": "double",
			"unit": "VAr",
			"description": "constant power load on phase A, imaginary only, specified as VAr"
		},
		"constant_power_B_reac": {
			"type": "double",
			"unit": "VAr",
			"description": "constant power load on phase B, imaginary only, specified as VAr"
		},
		"constant_power_C_reac": {
			"type": "double",
			"unit": "VAr",
			"description": "constant power load on phase C, imaginary only, specified as VAr"
		},
		"constant_current_A": {
			"type": "complex",
			"unit": "A",
			"description": "constant current load on phase A, specified as Amps"
		},
		"constant_current_B": {
			"type": "complex",
			"unit": "A",
			"description": "constant current load on phase B, specified as Amps"
		},
		"constant_current_C": {
			"type": "complex",
			"unit": "A",
			"description": "constant current load on phase C, specified as Amps"
		},
		"constant_current_A_real": {
			"type": "double",
			"unit": "A",
			"description": "constant current load on phase A, real only, specified as Amps"
		},
		"constant_current_B_real": {
			"type": "double",
			"unit": "A",
			"description": "constant current load on phase B, real only, specified as Amps"
		},
		"constant_current_C_real": {
			"type": "double",
			"unit": "A",
			"description": "constant current load on phase C, real only, specified as Amps"
		},
		"constant_current_A_reac": {
			"type": "double",
			"unit": "A",
			"description": "constant current load on phase A, imaginary only, specified as Amps"
		},
		"constant_current_B_reac": {
			"type": "double",
			"unit": "A",
			"description": "constant current load on phase B, imaginary only, specified as Amps"
		},
		"constant_current_C_reac": {
			"type": "double",
			"unit": "A",
			"description": "constant current load on phase C, imaginary only, specified as Amps"
		},
		"constant_impedance_A": {
			"type": "complex",
			"unit": "Ohm",
			"description": "constant impedance load on phase A, specified as Ohms"
		},
		"constant_impedance_B": {
			"type": "complex",
			"unit": "Ohm",
			"description": "constant impedance load on phase B, specified as Ohms"
		},
		"constant_impedance_C": {
			"type": "complex",
			"unit": "Ohm",
			"description": "constant impedance load on phase C, specified as Ohms"
		},
		"constant_impedance_A_real": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance load on phase A, real only, specified as Ohms"
		},
		"constant_impedance_B_real": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance load on phase B, real only, specified as Ohms"
		},
		"constant_impedance_C_real": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance load on phase C, real only, specified as Ohms"
		},
		"constant_impedance_A_reac": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance load on phase A, imaginary only, specified as Ohms"
		},
		"constant_impedance_B_reac": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance load on phase B, imaginary only, specified as Ohms"
		},
		"constant_impedance_C_reac": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance load on phase C, imaginary only, specified as Ohms"
		},
		"constant_power_AN": {
			"type": "complex",
			"unit": "VA",
			"description": "constant power wye-connected load on phase A, specified as VA"
		},
		"constant_power_BN": {
			"type": "complex",
			"unit": "VA",
			"description": "constant power wye-connected load on phase B, specified as VA"
		},
		"constant_power_CN": {
			"type": "complex",
			"unit": "VA",
			"description": "constant power wye-connected load on phase C, specified as VA"
		},
		"constant_power_AN_real": {
			"type": "double",
			"unit": "W",
			"description": "constant power wye-connected load on phase A, real only, specified as W"
		},
		"constant_power_BN_real": {
			"type": "double",
			"unit": "W",
			"description": "constant power wye-connected load on phase B, real only, specified as W"
		},
		"constant_power_CN_real": {
			"type": "double",
			"unit": "W",
			"description": "constant power wye-connected load on phase C, real only, specified as W"
		},
		"constant_power_AN_reac": {
			"type": "double",
			"unit": "VAr",
			"description": "constant power wye-connected load on phase A, imaginary only, specified as VAr"
		},
		"constant_power_BN_reac": {
			"type": "double",
			"unit": "VAr",
			"description": "constant power wye-connected load on phase B, imaginary only, specified as VAr"
		},
		"constant_power_CN_reac": {
			"type": "double",
			"unit": "VAr",
			"description": "constant power wye-connected load on phase C, imaginary only, specified as VAr"
		},
		"constant_current_AN": {
			"type": "complex",
			"unit": "A",
			"description": "constant current wye-connected load on phase A, specified as Amps"
		},
		"constant_current_BN": {
			"type": "complex",
			"unit": "A",
			"description": "constant current wye-connected load on phase B, specified as Amps"
		},
		"constant_current_CN": {
			"type": "complex",
			"unit": "A",
			"description": "constant current wye-connected load on phase C, specified as Amps"
		},
		"constant_current_AN_real": {
			"type": "double",
			"unit": "A",
			"description": "constant current wye-connected load on phase A, real only, specified as Amps"
		},
		"constant_current_BN_real": {
			"type": "double",
			"unit": "A",
			"description": "constant current wye-connected load on phase B, real only, specified as Amps"
		},
		"constant_current_CN_real": {
			"type": "double",
			"unit": "A",
			"description": "constant current wye-connected load on phase C, real only, specified as Amps"
		},
		"constant_current_AN_reac": {
			"type": "double",
			"unit": "A",
			"description": "constant current wye-connected load on phase A, imaginary only, specified as Amps"
		},
		"constant_current_BN_reac": {
			"type": "double",
			"unit": "A",
			"description": "constant current wye-connected load on phase B, imaginary only, specified as Amps"
		},
		"constant_current_CN_reac": {
			"type": "double",
			"unit": "A",
			"description": "constant current wye-connected load on phase C, imaginary only, specified as Amps"
		},
		"constant_impedance_AN": {
			"type": "complex",
			"unit": "Ohm",
			"description": "constant impedance wye-connected load on phase A, specified as Ohms"
		},
		"constant_impedance_BN": {
			"type": "complex",
			"unit": "Ohm",
			"description": "constant impedance wye-connected load on phase B, specified as Ohms"
		},
		"constant_impedance_CN": {
			"type": "complex",
			"unit": "Ohm",
			"description": "constant impedance wye-connected load on phase C, specified as Ohms"
		},
		"constant_impedance_AN_real": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance wye-connected load on phase A, real only, specified as Ohms"
		},
		"constant_impedance_BN_real": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance wye-connected load on phase B, real only, specified as Ohms"
		},
		"constant_impedance_CN_real": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance wye-connected load on phase C, real only, specified as Ohms"
		},
		"constant_impedance_AN_reac": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance wye-connected load on phase A, imaginary only, specified as Ohms"
		},
		"constant_impedance_BN_reac": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance wye-connected load on phase B, imaginary only, specified as Ohms"
		},
		"constant_impedance_CN_reac": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance wye-connected load on phase C, imaginary only, specified as Ohms"
		},
		"constant_power_AB": {
			"type": "complex",
			"unit": "VA",
			"description": "constant power delta-connected load on phase A, specified as VA"
		},
		"constant_power_BC": {
			"type": "complex",
			"unit": "VA",
			"description": "constant power delta-connected load on phase B, specified as VA"
		},
		"constant_power_CA": {
			"type": "complex",
			"unit": "VA",
			"description": "constant power delta-connected load on phase C, specified as VA"
		},
		"constant_power_AB_real": {
			"type": "double",
			"unit": "W",
			"description": "constant power delta-connected load on phase A, real only, specified as W"
		},
		"constant_power_BC_real": {
			"type": "double",
			"unit": "W",
			"description": "constant power delta-connected load on phase B, real only, specified as W"
		},
		"constant_power_CA_real": {
			"type": "double",
			"unit": "W",
			"description": "constant power delta-connected load on phase C, real only, specified as W"
		},
		"constant_power_AB_reac": {
			"type": "double",
			"unit": "VAr",
			"description": "constant power delta-connected load on phase A, imaginary only, specified as VAr"
		},
		"constant_power_BC_reac": {
			"type": "double",
			"unit": "VAr",
			"description": "constant power delta-connected load on phase B, imaginary only, specified as VAr"
		},
		"constant_power_CA_reac": {
			"type": "double",
			"unit": "VAr",
			"description": "constant power delta-connected load on phase C, imaginary only, specified as VAr"
		},
		"constant_current_AB": {
			"type": "complex",
			"unit": "A",
			"description": "constant current delta-connected load on phase A, specified as Amps"
		},
		"constant_current_BC": {
			"type": "complex",
			"unit": "A",
			"description": "constant current delta-connected load on phase B, specified as Amps"
		},
		"constant_current_CA": {
			"type": "complex",
			"unit": "A",
			"description": "constant current delta-connected load on phase C, specified as Amps"
		},
		"constant_current_AB_real": {
			"type": "double",
			"unit": "A",
			"description": "constant current delta-connected load on phase A, real only, specified as Amps"
		},
		"constant_current_BC_real": {
			"type": "double",
			"unit": "A",
			"description": "constant current delta-connected load on phase B, real only, specified as Amps"
		},
		"constant_current_CA_real": {
			"type": "double",
			"unit": "A",
			"description": "constant current delta-connected load on phase C, real only, specified as Amps"
		},
		"constant_current_AB_reac": {
			"type": "double",
			"unit": "A",
			"description": "constant current delta-connected load on phase A, imaginary only, specified as Amps"
		},
		"constant_current_BC_reac": {
			"type": "double",
			"unit": "A",
			"description": "constant current delta-connected load on phase B, imaginary only, specified as Amps"
		},
		"constant_current_CA_reac": {
			"type": "double",
			"unit": "A",
			"description": "constant current delta-connected load on phase C, imaginary only, specified as Amps"
		},
		"constant_impedance_AB": {
			"type": "complex",
			"unit": "Ohm",
			"description": "constant impedance delta-connected load on phase A, specified as Ohms"
		},
		"constant_impedance_BC": {
			"type": "complex",
			"unit": "Ohm",
			"description": "constant impedance delta-connected load on phase B, specified as Ohms"
		},
		"constant_impedance_CA": {
			"type": "complex",
			"unit": "Ohm",
			"description": "constant impedance delta-connected load on phase C, specified as Ohms"
		},
		"constant_impedance_AB_real": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance delta-connected load on phase A, real only, specified as Ohms"
		},
		"constant_impedance_BC_real": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance delta-connected load on phase B, real only, specified as Ohms"
		},
		"constant_impedance_CA_real": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance delta-connected load on phase C, real only, specified as Ohms"
		},
		"constant_impedance_AB_reac": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance delta-connected load on phase A, imaginary only, specified as Ohms"
		},
		"constant_impedance_BC_reac": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance delta-connected load on phase B, imaginary only, specified as Ohms"
		},
		"constant_impedance_CA_reac": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance delta-connected load on phase C, imaginary only, specified as Ohms"
		},
		"measured_voltage_A": {
			"type": "complex",
			"unit": "V",
			"description": "current measured voltage on phase A"
		},
		"measured_voltage_B": {
			"type": "complex",
			"unit": "V",
			"description": "current measured voltage on phase B"
		},
		"measured_voltage_C": {
			"type": "complex",
			"unit": "V",
			"description": "current measured voltage on phase C"
		},
		"measured_voltage_AB": {
			"type": "complex",
			"unit": "V",
			"description": "current measured voltage on phases AB"
		},
		"measured_voltage_BC": {
			"type": "complex",
			"unit": "V",
			"description": "current measured voltage on phases BC"
		},
		"measured_voltage_CA": {
			"type": "complex",
			"unit": "V",
			"description": "current measured voltage on phases CA"
		},
		"phase_loss_protection": {
			"type": "bool",
			"description": "Trip all three phases of the load if a fault occurs"
		},
		"measured_power_A": {
			"type": "complex",
			"unit": "VA",
			"description": "current measured power on phase A"
		},
		"measured_power_B": {
			"type": "complex",
			"unit": "VA",
			"description": "current measured power on phase B"
		},
		"measured_power_C": {
			"type": "complex",
			"unit": "VA",
			"description": "current measured power on phase C"
		},
		"measured_power": {
			"type": "complex",
			"unit": "VA",
			"description": "current total power"
		},
		"base_power_A": {
			"type": "double",
			"unit": "VA",
			"description": "in similar format as ZIPload, this represents the nominal power on phase A before applying ZIP fractions"
		},
		"base_power_B": {
			"type": "double",
			"unit": "VA",
			"description": "in similar format as ZIPload, this represents the nominal power on phase B before applying ZIP fractions"
		},
		"base_power_C": {
			"type": "double",
			"unit": "VA",
			"description": "in similar format as ZIPload, this represents the nominal power on phase C before applying ZIP fractions"
		},
		"power_pf_A": {
			"type": "double",
			"unit": "pu",
			"description": "in similar format as ZIPload, this is the power factor of the phase A constant power portion of load"
		},
		"current_pf_A": {
			"type": "double",
			"unit": "pu",
			"description": "in similar format as ZIPload, this is the power factor of the phase A constant current portion of load"
		},
		"impedance_pf_A": {
			"type": "double",
			"unit": "pu",
			"description": "in similar format as ZIPload, this is the power factor of the phase A constant impedance portion of load"
		},
		"power_pf_B": {
			"type": "double",
			"unit": "pu",
			"description": "in similar format as ZIPload, this is the power factor of the phase B constant power portion of load"
		},
		"current_pf_B": {
			"type": "double",
			"unit": "pu",
			"description": "in similar format as ZIPload, this is the power factor of the phase B constant current portion of load"
		},
		"impedance_pf_B": {
			"type": "double",
			"unit": "pu",
			"description": "in similar format as ZIPload, this is the power factor of the phase B constant impedance portion of load"
		},
		"power_pf_C": {
			"type": "double",
			"unit": "pu",
			"description": "in similar format as ZIPload, this is the power factor of the phase C constant power portion of load"
		},
		"current_pf_C": {
			"type": "double",
			"unit": "pu",
			"description": "in similar format as ZIPload, this is the power factor of the phase C constant current portion of load"
		},
		"impedance_pf_C": {
			"type": "double",
			"unit": "pu",
			"description": "in similar format as ZIPload, this is the power factor of the phase C constant impedance portion of load"
		},
		"power_fraction_A": {
			"type": "double",
			"unit": "pu",
			"description": "this is the constant power fraction of base power on phase A"
		},
		"current_fraction_A": {
			"type": "double",
			"unit": "pu",
			"description": "this is the constant current fraction of base power on phase A"
		},
		"impedance_fraction_A": {
			"type": "double",
			"unit": "pu",
			"description": "this is the constant impedance fraction of base power on phase A"
		},
		"power_fraction_B": {
			"type": "double",
			"unit": "pu",
			"description": "this is the constant power fraction of base power on phase B"
		},
		"current_fraction_B": {
			"type": "double",
			"unit": "pu",
			"description": "this is the constant current fraction of base power on phase B"
		},
		"impedance_fraction_B": {
			"type": "double",
			"unit": "pu",
			"description": "this is the constant impedance fraction of base power on phase B"
		},
		"power_fraction_C": {
			"type": "double",
			"unit": "pu",
			"description": "this is the constant power fraction of base power on phase C"
		},
		"current_fraction_C": {
			"type": "double",
			"unit": "pu",
			"description": "this is the constant current fraction of base power on phase C"
		},
		"impedance_fraction_C": {
			"type": "double",
			"unit": "pu",
			"description": "this is the constant impedance fraction of base power on phase C"
		},
		"inrush_integration_method_capacitance": {
			"type": "enumeration",
			"keywords": {
				"BACKWARD_EULER":3,
				"TRAPEZOIDAL":2,
				"UNDEFINED":1,
				"NONE":0
			},
			"description": "Selected integration method to use for capacitive elements of the load"
		},
		"inrush_integration_method_inductance": {
			"type": "enumeration",
			"keywords": {
				"BACKWARD_EULER":3,
				"TRAPEZOIDAL":2,
				"UNDEFINED":1,
				"NONE":0
			},
			"description": "Selected integration method to use for inductive elements of the load"
		}
	},
	"load_tracker": {
		"target": {
			"type": "object",
			"description": "target object to track the load of"
		},
		"target_property": {
			"type": "char256",
			"description": "property on the target object representing the load"
		},
		"operation": {
			"type": "enumeration",
			"keywords": {
				"ANGLE":3,
				"MAGNITUDE":2,
				"IMAGINARY":1,
				"REAL":0
			},
			"description": "operation to perform on complex property types"
		},
		"full_scale": {
			"type": "double",
			"description": "magnitude of the load at full load, used for feed-forward control"
		},
		"setpoint": {
			"type": "double",
			"description": "load setpoint to track to"
		},
		"deadband": {
			"type": "double",
			"description": "percentage deadband"
		},
		"damping": {
			"type": "double",
			"description": "load setpoint to track to"
		},
		"output": {
			"type": "double",
			"description": "output scaling value"
		},
		"feedback": {
			"type": "double",
			"description": "the feedback signal, for reference purposes"
		}
	},
	"meter": {
		"node": {
			"type": "parent"
		},
		"measured_real_energy": {
			"type": "double",
			"unit": "Wh",
			"description": "metered real energy consumption, cummalitive"
		},
		"measured_real_energy_delta": {
			"type": "double",
			"unit": "Wh",
			"description": "delta in metered real energy consumption from last specified measured_energy_delta_timestep"
		},
		"measured_reactive_energy": {
			"type": "double",
			"unit": "VAh",
			"description": "metered reactive energy consumption, cummalitive"
		},
		"measured_reactive_energy_delta": {
			"type": "double",
			"unit": "VAh",
			"description": "delta in metered reactive energy consumption from last specified measured_energy_delta_timestep"
		},
		"measured_energy_delta_timestep": {
			"type": "double",
			"unit": "s",
			"description": "Period of timestep for real and reactive delta energy calculation"
		},
		"measured_power": {
			"type": "complex",
			"unit": "VA",
			"description": "metered complex power"
		},
		"measured_power_A": {
			"type": "complex",
			"unit": "VA",
			"description": "metered complex power on phase A"
		},
		"measured_power_B": {
			"type": "complex",
			"unit": "VA",
			"description": "metered complex power on phase B"
		},
		"measured_power_C": {
			"type": "complex",
			"unit": "VA",
			"description": "metered complex power on phase C"
		},
		"measured_demand": {
			"type": "double",
			"unit": "W",
			"description": "greatest metered real power during simulation"
		},
		"measured_real_power": {
			"type": "double",
			"unit": "W",
			"description": "metered real power"
		},
		"measured_reactive_power": {
			"type": "double",
			"unit": "VAr",
			"description": "metered reactive power"
		},
		"meter_power_consumption": {
			"type": "complex",
			"unit": "VA",
			"description": "metered power used for operating the meter; standby and communication losses"
		},
		"measured_voltage_A": {
			"type": "complex",
			"unit": "V",
			"description": "measured line-to-neutral voltage on phase A"
		},
		"measured_voltage_B": {
			"type": "complex",
			"unit": "V",
			"description": "measured line-to-neutral voltage on phase B"
		},
		"measured_voltage_C": {
			"type": "complex",
			"unit": "V",
			"description": "measured line-to-neutral voltage on phase C"
		},
		"measured_voltage_AB": {
			"type": "complex",
			"unit": "V",
			"description": "measured line-to-line voltage on phase AB"
		},
		"measured_voltage_BC": {
			"type": "complex",
			"unit": "V",
			"description": "measured line-to-line voltage on phase BC"
		},
		"measured_voltage_CA": {
			"type": "complex",
			"unit": "V",
			"description": "measured line-to-line voltage on phase CA"
		},
		"measured_real_max_voltage_A_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured real max line-to-neutral voltage on phase A over a specified interval"
		},
		"measured_real_max_voltage_B_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured real max line-to-neutral voltage on phase B over a specified interval"
		},
		"measured_real_max_voltage_C_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured real max line-to-neutral voltage on phase C over a specified interval"
		},
		"measured_reactive_max_voltage_A_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured reactive max line-to-neutral voltage on phase A over a specified interval"
		},
		"measured_reactive_max_voltage_B_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured reactive max line-to-neutral voltage on phase B over a specified interval"
		},
		"measured_reactive_max_voltage_C_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured reactive max line-to-neutral voltage on phase C over a specified interval"
		},
		"measured_real_max_voltage_AB_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured real max line-to-line voltage on phase A over a specified interval"
		},
		"measured_real_max_voltage_BC_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured real max line-to-line voltage on phase B over a specified interval"
		},
		"measured_real_max_voltage_CA_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured real max line-to-line voltage on phase C over a specified interval"
		},
		"measured_reactive_max_voltage_AB_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured reactive max line-to-line voltage on phase A over a specified interval"
		},
		"measured_reactive_max_voltage_BC_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured reactive max line-to-line voltage on phase B over a specified interval"
		},
		"measured_reactive_max_voltage_CA_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured reactive max line-to-line voltage on phase C over a specified interval"
		},
		"measured_real_min_voltage_A_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured real min line-to-neutral voltage on phase A over a specified interval"
		},
		"measured_real_min_voltage_B_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured real min line-to-neutral voltage on phase B over a specified interval"
		},
		"measured_real_min_voltage_C_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured real min line-to-neutral voltage on phase C over a specified interval"
		},
		"measured_reactive_min_voltage_A_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured reactive min line-to-neutral voltage on phase A over a specified interval"
		},
		"measured_reactive_min_voltage_B_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured reactive min line-to-neutral voltage on phase B over a specified interval"
		},
		"measured_reactive_min_voltage_C_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured reactive min line-to-neutral voltage on phase C over a specified interval"
		},
		"measured_real_min_voltage_AB_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured real min line-to-line voltage on phase A over a specified interval"
		},
		"measured_real_min_voltage_BC_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured real min line-to-line voltage on phase B over a specified interval"
		},
		"measured_real_min_voltage_CA_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured real min line-to-line voltage on phase C over a specified interval"
		},
		"measured_reactive_min_voltage_AB_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured reactive min line-to-line voltage on phase A over a specified interval"
		},
		"measured_reactive_min_voltage_BC_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured reactive min line-to-line voltage on phase B over a specified interval"
		},
		"measured_reactive_min_voltage_CA_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured reactive min line-to-line voltage on phase C over a specified interval"
		},
		"measured_avg_voltage_A_mag_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured avg line-to-neutral voltage magnitude on phase A over a specified interval"
		},
		"measured_avg_voltage_B_mag_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured avg line-to-neutral voltage magnitude on phase B over a specified interval"
		},
		"measured_avg_voltage_C_mag_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured avg line-to-neutral voltage magnitude on phase C over a specified interval"
		},
		"measured_avg_voltage_AB_mag_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured avg line-to-line voltage magnitude on phase A over a specified interval"
		},
		"measured_avg_voltage_BC_mag_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured avg line-to-line voltage magnitude on phase B over a specified interval"
		},
		"measured_avg_voltage_CA_mag_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured avg line-to-line voltage magnitude on phase C over a specified interval"
		},
		"measured_real_max_power_in_interval": {
			"type": "double",
			"unit": "W",
			"description": "measured maximum real power over a specified interval"
		},
		"measured_reactive_max_power_in_interval": {
			"type": "double",
			"unit": "VAr",
			"description": "measured maximum reactive power over a specified interval"
		},
		"measured_real_min_power_in_interval": {
			"type": "double",
			"unit": "W",
			"description": "measured minimum real power over a specified interval"
		},
		"measured_reactive_min_power_in_interval": {
			"type": "double",
			"unit": "VAr",
			"description": "measured minimum reactive power over a specified interval"
		},
		"measured_avg_real_power_in_interval": {
			"type": "double",
			"unit": "W",
			"description": "measured average real power over a specified interval"
		},
		"measured_avg_reactive_power_in_interval": {
			"type": "double",
			"unit": "VAr",
			"description": "measured average reactive power over a specified interval"
		},
		"measured_real_max_power_A_in_interval": {
			"type": "double",
			"unit": "W",
			"description": "measured A phase maximum real power over a specified interval"
		},
		"measured_reactive_max_power_A_in_interval": {
			"type": "double",
			"unit": "VAr",
			"description": "measured A phase maximum reactive power over a specified interval"
		},
		"measured_real_min_power_A_in_interval": {
			"type": "double",
			"unit": "W",
			"description": "measured A phase minimum real power over a specified interval"
		},
		"measured_reactive_min_power_A_in_interval": {
			"type": "double",
			"unit": "VAr",
			"description": "measured A phase minimum reactive power over a specified interval"
		},
		"measured_avg_real_power_A_in_interval": {
			"type": "double",
			"unit": "W",
			"description": "measured A phase average real power over a specified interval"
		},
		"measured_avg_reactive_power_A_in_interval": {
			"type": "double",
			"unit": "VAr",
			"description": "measured A phase average reactive power over a specified interval"
		},
		"measured_real_max_power_B_in_interval": {
			"type": "double",
			"unit": "W",
			"description": "measured B phase maximum real power over a specified interval"
		},
		"measured_reactive_max_power_B_in_interval": {
			"type": "double",
			"unit": "VAr",
			"description": "measured B phase maximum reactive power over a specified interval"
		},
		"measured_real_min_power_B_in_interval": {
			"type": "double",
			"unit": "W",
			"description": "measured B phase minimum real power over a specified interval"
		},
		"measured_reactive_min_power_B_in_interval": {
			"type": "double",
			"unit": "VAr",
			"description": "measured B phase minimum reactive power over a specified interval"
		},
		"measured_avg_real_power_B_in_interval": {
			"type": "double",
			"unit": "W",
			"description": "measured B phase average real power over a specified interval"
		},
		"measured_avg_reactive_power_B_in_interval": {
			"type": "double",
			"unit": "VAr",
			"description": "measured B phase average reactive power over a specified interval"
		},
		"measured_real_max_power_C_in_interval": {
			"type": "double",
			"unit": "W",
			"description": "measured C phase maximum real power over a specified interval"
		},
		"measured_reactive_max_power_C_in_interval": {
			"type": "double",
			"unit": "VAr",
			"description": "measured C phase maximum reactive power over a specified interval"
		},
		"measured_real_min_power_C_in_interval": {
			"type": "double",
			"unit": "W",
			"description": "measured C phase minimum real power over a specified interval"
		},
		"measured_reactive_min_power_C_in_interval": {
			"type": "double",
			"unit": "VAr",
			"description": "measured C phase minimum reactive power over a specified interval"
		},
		"measured_avg_real_power_C_in_interval": {
			"type": "double",
			"unit": "W",
			"description": "measured C phase average real power over a specified interval"
		},
		"measured_avg_reactive_power_C_in_interval": {
			"type": "double",
			"unit": "VAr",
			"description": "measured C phase average reactive power over a specified interval"
		},
		"measured_stats_interval": {
			"type": "double",
			"unit": "s",
			"description": "Period of timestep for min/max/average calculations"
		},
		"measured_current_A": {
			"type": "complex",
			"unit": "A",
			"description": "measured current on phase A"
		},
		"measured_current_B": {
			"type": "complex",
			"unit": "A",
			"description": "measured current on phase B"
		},
		"measured_current_C": {
			"type": "complex",
			"unit": "A",
			"description": "measured current on phase C"
		},
		"customer_interrupted": {
			"type": "bool",
			"description": "Reliability flag - goes active if the customer is in an 'interrupted' state"
		},
		"customer_interrupted_secondary": {
			"type": "bool",
			"description": "Reliability flag - goes active if the customer is in an 'secondary interrupted' state - i.e., momentary"
		},
		"monthly_bill": {
			"type": "double",
			"unit": "$",
			"description": "Accumulator for the current month's bill"
		},
		"previous_monthly_bill": {
			"type": "double",
			"unit": "$",
			"description": "Total monthly bill for the previous month"
		},
		"previous_monthly_energy": {
			"type": "double",
			"unit": "kWh",
			"description": "Total monthly energy for the previous month"
		},
		"monthly_fee": {
			"type": "double",
			"unit": "$",
			"description": "Once a month flat fee for customer hook-up"
		},
		"monthly_energy": {
			"type": "double",
			"unit": "kWh",
			"description": "Accumulator for the current month's energy consumption"
		},
		"bill_mode": {
			"type": "enumeration",
			"keywords": {
				"TIERED_TOU":5,
				"TIERED_RTP":4,
				"HOURLY":3,
				"TIERED":2,
				"UNIFORM":1,
				"NONE":0
			},
			"description": "Billing structure desired"
		},
		"power_market": {
			"type": "object",
			"description": "Market (auction object) where the price is being received from"
		},
		"bill_day": {
			"type": "int32",
			"description": "day of month bill is to be processed (currently limited to days 1-28)"
		},
		"price": {
			"type": "double",
			"unit": "$/kWh",
			"description": "current price of electricity"
		},
		"price_base": {
			"type": "double",
			"unit": "$/kWh",
			"description": "Used only in TIERED_RTP mode to describe the price before the first tier"
		},
		"first_tier_price": {
			"type": "double",
			"unit": "$/kWh",
			"description": "price of electricity between first tier and second tier energy usage"
		},
		"first_tier_energy": {
			"type": "double",
			"unit": "kWh",
			"description": "switching point between base price and first tier price"
		},
		"second_tier_price": {
			"type": "double",
			"unit": "$/kWh",
			"description": "price of electricity between second tier and third tier energy usage"
		},
		"second_tier_energy": {
			"type": "double",
			"unit": "kWh",
			"description": "switching point between first tier price and second tier price"
		},
		"third_tier_price": {
			"type": "double",
			"unit": "$/kWh",
			"description": "price of electricity when energy usage exceeds third tier energy usage"
		},
		"third_tier_energy": {
			"type": "double",
			"unit": "kWh",
			"description": "switching point between second tier price and third tier price"
		}
	},
	"motor": {
		"node": {
			"type": "parent"
		},
		"base_power": {
			"type": "double",
			"unit": "W",
			"description": "base power"
		},
		"n": {
			"type": "double",
			"description": "ratio of stator auxiliary windings to stator main windings"
		},
		"Rds": {
			"type": "double",
			"unit": "ohm",
			"description": "d-axis resistance - single-phase model"
		},
		"Rqs": {
			"type": "double",
			"unit": "ohm",
			"description": "q-asis resistance - single-phase model"
		},
		"Rs": {
			"type": "double",
			"unit": "ohm",
			"description": "stator resistance - three-phase model"
		},
		"Rr": {
			"type": "double",
			"unit": "ohm",
			"description": "rotor resistance"
		},
		"Xm": {
			"type": "double",
			"unit": "ohm",
			"description": "magnetizing reactance"
		},
		"Xr": {
			"type": "double",
			"unit": "ohm",
			"description": "rotor reactance"
		},
		"Xs": {
			"type": "double",
			"unit": "ohm",
			"description": "stator leakage reactance - three-phase model"
		},
		"Xc_run": {
			"type": "double",
			"unit": "ohm",
			"description": "running capacitor reactance - single-phase model"
		},
		"Xc_start": {
			"type": "double",
			"unit": "ohm",
			"description": "starting capacitor reactance - single-phase model"
		},
		"Xd_prime": {
			"type": "double",
			"unit": "ohm",
			"description": "d-axis reactance - single-phase model"
		},
		"Xq_prime": {
			"type": "double",
			"unit": "ohm",
			"description": "q-axis reactance - single-phase model"
		},
		"A_sat": {
			"type": "double",
			"description": "flux saturation parameter, A - single-phase model"
		},
		"b_sat": {
			"type": "double",
			"description": "flux saturation parameter, b - single-phase model"
		},
		"H": {
			"type": "double",
			"unit": "s",
			"description": "inertia constant"
		},
		"J": {
			"type": "double",
			"unit": "kg*m^2",
			"description": "moment of inertia"
		},
		"number_of_poles": {
			"type": "double",
			"description": "number of poles"
		},
		"To_prime": {
			"type": "double",
			"unit": "s",
			"description": "rotor time constant"
		},
		"capacitor_speed": {
			"type": "double",
			"unit": "%",
			"description": "percentage speed of nominal when starting capacitor kicks in"
		},
		"trip_time": {
			"type": "double",
			"unit": "s",
			"description": "time motor can stay stalled before tripping off "
		},
		"uv_relay_install": {
			"type": "enumeration",
			"keywords": {
				"UNINSTALLED":1,
				"INSTALLED":0
			},
			"description": "is under-voltage relay protection installed on this motor"
		},
		"uv_relay_trip_time": {
			"type": "double",
			"unit": "s",
			"description": "time low-voltage condition must exist for under-voltage protection to trip "
		},
		"uv_relay_trip_V": {
			"type": "double",
			"unit": "pu",
			"description": "pu minimum voltage before under-voltage relay trips"
		},
		"contactor_state": {
			"type": "enumeration",
			"keywords": {
				"CLOSED":1,
				"OPEN":0
			},
			"description": "the current status of the motor"
		},
		"contactor_open_Vmin": {
			"type": "double",
			"unit": "pu",
			"description": "pu voltage at which motor contactor opens"
		},
		"contactor_close_Vmax": {
			"type": "double",
			"unit": "pu",
			"description": "pu voltage at which motor contactor recloses"
		},
		"reconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "time before tripped motor reconnects"
		},
		"mechanical_torque": {
			"type": "double",
			"unit": "pu",
			"description": "mechanical torque applied to the motor"
		},
		"torque_usage_method": {
			"type": "enumeration",
			"keywords": {
				"SPEEDFOUR":1,
				"DIRECT":0
			},
			"description": "Approach for using Tmech on both types"
		},
		"iteration_count": {
			"type": "int32",
			"description": "maximum number of iterations for steady state model"
		},
		"delta_mode_voltage_trigger": {
			"type": "double",
			"unit": "%",
			"description": "percentage voltage of nominal when delta mode is triggered"
		},
		"delta_mode_rotor_speed_trigger": {
			"type": "double",
			"unit": "%",
			"description": "percentage speed of nominal when delta mode is triggered"
		},
		"delta_mode_voltage_exit": {
			"type": "double",
			"unit": "%",
			"description": "percentage voltage of nominal to exit delta mode"
		},
		"delta_mode_rotor_speed_exit": {
			"type": "double",
			"unit": "%",
			"description": "percentage speed of nominal to exit delta mode"
		},
		"maximum_speed_error": {
			"type": "double",
			"description": "maximum speed error for transitioning modes"
		},
		"rotor_speed": {
			"type": "double",
			"unit": "rad/s",
			"description": "rotor speed"
		},
		"motor_status": {
			"type": "enumeration",
			"keywords": {
				"OFF":3,
				"TRIPPED":2,
				"STALLED":1,
				"RUNNING":0
			},
			"description": "the current status of the motor"
		},
		"motor_status_number": {
			"type": "int32",
			"description": "the current status of the motor as an integer"
		},
		"desired_motor_state": {
			"type": "enumeration",
			"keywords": {
				"OFF":1,
				"ON":0
			},
			"description": "Should the motor be on or off"
		},
		"connected_house": {
			"type": "object",
			"description": "house object to monitor the XXX property to determine if the motor is running"
		},
		"connected_house_assumed_mode": {
			"type": "enumeration",
			"keywords": {
				"HEATING":2,
				"COOLING":1,
				"NONE":0
			},
			"description": "Assumed operation mode of connected_house object"
		},
		"motor_operation_type": {
			"type": "enumeration",
			"keywords": {
				"THREE-PHASE":1,
				"SINGLE-PHASE":0
			},
			"description": "current operation type of the motor - deltamode related"
		},
		"triplex_connection_type": {
			"type": "enumeration",
			"keywords": {
				"TRIPLEX_12":2,
				"TRIPLEX_2N":1,
				"TRIPLEX_1N":0
			},
			"description": "Describes how the motor will connect to the triplex devices"
		},
		"motor_trip": {
			"type": "bool",
			"description": "boolean variable to check if motor is tripped"
		}
	},
	"node": {
		"powerflow_object": {
			"type": "parent"
		},
		"bustype": {
			"type": "enumeration",
			"keywords": {
				"SWING_PQ":3,
				"SWING":2,
				"PV":1,
				"PQ":0
			},
			"description": "defines whether the node is a PQ, PV, or SWING node"
		},
		"busflags": {
			"type": "set",
			"keywords": {
				"ISSOURCE":2,
				"HASSOURCE":1
			},
			"description": "flag indicates node has a source for voltage, i.e. connects to the swing node"
		},
		"reference_bus": {
			"type": "object",
			"description": "reference bus from which frequency is defined"
		},
		"maximum_voltage_error": {
			"type": "double",
			"unit": "V",
			"description": "convergence voltage limit or convergence criteria"
		},
		"voltage_A": {
			"type": "complex",
			"unit": "V",
			"description": "bus voltage, Phase A to ground"
		},
		"voltage_B": {
			"type": "complex",
			"unit": "V",
			"description": "bus voltage, Phase B to ground"
		},
		"voltage_C": {
			"type": "complex",
			"unit": "V",
			"description": "bus voltage, Phase C to ground"
		},
		"voltage_AB": {
			"type": "complex",
			"unit": "V",
			"description": "line voltages, Phase AB"
		},
		"voltage_BC": {
			"type": "complex",
			"unit": "V",
			"description": "line voltages, Phase BC"
		},
		"voltage_CA": {
			"type": "complex",
			"unit": "V",
			"description": "line voltages, Phase CA"
		},
		"mean_repair_time": {
			"type": "double",
			"unit": "s",
			"description": "Time after a fault clears for the object to be back in service"
		},
		"frequency_measure_type": {
			"type": "enumeration",
			"keywords": {
				"PLL":3,
				"SIMPLE":2,
				"NONE":1
			},
			"description": "PLL frequency measurement"
		},
		"sfm_Tf": {
			"type": "double",
			"unit": "s",
			"description": "Transducer time constant for simplified frequency measurement (seconds)"
		},
		"pll_Kp": {
			"type": "double",
			"unit": "pu",
			"description": "Proportional gain of PLL frequency measurement"
		},
		"pll_Ki": {
			"type": "double",
			"unit": "pu",
			"description": "Integration gain of PLL frequency measurement"
		},
		"measured_angle_A": {
			"type": "double",
			"unit": "rad",
			"description": "bus angle measurement, phase A"
		},
		"measured_frequency_A": {
			"type": "double",
			"unit": "Hz",
			"description": "frequency measurement, phase A"
		},
		"measured_angle_B": {
			"type": "double",
			"unit": "rad",
			"description": "bus angle measurement, phase B"
		},
		"measured_frequency_B": {
			"type": "double",
			"unit": "Hz",
			"description": "frequency measurement, phase B"
		},
		"measured_angle_C": {
			"type": "double",
			"unit": "rad",
			"description": "bus angle measurement, phase C"
		},
		"measured_frequency_C": {
			"type": "double",
			"unit": "Hz",
			"description": "frequency measurement, phase C"
		},
		"measured_frequency": {
			"type": "double",
			"unit": "Hz",
			"description": "frequency measurement - average of present phases"
		},
		"service_status": {
			"type": "enumeration",
			"keywords": {
				"OUT_OF_SERVICE":0,
				"IN_SERVICE":1
			},
			"description": "In and out of service flag"
		},
		"service_status_double": {
			"type": "double",
			"description": "In and out of service flag - type double - will indiscriminately override service_status - useful for schedules"
		},
		"previous_uptime": {
			"type": "double",
			"unit": "min",
			"description": "Previous time between disconnects of node in minutes"
		},
		"current_uptime": {
			"type": "double",
			"unit": "min",
			"description": "Current time since last disconnect of node in minutes"
		},
		"GFA_enable": {
			"type": "bool",
			"description": "Disable/Enable Grid Friendly Appliance(TM)-type functionality"
		},
		"GFA_freq_low_trip": {
			"type": "double",
			"unit": "Hz",
			"description": "Low frequency trip point for Grid Friendly Appliance(TM)-type functionality"
		},
		"GFA_freq_high_trip": {
			"type": "double",
			"unit": "Hz",
			"description": "High frequency trip point for Grid Friendly Appliance(TM)-type functionality"
		},
		"GFA_volt_low_trip": {
			"type": "double",
			"unit": "pu",
			"description": "Low voltage trip point for Grid Friendly Appliance(TM)-type functionality"
		},
		"GFA_volt_high_trip": {
			"type": "double",
			"unit": "pu",
			"description": "High voltage trip point for Grid Friendly Appliance(TM)-type functionality"
		},
		"GFA_reconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "Reconnect time for Grid Friendly Appliance(TM)-type functionality"
		},
		"GFA_freq_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "Frequency violation disconnect time for Grid Friendly Appliance(TM)-type functionality"
		},
		"GFA_volt_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "Voltage violation disconnect time for Grid Friendly Appliance(TM)-type functionality"
		},
		"GFA_status": {
			"type": "bool",
			"description": "Grid Friendly Appliance(TM)-type functionality - whether it is in service (not tripped) or not"
		},
		"GFA_trip_method": {
			"type": "enumeration",
			"keywords": {
				"OVER_VOLTAGE":4,
				"UNDER_VOLTAGE":3,
				"OVER_FREQUENCY":2,
				"UNDER_FREQUENCY":1,
				"NONE":0
			},
			"description": "GFA trip for over-voltage"
		},
		"topological_parent": {
			"type": "object",
			"description": "topological parent as per GLM configuration"
		},
		"behaving_as_swing": {
			"type": "bool",
			"description": "Indicator flag for if a bus is behaving as a reference voltage source - valid for a SWING or SWING_PQ"
		}
	},
	"overhead_line": {
		"line": {
			"type": "parent"
		}
	},
	"overhead_line_conductor": {
		"geometric_mean_radius": {
			"type": "double",
			"unit": "ft",
			"description": "radius of the conductor"
		},
		"resistance": {
			"type": "double",
			"unit": "Ohm/mile",
			"description": "resistance in Ohms/mile of the conductor"
		},
		"diameter": {
			"type": "double",
			"unit": "in",
			"description": "Diameter of line for capacitance calculations"
		},
		"rating.summer.continuous": {
			"type": "double",
			"unit": "A",
			"description": "Continuous summer amp rating"
		},
		"rating.summer.emergency": {
			"type": "double",
			"unit": "A",
			"description": "Emergency summer amp rating"
		},
		"rating.winter.continuous": {
			"type": "double",
			"unit": "A",
			"description": "Continuous winter amp rating"
		},
		"rating.winter.emergency": {
			"type": "double",
			"unit": "A",
			"description": "Emergency winter amp rating"
		}
	},
	"performance_motor": {
		"node": {
			"type": "parent"
		},
		"motor_status": {
			"type": "enumeration",
			"keywords": {
				"OFF":3,
				"TRIPPED":2,
				"STALLED":1,
				"RUNNING":0
			},
			"description": "the current status of the motor"
		},
		"motor_status_number": {
			"type": "int32",
			"description": "the current status of the motor as an integer"
		},
		"Pbase": {
			"type": "double",
			"unit": "W",
			"description": "motor rated size"
		},
		"power_value": {
			"type": "complex",
			"unit": "VA",
			"description": "motor power consumption"
		},
		"power_factor": {
			"type": "double",
			"unit": "pu",
			"description": "Compressor power factor"
		},
		"delta_f_val": {
			"type": "double",
			"description": "Frequency change value for compressor sensitivities"
		},
		"Vbrk": {
			"type": "double",
			"unit": "pu",
			"description": "Compressor motor breakdown voltage"
		},
		"Vstall": {
			"type": "double",
			"unit": "pu",
			"description": "Compressor stall threshold voltage"
		},
		"Vrst": {
			"type": "double",
			"unit": "pu",
			"description": "Voltage at which motor can restart"
		},
		"K_p1": {
			"type": "double",
			"unit": "pu",
			"description": "Real power coefficient for running state 1, puP/puV"
		},
		"K_q1": {
			"type": "double",
			"unit": "pu",
			"description": "Reactive power coefficient for running state 1, puQ/puV"
		},
		"K_p2": {
			"type": "double",
			"unit": "pu",
			"description": "Real power coefficient for running state 2, puP/puV"
		},
		"K_q2": {
			"type": "double",
			"unit": "pu",
			"description": "Reactive power coefficient for running state 2, puQ/puV"
		},
		"N_p1": {
			"type": "double",
			"description": "Real power exponent for running state 1"
		},
		"N_q1": {
			"type": "double",
			"description": "Reactive power exponent for running state 1"
		},
		"N_p2": {
			"type": "double",
			"description": "Real power exponent for running state 2"
		},
		"N_q2": {
			"type": "double",
			"description": "Reactive power exponent for running state 2"
		},
		"CmpKpf": {
			"type": "double",
			"unit": "pu",
			"description": "Real power frequency sensitivity in puP/puf"
		},
		"CmpKqf": {
			"type": "double",
			"unit": "pu",
			"description": "Reactive power frequency sensitivity in puQ/puf"
		},
		"stall_impedance": {
			"type": "complex",
			"unit": "pu",
			"description": "compressor stall imepdance"
		},
		"stall_resistance": {
			"type": "double",
			"unit": "pu",
			"description": "compressor stall resistance"
		},
		"stall_reactance": {
			"type": "double",
			"unit": "pu",
			"description": "compressor stall reactance"
		},
		"Tstall": {
			"type": "double",
			"unit": "s",
			"description": "stall time"
		},
		"reconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "reconnect time after a trip"
		},
		"Pinit": {
			"type": "double",
			"unit": "pu",
			"description": "Initial assumed real power loading of connected terminal"
		},
		"Vinit": {
			"type": "double",
			"unit": "pu",
			"description": "Initial assumed voltage value of connected terminal"
		}
	},
	"power_metrics": {
		"SAIFI": {
			"type": "double",
			"description": "Displays annual SAIFI values as per IEEE 1366-2003"
		},
		"SAIFI_int": {
			"type": "double",
			"description": "Displays SAIFI values over the period specified by base_time_value as per IEEE 1366-2003"
		},
		"SAIDI": {
			"type": "double",
			"description": "Displays annual SAIDI values as per IEEE 1366-2003"
		},
		"SAIDI_int": {
			"type": "double",
			"description": "Displays SAIDI values over the period specified by base_time_value as per IEEE 1366-2003"
		},
		"CAIDI": {
			"type": "double",
			"description": "Displays annual CAIDI values as per IEEE 1366-2003"
		},
		"CAIDI_int": {
			"type": "double",
			"description": "Displays SAIDI values over the period specified by base_time_value as per IEEE 1366-2003"
		},
		"ASAI": {
			"type": "double",
			"description": "Displays annual AISI values as per IEEE 1366-2003"
		},
		"ASAI_int": {
			"type": "double",
			"description": "Displays AISI values over the period specified by base_time_value as per IEEE 1366-2003"
		},
		"MAIFI": {
			"type": "double",
			"description": "Displays annual MAIFI values as per IEEE 1366-2003"
		},
		"MAIFI_int": {
			"type": "double",
			"description": "Displays MAIFI values over the period specified by base_time_value as per IEEE 1366-2003"
		},
		"base_time_value": {
			"type": "double",
			"unit": "s",
			"description": "time period over which _int values are claculated"
		}
	},
	"powerflow_library": {

	},
	"powerflow_object": {
		"phases": {
			"type": "set",
			"keywords": {
				"A":1,
				"B":2,
				"C":4,
				"D":256,
				"N":8,
				"S":112,
				"G":128
			}
		},
		"nominal_voltage": {
			"type": "double",
			"unit": "V"
		},
		"inrush_integration_method": {
			"type": "enumeration",
			"keywords": {
				"BACKWARD_EULER":3,
				"TRAPEZOIDAL":2,
				"NONE":0
			},
			"description": "Integration method for in-rush"
		}
	},
	"pqload": {
		"load": {
			"type": "parent"
		},
		"weather": {
			"type": "object"
		},
		"T_nominal": {
			"type": "double",
			"unit": "degF"
		},
		"Zp_T": {
			"type": "double",
			"unit": "ohm/degF"
		},
		"Zp_H": {
			"type": "double",
			"unit": "ohm/%"
		},
		"Zp_S": {
			"type": "double",
			"unit": "ohm*h/Btu"
		},
		"Zp_W": {
			"type": "double",
			"unit": "ohm/mph"
		},
		"Zp_R": {
			"type": "double",
			"unit": "ohm*h/in"
		},
		"Zp": {
			"type": "double",
			"unit": "ohm"
		},
		"Zq_T": {
			"type": "double",
			"unit": "F/degF"
		},
		"Zq_H": {
			"type": "double",
			"unit": "F/%"
		},
		"Zq_S": {
			"type": "double",
			"unit": "F*h/Btu"
		},
		"Zq_W": {
			"type": "double",
			"unit": "F/mph"
		},
		"Zq_R": {
			"type": "double",
			"unit": "F*h/in"
		},
		"Zq": {
			"type": "double",
			"unit": "F"
		},
		"Im_T": {
			"type": "double",
			"unit": "A/degF"
		},
		"Im_H": {
			"type": "double",
			"unit": "A/%"
		},
		"Im_S": {
			"type": "double",
			"unit": "A*h/Btu"
		},
		"Im_W": {
			"type": "double",
			"unit": "A/mph"
		},
		"Im_R": {
			"type": "double",
			"unit": "A*h/in"
		},
		"Im": {
			"type": "double",
			"unit": "A"
		},
		"Ia_T": {
			"type": "double",
			"unit": "deg/degF"
		},
		"Ia_H": {
			"type": "double",
			"unit": "deg/%"
		},
		"Ia_S": {
			"type": "double",
			"unit": "deg*h/Btu"
		},
		"Ia_W": {
			"type": "double",
			"unit": "deg/mph"
		},
		"Ia_R": {
			"type": "double",
			"unit": "deg*h/in"
		},
		"Ia": {
			"type": "double",
			"unit": "deg"
		},
		"Pp_T": {
			"type": "double",
			"unit": "W/degF"
		},
		"Pp_H": {
			"type": "double",
			"unit": "W/%"
		},
		"Pp_S": {
			"type": "double",
			"unit": "W*h/Btu"
		},
		"Pp_W": {
			"type": "double",
			"unit": "W/mph"
		},
		"Pp_R": {
			"type": "double",
			"unit": "W*h/in"
		},
		"Pp": {
			"type": "double",
			"unit": "W"
		},
		"Pq_T": {
			"type": "double",
			"unit": "VAr/degF"
		},
		"Pq_H": {
			"type": "double",
			"unit": "VAr/%"
		},
		"Pq_S": {
			"type": "double",
			"unit": "VAr*h/Btu"
		},
		"Pq_W": {
			"type": "double",
			"unit": "VAr/mph"
		},
		"Pq_R": {
			"type": "double",
			"unit": "VAr*h/in"
		},
		"Pq": {
			"type": "double",
			"unit": "VAr"
		},
		"input_temp": {
			"type": "double",
			"unit": "degF"
		},
		"input_humid": {
			"type": "double",
			"unit": "%"
		},
		"input_solar": {
			"type": "double",
			"unit": "Btu/h"
		},
		"input_wind": {
			"type": "double",
			"unit": "mph"
		},
		"input_rain": {
			"type": "double",
			"unit": "in/h"
		},
		"output_imped_p": {
			"type": "double",
			"unit": "Ohm"
		},
		"output_imped_q": {
			"type": "double",
			"unit": "Ohm"
		},
		"output_current_m": {
			"type": "double",
			"unit": "A"
		},
		"output_current_a": {
			"type": "double",
			"unit": "deg"
		},
		"output_power_p": {
			"type": "double",
			"unit": "W"
		},
		"output_power_q": {
			"type": "double",
			"unit": "VAr"
		},
		"output_impedance": {
			"type": "complex",
			"unit": "ohm"
		},
		"output_current": {
			"type": "complex",
			"unit": "A"
		},
		"output_power": {
			"type": "complex",
			"unit": "VA"
		}
	},
	"recloser": {
		"switch": {
			"type": "parent"
		},
		"retry_time": {
			"type": "double",
			"unit": "s",
			"description": "the amount of time in seconds to wait before the recloser attempts to close"
		},
		"max_number_of_tries": {
			"type": "double",
			"description": "the number of times the recloser will try to close before permanently opening"
		},
		"number_of_tries": {
			"type": "double",
			"description": "Current number of tries recloser has attempted"
		}
	},
	"regulator": {
		"link": {
			"type": "parent"
		},
		"configuration": {
			"type": "object",
			"description": "reference to the regulator_configuration object used to determine regulator properties"
		},
		"tap_A": {
			"type": "int16",
			"description": "current tap position of tap A"
		},
		"tap_B": {
			"type": "int16",
			"description": "current tap position of tap B"
		},
		"tap_C": {
			"type": "int16",
			"description": "current tap position of tap C"
		},
		"msg_mode": {
			"type": "enumeration",
			"keywords": {
				"EXTERNAL":1,
				"INTERNAL":0
			},
			"description": "messages regarding remote node voltage to come internally from gridlabd or externally through co-simulation. Set to EXTERNAL only if you have co-simulation enabled"
		},
		"remote_voltage_A": {
			"type": "complex",
			"unit": "V",
			"description": "remote node voltage, Phase A to ground"
		},
		"remote_voltage_B": {
			"type": "complex",
			"unit": "V",
			"description": "remote node voltage, Phase B to ground"
		},
		"remote_voltage_C": {
			"type": "complex",
			"unit": "V",
			"description": "remote node voltage, Phase C to ground"
		},
		"tap_A_change_count": {
			"type": "double",
			"description": "count of all physical tap changes on phase A since beginning of simulation (plus initial value)"
		},
		"tap_B_change_count": {
			"type": "double",
			"description": "count of all physical tap changes on phase B since beginning of simulation (plus initial value)"
		},
		"tap_C_change_count": {
			"type": "double",
			"description": "count of all physical tap changes on phase C since beginning of simulation (plus initial value)"
		},
		"sense_node": {
			"type": "object",
			"description": "Node to be monitored for voltage control in remote sense mode"
		},
		"regulator_resistance": {
			"type": "double",
			"unit": "Ohm",
			"description": "The resistance value of the regulator when it is not blown."
		}
	},
	"regulator_configuration": {
		"connect_type": {
			"type": "enumeration",
			"keywords": {
				"CLOSED_DELTA":5,
				"OPEN_DELTA_CABA":4,
				"OPEN_DELTA_BCAC":3,
				"OPEN_DELTA_ABBC":2,
				"WYE_WYE":1,
				"UNKNOWN":0
			},
			"description": "Designation of connection style"
		},
		"band_center": {
			"type": "double",
			"unit": "V",
			"description": "band center setting of regulator control"
		},
		"band_width": {
			"type": "double",
			"unit": "V",
			"description": "band width setting of regulator control"
		},
		"time_delay": {
			"type": "double",
			"unit": "s",
			"description": "mechanical time delay between tap changes"
		},
		"dwell_time": {
			"type": "double",
			"unit": "s",
			"description": "time delay before a control action of regulator control"
		},
		"raise_taps": {
			"type": "int16",
			"description": "number of regulator raise taps, or the maximum raise voltage tap position"
		},
		"lower_taps": {
			"type": "int16",
			"description": "number of regulator lower taps, or the minimum lower voltage tap position"
		},
		"current_transducer_ratio": {
			"type": "double",
			"unit": "pu",
			"description": "primary rating of current transformer"
		},
		"power_transducer_ratio": {
			"type": "double",
			"unit": "pu",
			"description": "potential transformer rating"
		},
		"compensator_r_setting_A": {
			"type": "double",
			"unit": "V",
			"description": "Line Drop Compensation R setting of regulator control (in volts) on Phase A"
		},
		"compensator_r_setting_B": {
			"type": "double",
			"unit": "V",
			"description": "Line Drop Compensation R setting of regulator control (in volts) on Phase B"
		},
		"compensator_r_setting_C": {
			"type": "double",
			"unit": "V",
			"description": "Line Drop Compensation R setting of regulator control (in volts) on Phase C"
		},
		"compensator_x_setting_A": {
			"type": "double",
			"unit": "V",
			"description": "Line Drop Compensation X setting of regulator control (in volts) on Phase A"
		},
		"compensator_x_setting_B": {
			"type": "double",
			"unit": "V",
			"description": "Line Drop Compensation X setting of regulator control (in volts) on Phase B"
		},
		"compensator_x_setting_C": {
			"type": "double",
			"unit": "V",
			"description": "Line Drop Compensation X setting of regulator control (in volts) on Phase C"
		},
		"CT_phase": {
			"type": "set",
			"keywords": {
				"C":4,
				"B":2,
				"A":1
			},
			"description": "phase(s) monitored by CT"
		},
		"PT_phase": {
			"type": "set",
			"keywords": {
				"C":4,
				"B":2,
				"A":1
			},
			"description": "phase(s) monitored by PT"
		},
		"regulation": {
			"type": "double",
			"description": "regulation of voltage regulator in %"
		},
		"control_level": {
			"type": "enumeration",
			"keywords": {
				"BANK":2,
				"INDIVIDUAL":1
			},
			"description": "Designates whether control is on per-phase or banked level"
		},
		"Control": {
			"type": "enumeration",
			"keywords": {
				"REMOTE_NODE":3,
				"LINE_DROP_COMP":4,
				"OUTPUT_VOLTAGE":2,
				"MANUAL":1
			},
			"description": "Type of control used for regulating voltage"
		},
		"reverse_flow_control": {
			"type": "enumeration",
			"keywords": {
				"LOCK_CURRENT_POSITION":2,
				"LOCK_NEUTRAL":1,
				"LOCK_NONE":0
			},
			"description": "Type of control used when power is flowing in reverse through the regulator"
		},
		"Type": {
			"type": "enumeration",
			"keywords": {
				"B":2,
				"A":1
			},
			"description": "Defines regulator type"
		},
		"tap_pos_A": {
			"type": "int16",
			"description": "initial tap position of phase A"
		},
		"tap_pos_B": {
			"type": "int16",
			"description": "initial tap position of phase B"
		},
		"tap_pos_C": {
			"type": "int16",
			"description": "initial tap position of phase C"
		}
	},
	"restoration": {
		"reconfig_attempts": {
			"type": "int32",
			"description": "Number of reconfigurations/timestep to try before giving up"
		},
		"reconfig_iteration_limit": {
			"type": "int32",
			"description": "Number of iterations to let PF go before flagging this as a bad reconfiguration"
		},
		"source_vertex": {
			"type": "object",
			"description": "Source vertex object for reconfiguration"
		},
		"faulted_section": {
			"type": "object",
			"description": "Faulted section for reconfiguration"
		},
		"feeder_power_limit": {
			"type": "char1024",
			"description": "Comma-separated power limit (VA) for feeders during reconfiguration"
		},
		"feeder_power_links": {
			"type": "char1024",
			"description": "Comma-separated list of link-based objects for monitoring power through"
		},
		"feeder_vertex_list": {
			"type": "char1024",
			"description": "Comma-separated object list that defines the feeder vertices"
		},
		"microgrid_power_limit": {
			"type": "char1024",
			"description": "Comma-separated power limit (complex VA) for microgrids during reconfiguration"
		},
		"microgrid_power_links": {
			"type": "char1024",
			"description": "Comma-separated list of link-based objects for monitoring power through"
		},
		"microgrid_vertex_list": {
			"type": "char1024",
			"description": "Comma-separated object list that defines the microgrid vertices"
		},
		"lower_voltage_limit": {
			"type": "double",
			"unit": "pu",
			"description": "Lower voltage limit for the reconfiguration validity checks - per unit"
		},
		"upper_voltage_limit": {
			"type": "double",
			"unit": "pu",
			"description": "Upper voltage limit for the reconfiguration validity checks - per unit"
		},
		"output_filename": {
			"type": "char1024",
			"description": "Output text file name to describe final or attempted switching operations"
		},
		"generate_all_scenarios": {
			"type": "bool",
			"description": "Flag to determine if restoration reconfiguration and continues, or explores the full space"
		}
	},
	"sectionalizer": {
		"switch": {
			"type": "parent"
		}
	},
	"series_compensator": {
		"link": {
			"type": "parent"
		},
		"vset_A": {
			"type": "double",
			"unit": "pu",
			"description": "Voltage magnitude reference for phase A"
		},
		"vset_B": {
			"type": "double",
			"unit": "pu",
			"description": "Voltage magnitude reference for phase B"
		},
		"vset_C": {
			"type": "double",
			"unit": "pu",
			"description": "Voltage magnitude reference for phase C"
		},
		"vset_A_0": {
			"type": "double",
			"unit": "pu",
			"description": "Voltage magnitude set point for phase A, changed by the player"
		},
		"vset_B_0": {
			"type": "double",
			"unit": "pu",
			"description": "Voltage magnitude set point for phase B, changed by the player"
		},
		"vset_C_0": {
			"type": "double",
			"unit": "pu",
			"description": "Voltage magnitude set point for phase C, changed by the player"
		},
		"vset_1": {
			"type": "double",
			"unit": "pu",
			"description": "Voltage magnitude reference for phase 1 of a triplex system"
		},
		"vset_2": {
			"type": "double",
			"unit": "pu",
			"description": "Voltage magnitude reference for phase 2 of a tryplex system"
		},
		"vset_1_0": {
			"type": "double",
			"unit": "pu",
			"description": "Voltage magnitude reference for phase 1 of a triplex system"
		},
		"vset_2_0": {
			"type": "double",
			"unit": "pu",
			"description": "Voltage magnitude reference for phase 2 of a tryplex system"
		},
		"frequency_regulation": {
			"type": "bool",
			"description": "DELTAMODE: Boolean value indicating whether the frequency regulation of the series compensator is enabled or not"
		},
		"frequency_open_loop_control": {
			"type": "bool",
			"description": "DELTAMODE: Boolean value indicating whether the frequency open loop control of the series compensator is enabled or not"
		},
		"t_delay": {
			"type": "double",
			"description": "the controller will wait for t_delay to take actions"
		},
		"t_hold": {
			"type": "double",
			"description": "Once the controller changes the voltage set point, it will stay there for t_hold time"
		},
		"recover_rate": {
			"type": "double",
			"description": "The rate that the voltage goes back to nominal, unit: pu/s"
		},
		"frequency_low": {
			"type": "double",
			"description": "The low frequency that activates the controller"
		},
		"frequency_high": {
			"type": "double",
			"description": "The high frequency that activates the controller"
		},
		"V_error": {
			"type": "double",
			"description": "Make sure the voltage can go back to nominal"
		},
		"voltage_update_tolerance": {
			"type": "double",
			"unit": "pu",
			"description": "Largest absolute between vset_X and measured voltage that won't force a reiteration"
		},
		"n_max_ext_A": {
			"type": "double",
			"description": "maximum Turn ratio for phase A"
		},
		"n_max_ext_B": {
			"type": "double",
			"description": "maximum Turn ratio for phase B"
		},
		"n_max_ext_C": {
			"type": "double",
			"description": "maximum Turn ratio for phase C"
		},
		"n_min_ext_A": {
			"type": "double",
			"description": "minimum Turn ratio for phase A"
		},
		"n_min_ext_B": {
			"type": "double",
			"description": "minimum Turn ratio for phase B"
		},
		"n_min_ext_C": {
			"type": "double",
			"description": "minimum Turn ratio for phase C"
		},
		"n_max_ext_1": {
			"type": "double",
			"description": "maximum Turn ratio for phase 1 (triplex)"
		},
		"n_max_ext_2": {
			"type": "double",
			"description": "maximum Turn ratio for phase 2 (triplex)"
		},
		"n_min_ext_1": {
			"type": "double",
			"description": "minimum Turn ratio for phase 1 (triplex)"
		},
		"n_min_ext_2": {
			"type": "double",
			"description": "minimum Turn ratio for phase 2 (triplex)"
		},
		"kp": {
			"type": "double",
			"description": "proportional gain"
		},
		"ki": {
			"type": "double",
			"description": "integrator gain"
		},
		"kpf": {
			"type": "double",
			"description": "proportional gain of frequency regulation"
		},
		"f_db_max": {
			"type": "double",
			"description": "frequency dead band max"
		},
		"f_db_min": {
			"type": "double",
			"description": "frequency dead band max"
		},
		"delta_Vmax": {
			"type": "double",
			"description": "upper limit of the frequency regulation output"
		},
		"delta_Vmin": {
			"type": "double",
			"description": "lower limit of the frequency regulation output"
		},
		"delta_V": {
			"type": "double",
			"description": "frequency regulation output"
		},
		"V_bypass_max_pu": {
			"type": "double",
			"description": "the upper limit voltage to bypass compensator"
		},
		"V_bypass_min_pu": {
			"type": "double",
			"description": "the lower limit voltage to bypass compensator"
		},
		"phase_A_state": {
			"type": "enumeration",
			"keywords": {
				"BYPASS":1,
				"NORMAL":0
			},
			"description": "Defines if phase A is in bypass or not"
		},
		"phase_B_state": {
			"type": "enumeration",
			"keywords": {
				"BYPASS":1,
				"NORMAL":0
			},
			"description": "Defines if phase B is in bypass or not"
		},
		"phase_C_state": {
			"type": "enumeration",
			"keywords": {
				"BYPASS":1,
				"NORMAL":0
			},
			"description": "Defines if phase C is in bypass or not"
		},
		"phase_1_state": {
			"type": "enumeration",
			"keywords": {
				"BYPASS":1,
				"NORMAL":0
			},
			"description": "Defines if phase 1 is in bypass or not"
		},
		"phase_2_state": {
			"type": "enumeration",
			"keywords": {
				"BYPASS":1,
				"NORMAL":0
			},
			"description": "Defines if phase 2 is in bypass or not"
		},
		"series_compensator_resistance": {
			"type": "double",
			"unit": "Ohm",
			"description": "Baseline resistance for the series compensator device - needed for NR"
		}
	},
	"series_reactor": {
		"link": {
			"type": "parent"
		},
		"phase_A_impedance": {
			"type": "complex",
			"unit": "Ohm",
			"description": "Series impedance of reactor on phase A"
		},
		"phase_A_resistance": {
			"type": "double",
			"unit": "Ohm",
			"description": "Resistive portion of phase A's impedance"
		},
		"phase_A_reactance": {
			"type": "double",
			"unit": "Ohm",
			"description": "Reactive portion of phase A's impedance"
		},
		"phase_B_impedance": {
			"type": "complex",
			"unit": "Ohm",
			"description": "Series impedance of reactor on phase B"
		},
		"phase_B_resistance": {
			"type": "double",
			"unit": "Ohm",
			"description": "Resistive portion of phase B's impedance"
		},
		"phase_B_reactance": {
			"type": "double",
			"unit": "Ohm",
			"description": "Reactive portion of phase B's impedance"
		},
		"phase_C_impedance": {
			"type": "complex",
			"unit": "Ohm",
			"description": "Series impedance of reactor on phase C"
		},
		"phase_C_resistance": {
			"type": "double",
			"unit": "Ohm",
			"description": "Resistive portion of phase C's impedance"
		},
		"phase_C_reactance": {
			"type": "double",
			"unit": "Ohm",
			"description": "Reactive portion of phase C's impedance"
		},
		"rated_current_limit": {
			"type": "double",
			"unit": "A",
			"description": "Rated current limit for the reactor"
		}
	},
	"substation": {
		"node": {
			"type": "parent"
		},
		"zero_sequence_voltage": {
			"type": "complex",
			"unit": "V",
			"description": "The zero sequence representation of the voltage for the substation object."
		},
		"positive_sequence_voltage": {
			"type": "complex",
			"unit": "V",
			"description": "The positive sequence representation of the voltage for the substation object."
		},
		"negative_sequence_voltage": {
			"type": "complex",
			"unit": "V",
			"description": "The negative sequence representation of the voltage for the substation object."
		},
		"base_power": {
			"type": "double",
			"unit": "VA",
			"description": "The 3 phase VA power rating of the substation."
		},
		"power_convergence_value": {
			"type": "double",
			"unit": "VA",
			"description": "Default convergence criterion before power is posted to pw_load objects if connected, otherwise ignored"
		},
		"reference_phase": {
			"type": "enumeration",
			"keywords": {
				"PHASE_C":2,
				"PHASE_B":1,
				"PHASE_A":0
			},
			"description": "The reference phase for the positive sequence voltage."
		},
		"transmission_level_constant_power_load": {
			"type": "complex",
			"unit": "VA",
			"description": "the average constant power load to be posted directly to the pw_load object."
		},
		"transmission_level_constant_current_load": {
			"type": "complex",
			"unit": "A",
			"description": "the average constant current load at nominal voltage to be posted directly to the pw_load object."
		},
		"transmission_level_constant_impedance_load": {
			"type": "complex",
			"unit": "Ohm",
			"description": "the average constant impedance load at nominal voltage to be posted directly to the pw_load object."
		},
		"distribution_load": {
			"type": "complex",
			"unit": "VA",
			"description": "The total load of all three phases at the substation object."
		},
		"distribution_power_A": {
			"type": "complex",
			"unit": "VA"
		},
		"distribution_power_B": {
			"type": "complex",
			"unit": "VA"
		},
		"distribution_power_C": {
			"type": "complex",
			"unit": "VA"
		},
		"distribution_voltage_A": {
			"type": "complex",
			"unit": "V"
		},
		"distribution_voltage_B": {
			"type": "complex",
			"unit": "V"
		},
		"distribution_voltage_C": {
			"type": "complex",
			"unit": "V"
		},
		"distribution_voltage_AB": {
			"type": "complex",
			"unit": "V"
		},
		"distribution_voltage_BC": {
			"type": "complex",
			"unit": "V"
		},
		"distribution_voltage_CA": {
			"type": "complex",
			"unit": "V"
		},
		"distribution_current_A": {
			"type": "complex",
			"unit": "A"
		},
		"distribution_current_B": {
			"type": "complex",
			"unit": "A"
		},
		"distribution_current_C": {
			"type": "complex",
			"unit": "A"
		},
		"distribution_real_energy": {
			"type": "double",
			"unit": "Wh"
		}
	},
	"switch": {
		"link": {
			"type": "parent"
		},
		"phase_A_state": {
			"type": "enumeration",
			"keywords": {
				"CLOSED":1,
				"OPEN":0
			},
			"description": "Defines the current state of the phase A switch"
		},
		"phase_B_state": {
			"type": "enumeration",
			"keywords": {
				"CLOSED":1,
				"OPEN":0
			},
			"description": "Defines the current state of the phase B switch"
		},
		"phase_C_state": {
			"type": "enumeration",
			"keywords": {
				"CLOSED":1,
				"OPEN":0
			},
			"description": "Defines the current state of the phase C switch"
		},
		"operating_mode": {
			"type": "enumeration",
			"keywords": {
				"BANKED":1,
				"INDIVIDUAL":0
			},
			"description": "Defines whether the switch operates in a banked or per-phase control mode"
		},
		"switch_impedance": {
			"type": "complex",
			"unit": "Ohm",
			"description": "Impedance value of the swtich when closed"
		},
		"switch_resistance": {
			"type": "double",
			"unit": "Ohm",
			"description": "Resistance portion of impedance value of the switch when it is closed."
		},
		"switch_reactance": {
			"type": "double",
			"unit": "Ohm",
			"description": "Reactance portion of impedance value of the switch when it is closed."
		}
	},
	"sync_check": {
		"armed": {
			"type": "bool",
			"description": "Flag to arm the synchronization close"
		},
		"frequency_tolerance": {
			"type": "double",
			"unit": "Hz",
			"description": "tolerance for checking the frequency metric"
		},
		"voltage_tolerance_pu": {
			"type": "double",
			"unit": "pu",
			"description": "voltage_tolerance in per-unit - used in MAG_DIFF mode"
		},
		"voltage_tolerance": {
			"type": "double",
			"unit": "V",
			"description": "voltage_tolerance in Volts - used in MAG_DIFF mode - prioritized over voltage_tolerance_pu"
		},
		"metrics_period": {
			"type": "double",
			"unit": "s",
			"description": "period when both metrics are satisfied"
		},
		"volt_compare_mode": {
			"type": "enumeration",
			"keywords": {
				"SEP_DIFF":1,
				"MAG_DIFF":0
			},
			"description": "Determines which voltage difference calculation approach is used"
		},
		"voltage_magnitude_tolerance_pu": {
			"type": "double",
			"unit": "pu",
			"description": "tolerance in per-unit for the difference in voltage magnitudes - used in SEP_DIFF mode"
		},
		"voltage_magnitude_tolerance": {
			"type": "double",
			"unit": "V",
			"description": "tolerance in Volts for the difference in voltage magnitudes - used in SEP_DIFF mode - prioritized over voltage_magnitude_tolerance_pu"
		},
		"voltage_angle_tolerance": {
			"type": "double",
			"unit": "deg",
			"description": "tolerance in degrees for the difference in voltage angles - used in SEP_DIFF mode"
		},
		"delta_trigger_mult": {
			"type": "double",
			"description": "multiplier against voltage and frequency tolerances to trigger/maintain deltamode"
		}
	},
	"transformer": {
		"link": {
			"type": "parent"
		},
		"configuration": {
			"type": "object",
			"description": "Configuration library used for transformer setup"
		},
		"climate": {
			"type": "object",
			"description": "climate object used to describe thermal model ambient temperature"
		},
		"ambient_temperature": {
			"type": "double",
			"unit": "degC",
			"description": "ambient temperature in degrees C"
		},
		"top_oil_hot_spot_temperature": {
			"type": "double",
			"unit": "degC",
			"description": "top-oil hottest-spot temperature, degrees C"
		},
		"winding_hot_spot_temperature": {
			"type": "double",
			"unit": "degC",
			"description": "winding hottest-spot temperature, degrees C"
		},
		"percent_loss_of_life": {
			"type": "double",
			"description": "the percent loss of life"
		},
		"aging_constant": {
			"type": "double",
			"description": "the aging rate slope for the transformer insulation"
		},
		"use_thermal_model": {
			"type": "bool",
			"description": "boolean to enable use of thermal model"
		},
		"transformer_replacement_count": {
			"type": "double",
			"description": "counter of the number times the transformer has been replaced due to lifetime failure"
		},
		"aging_granularity": {
			"type": "double",
			"unit": "s",
			"description": "maximum timestep before updating thermal and aging model in seconds"
		},
		"phase_A_primary_flux_value": {
			"type": "double",
			"unit": "Wb",
			"description": "instantaneous magnetic flux in phase A on the primary side of the transformer during saturation calculations"
		},
		"phase_B_primary_flux_value": {
			"type": "double",
			"unit": "Wb",
			"description": "instantaneous magnetic flux in phase B on the primary side of the transformer during saturation calculations"
		},
		"phase_C_primary_flux_value": {
			"type": "double",
			"unit": "Wb",
			"description": "instantaneous magnetic flux in phase C on the primary side of the transformer during saturation calculations"
		},
		"phase_A_secondary_flux_value": {
			"type": "double",
			"unit": "Wb",
			"description": "instantaneous magnetic flux in phase A on the secondary side of the transformer during saturation calculations"
		},
		"phase_B_secondary_flux_value": {
			"type": "double",
			"unit": "Wb",
			"description": "instantaneous magnetic flux in phase B on the secondary side of the transformer during saturation calculations"
		},
		"phase_C_secondary_flux_value": {
			"type": "double",
			"unit": "Wb",
			"description": "instantaneous magnetic flux in phase C on the secondary side of the transformer during saturation calculations"
		}
	},
	"transformer_configuration": {
		"connect_type": {
			"type": "enumeration",
			"keywords": {
				"SINGLE_PHASE_CENTER_TAPPED":5,
				"SINGLE_PHASE":4,
				"DELTA_GWYE":3,
				"DELTA_DELTA":2,
				"WYE_WYE":1,
				"UNKNOWN":0
			},
			"description": "connect type enum: Wye-Wye, single-phase, etc."
		},
		"install_type": {
			"type": "enumeration",
			"keywords": {
				"VAULT":3,
				"PADMOUNT":2,
				"POLETOP":1,
				"UNKNOWN":0
			},
			"description": "Defines location of the transformer installation"
		},
		"coolant_type": {
			"type": "enumeration",
			"keywords": {
				"DRY":2,
				"MINERAL_OIL":1,
				"UNKNOWN":0
			},
			"description": "coolant type, used in life time model"
		},
		"cooling_type": {
			"type": "enumeration",
			"keywords": {
				"DFOW":6,
				"DFOA":5,
				"NDFOW":4,
				"NDFOA":3,
				"FA":2,
				"OA":1,
				"UNKNOWN":0
			},
			"description": "type of coolant fluid used in life time model"
		},
		"primary_voltage": {
			"type": "double",
			"unit": "V",
			"description": "primary voltage level in L-L value kV"
		},
		"secondary_voltage": {
			"type": "double",
			"unit": "V",
			"description": "secondary voltage level kV"
		},
		"power_rating": {
			"type": "double",
			"unit": "kVA",
			"description": "kVA rating of transformer, total"
		},
		"powerA_rating": {
			"type": "double",
			"unit": "kVA",
			"description": "kVA rating of transformer, phase A"
		},
		"powerB_rating": {
			"type": "double",
			"unit": "kVA",
			"description": "kVA rating of transformer, phase B"
		},
		"powerC_rating": {
			"type": "double",
			"unit": "kVA",
			"description": "kVA rating of transformer, phase C"
		},
		"resistance": {
			"type": "double",
			"unit": "pu*Ohm",
			"description": "Series impedance, pu, real"
		},
		"reactance": {
			"type": "double",
			"unit": "pu*Ohm",
			"description": "Series impedance, pu, imag"
		},
		"impedance": {
			"type": "complex",
			"unit": "pu*Ohm",
			"description": "Series impedance, pu"
		},
		"resistance1": {
			"type": "double",
			"unit": "pu*Ohm",
			"description": "Secondary series impedance (only used when you want to define each individual winding seperately, pu, real"
		},
		"reactance1": {
			"type": "double",
			"unit": "pu*Ohm",
			"description": "Secondary series impedance (only used when you want to define each individual winding seperately, pu, imag"
		},
		"impedance1": {
			"type": "complex",
			"unit": "pu*Ohm",
			"description": "Secondary series impedance (only used when you want to define each individual winding seperately, pu"
		},
		"resistance2": {
			"type": "double",
			"unit": "pu*Ohm",
			"description": "Secondary series impedance (only used when you want to define each individual winding seperately, pu, real"
		},
		"reactance2": {
			"type": "double",
			"unit": "pu*Ohm",
			"description": "Secondary series impedance (only used when you want to define each individual winding seperately, pu, imag"
		},
		"impedance2": {
			"type": "complex",
			"unit": "pu*Ohm",
			"description": "Secondary series impedance (only used when you want to define each individual winding seperately, pu"
		},
		"shunt_resistance": {
			"type": "double",
			"unit": "pu*Ohm",
			"description": "Shunt impedance on primary side, pu, real"
		},
		"shunt_reactance": {
			"type": "double",
			"unit": "pu*Ohm",
			"description": "Shunt impedance on primary side, pu, imag"
		},
		"shunt_impedance": {
			"type": "complex",
			"unit": "pu*Ohm",
			"description": "Shunt impedance on primary side, pu"
		},
		"core_coil_weight": {
			"type": "double",
			"unit": "lb",
			"description": "The weight of the core and coil assembly in pounds"
		},
		"tank_fittings_weight": {
			"type": "double",
			"unit": "lb",
			"description": "The weight of the tank and fittings in pounds"
		},
		"oil_volume": {
			"type": "double",
			"unit": "gal",
			"description": "The number of gallons of oil in the transformer"
		},
		"rated_winding_time_constant": {
			"type": "double",
			"unit": "h",
			"description": "The rated winding time constant in hours"
		},
		"rated_winding_hot_spot_rise": {
			"type": "double",
			"unit": "degC",
			"description": "winding hottest-spot rise over ambient temperature at rated load, degrees C"
		},
		"rated_top_oil_rise": {
			"type": "double",
			"unit": "degC",
			"description": "top-oil hottest-spot rise over ambient temperature at rated load, degrees C"
		},
		"no_load_loss": {
			"type": "double",
			"unit": "pu",
			"description": "Another method of specifying transformer impedances, defined as per unit power values (shunt)"
		},
		"full_load_loss": {
			"type": "double",
			"unit": "pu",
			"description": "Another method of specifying transformer impedances, defined as per unit power values (shunt and series)"
		},
		"reactance_resistance_ratio": {
			"type": "double",
			"description": "the reactance to resistance ratio (X/R)"
		},
		"installed_insulation_life": {
			"type": "double",
			"unit": "h",
			"description": "the normal lifetime of the transformer insulation at rated load, hours"
		},
		"magnetization_location": {
			"type": "enumeration",
			"keywords": {
				"BOTH":3,
				"SECONDARY":2,
				"PRIMARY":1,
				"NONE":0
			},
			"description": "winding to place magnetization influence for in-rush calculations"
		},
		"inrush_saturation_enabled": {
			"type": "bool",
			"description": "flag to include saturation effects during inrush calculations"
		},
		"L_A": {
			"type": "double",
			"unit": "pu",
			"description": "Air core inductance of transformer"
		},
		"phi_K": {
			"type": "double",
			"unit": "pu",
			"description": "Knee flux value where the air core inductance interstes the flux axis of the saturation curve"
		},
		"phi_M": {
			"type": "double",
			"unit": "pu",
			"description": "Peak magnetization flux at rated voltage of the saturation curve"
		},
		"I_M": {
			"type": "double",
			"unit": "pu",
			"description": "Peak magnetization current at rated voltage of the saturation curve"
		},
		"T_D": {
			"type": "double",
			"description": "Inrush decay time constant for inrush current"
		}
	},
	"triplex_line": {
		"line": {
			"type": "parent"
		}
	},
	"triplex_line_conductor": {
		"resistance": {
			"type": "double",
			"unit": "Ohm/mile",
			"description": "resistance of cable in ohm/mile"
		},
		"geometric_mean_radius": {
			"type": "double",
			"unit": "ft",
			"description": "geometric mean radius of the cable"
		},
		"rating.summer.continuous": {
			"type": "double",
			"unit": "A",
			"description": "amp ratings for the cable during continuous operation in summer"
		},
		"rating.summer.emergency": {
			"type": "double",
			"unit": "A",
			"description": "amp ratings for the cable during short term operation in summer"
		},
		"rating.winter.continuous": {
			"type": "double",
			"unit": "A",
			"description": "amp ratings for the cable during continuous operation in winter"
		},
		"rating.winter.emergency": {
			"type": "double",
			"unit": "A",
			"description": "amp ratings for the cable during short term operation in winter"
		}
	},
	"triplex_line_configuration": {
		"conductor_1": {
			"type": "object",
			"description": "conductor type for phase 1"
		},
		"conductor_2": {
			"type": "object",
			"description": "conductor type for phase 2"
		},
		"conductor_N": {
			"type": "object",
			"description": "conductor type for phase N"
		},
		"insulation_thickness": {
			"type": "double",
			"unit": "in",
			"description": "thickness of insulation around cabling"
		},
		"diameter": {
			"type": "double",
			"unit": "in",
			"description": "total diameter of cable"
		},
		"spacing": {
			"type": "object",
			"description": "defines the line spacing configuration"
		},
		"z11": {
			"type": "complex",
			"unit": "Ohm/mile",
			"description": "phase 1 self-impedance, used for direct entry of impedance values"
		},
		"z12": {
			"type": "complex",
			"unit": "Ohm/mile",
			"description": "phase 1-2 induced impedance, used for direct entry of impedance values"
		},
		"z21": {
			"type": "complex",
			"unit": "Ohm/mile",
			"description": "phase 2-1 induced impedance, used for direct entry of impedance values"
		},
		"z22": {
			"type": "complex",
			"unit": "Ohm/mile",
			"description": "phase 2 self-impedance, used for direct entry of impedance values"
		},
		"rating.summer.continuous": {
			"type": "double",
			"unit": "A",
			"description": "amp rating in summer, continuous"
		},
		"rating.summer.emergency": {
			"type": "double",
			"unit": "A",
			"description": "amp rating in summer, short term"
		},
		"rating.winter.continuous": {
			"type": "double",
			"unit": "A",
			"description": "amp rating in winter, continuous"
		},
		"rating.winter.emergency": {
			"type": "double",
			"unit": "A",
			"description": "amp rating in winter, short term"
		}
	},
	"triplex_load": {
		"triplex_node": {
			"type": "parent"
		},
		"load_class": {
			"type": "enumeration",
			"keywords": {
				"A":4,
				"I":3,
				"C":2,
				"R":1,
				"U":0
			},
			"description": "Flag to track load type, not currently used for anything except sorting"
		},
		"load_priority": {
			"type": "enumeration",
			"keywords": {
				"CRITICAL":2,
				"PRIORITY":1,
				"DISCRETIONARY":0
			},
			"description": "Load classification based on priority"
		},
		"constant_power_1": {
			"type": "complex",
			"unit": "VA",
			"description": "constant power load on split phase 1, specified as VA"
		},
		"constant_power_2": {
			"type": "complex",
			"unit": "VA",
			"description": "constant power load on split phase 2, specified as VA"
		},
		"constant_power_12": {
			"type": "complex",
			"unit": "VA",
			"description": "constant power load on split phase 12, specified as VA"
		},
		"constant_power_1_real": {
			"type": "double",
			"unit": "W",
			"description": "constant power load on spit phase 1, real only, specified as W"
		},
		"constant_power_2_real": {
			"type": "double",
			"unit": "W",
			"description": "constant power load on phase 2, real only, specified as W"
		},
		"constant_power_12_real": {
			"type": "double",
			"unit": "W",
			"description": "constant power load on phase 12, real only, specified as W"
		},
		"constant_power_1_reac": {
			"type": "double",
			"unit": "VAr",
			"description": "constant power load on phase 1, imaginary only, specified as VAr"
		},
		"constant_power_2_reac": {
			"type": "double",
			"unit": "VAr",
			"description": "constant power load on phase 2, imaginary only, specified as VAr"
		},
		"constant_power_12_reac": {
			"type": "double",
			"unit": "VAr",
			"description": "constant power load on phase 12, imaginary only, specified as VAr"
		},
		"constant_current_1": {
			"type": "complex",
			"unit": "A",
			"description": "constant current load on phase 1, specified as Amps"
		},
		"constant_current_2": {
			"type": "complex",
			"unit": "A",
			"description": "constant current load on phase 2, specified as Amps"
		},
		"constant_current_12": {
			"type": "complex",
			"unit": "A",
			"description": "constant current load on phase 12, specified as Amps"
		},
		"constant_current_1_real": {
			"type": "double",
			"unit": "A",
			"description": "constant current load on phase 1, real only, specified as Amps"
		},
		"constant_current_2_real": {
			"type": "double",
			"unit": "A",
			"description": "constant current load on phase 2, real only, specified as Amps"
		},
		"constant_current_12_real": {
			"type": "double",
			"unit": "A",
			"description": "constant current load on phase 12, real only, specified as Amps"
		},
		"constant_current_1_reac": {
			"type": "double",
			"unit": "A",
			"description": "constant current load on phase 1, imaginary only, specified as Amps"
		},
		"constant_current_2_reac": {
			"type": "double",
			"unit": "A",
			"description": "constant current load on phase 2, imaginary only, specified as Amps"
		},
		"constant_current_12_reac": {
			"type": "double",
			"unit": "A",
			"description": "constant current load on phase 12, imaginary only, specified as Amps"
		},
		"constant_impedance_1": {
			"type": "complex",
			"unit": "Ohm",
			"description": "constant impedance load on phase 1, specified as Ohms"
		},
		"constant_impedance_2": {
			"type": "complex",
			"unit": "Ohm",
			"description": "constant impedance load on phase 2, specified as Ohms"
		},
		"constant_impedance_12": {
			"type": "complex",
			"unit": "Ohm",
			"description": "constant impedance load on phase 12, specified as Ohms"
		},
		"constant_impedance_1_real": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance load on phase 1, real only, specified as Ohms"
		},
		"constant_impedance_2_real": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance load on phase 2, real only, specified as Ohms"
		},
		"constant_impedance_12_real": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance load on phase 12, real only, specified as Ohms"
		},
		"constant_impedance_1_reac": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance load on phase 1, imaginary only, specified as Ohms"
		},
		"constant_impedance_2_reac": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance load on phase 2, imaginary only, specified as Ohms"
		},
		"constant_impedance_12_reac": {
			"type": "double",
			"unit": "Ohm",
			"description": "constant impedance load on phase 12, imaginary only, specified as Ohms"
		},
		"measured_voltage_1": {
			"type": "complex",
			"unit": "V",
			"description": "measured voltage on phase 1"
		},
		"measured_voltage_2": {
			"type": "complex",
			"unit": "V",
			"description": "measured voltage on phase 2"
		},
		"measured_voltage_12": {
			"type": "complex",
			"unit": "V",
			"description": "measured voltage on phase 12"
		},
		"indiv_measured_power_1": {
			"type": "complex",
			"unit": "VA",
			"description": "current measured power on phase 1"
		},
		"indiv_measured_power_2": {
			"type": "complex",
			"unit": "VA",
			"description": "current measured power on phase 2"
		},
		"indiv_measured_power_12": {
			"type": "complex",
			"unit": "VA",
			"description": "current measured power on phase 12"
		},
		"measured_power": {
			"type": "complex",
			"unit": "VA",
			"description": "current total measured power"
		},
		"base_power_1": {
			"type": "double",
			"unit": "VA",
			"description": "in similar format as ZIPload, this represents the nominal power on phase 1 before applying ZIP fractions"
		},
		"base_power_2": {
			"type": "double",
			"unit": "VA",
			"description": "in similar format as ZIPload, this represents the nominal power on phase 2 before applying ZIP fractions"
		},
		"base_power_12": {
			"type": "double",
			"unit": "VA",
			"description": "in similar format as ZIPload, this represents the nominal power on phase 12 before applying ZIP fractions"
		},
		"power_pf_1": {
			"type": "double",
			"unit": "pu",
			"description": "in similar format as ZIPload, this is the power factor of the phase 1 constant power portion of load"
		},
		"current_pf_1": {
			"type": "double",
			"unit": "pu",
			"description": "in similar format as ZIPload, this is the power factor of the phase 1 constant current portion of load"
		},
		"impedance_pf_1": {
			"type": "double",
			"unit": "pu",
			"description": "in similar format as ZIPload, this is the power factor of the phase 1 constant impedance portion of load"
		},
		"power_pf_2": {
			"type": "double",
			"unit": "pu",
			"description": "in similar format as ZIPload, this is the power factor of the phase 2 constant power portion of load"
		},
		"current_pf_2": {
			"type": "double",
			"unit": "pu",
			"description": "in similar format as ZIPload, this is the power factor of the phase 2 constant current portion of load"
		},
		"impedance_pf_2": {
			"type": "double",
			"unit": "pu",
			"description": "in similar format as ZIPload, this is the power factor of the phase 2 constant impedance portion of load"
		},
		"power_pf_12": {
			"type": "double",
			"unit": "pu",
			"description": "in similar format as ZIPload, this is the power factor of the phase 12 constant power portion of load"
		},
		"current_pf_12": {
			"type": "double",
			"unit": "pu",
			"description": "in similar format as ZIPload, this is the power factor of the phase 12 constant current portion of load"
		},
		"impedance_pf_12": {
			"type": "double",
			"unit": "pu",
			"description": "in similar format as ZIPload, this is the power factor of the phase 12 constant impedance portion of load"
		},
		"power_fraction_1": {
			"type": "double",
			"unit": "pu",
			"description": "this is the constant power fraction of base power on phase 1"
		},
		"current_fraction_1": {
			"type": "double",
			"unit": "pu",
			"description": "this is the constant current fraction of base power on phase 1"
		},
		"impedance_fraction_1": {
			"type": "double",
			"unit": "pu",
			"description": "this is the constant impedance fraction of base power on phase 1"
		},
		"power_fraction_2": {
			"type": "double",
			"unit": "pu",
			"description": "this is the constant power fraction of base power on phase 2"
		},
		"current_fraction_2": {
			"type": "double",
			"unit": "pu",
			"description": "this is the constant current fraction of base power on phase 2"
		},
		"impedance_fraction_2": {
			"type": "double",
			"unit": "pu",
			"description": "this is the constant impedance fraction of base power on phase 2"
		},
		"power_fraction_12": {
			"type": "double",
			"unit": "pu",
			"description": "this is the constant power fraction of base power on phase 12"
		},
		"current_fraction_12": {
			"type": "double",
			"unit": "pu",
			"description": "this is the constant current fraction of base power on phase 12"
		},
		"impedance_fraction_12": {
			"type": "double",
			"unit": "pu",
			"description": "this is the constant impedance fraction of base power on phase 12"
		}
	},
	"triplex_meter": {
		"triplex_node": {
			"type": "parent"
		},
		"measured_real_energy": {
			"type": "double",
			"unit": "Wh",
			"description": "metered real energy consumption"
		},
		"measured_real_energy_delta": {
			"type": "double",
			"unit": "Wh",
			"description": "delta in metered real energy consumption from last specified measured_energy_delta_timestep"
		},
		"measured_reactive_energy": {
			"type": "double",
			"unit": "VAh",
			"description": "metered reactive energy consumption"
		},
		"measured_reactive_energy_delta": {
			"type": "double",
			"unit": "VAh",
			"description": "delta in metered reactive energy consumption from last specified measured_energy_delta_timestep"
		},
		"measured_energy_delta_timestep": {
			"type": "double",
			"unit": "s",
			"description": "Period of timestep for real and reactive delta energy calculation"
		},
		"measured_power": {
			"type": "complex",
			"unit": "VA",
			"description": "metered power"
		},
		"indiv_measured_power_1": {
			"type": "complex",
			"unit": "VA",
			"description": "metered power, phase 1"
		},
		"indiv_measured_power_2": {
			"type": "complex",
			"unit": "VA",
			"description": "metered power, phase 2"
		},
		"indiv_measured_power_N": {
			"type": "complex",
			"unit": "VA",
			"description": "metered power, phase N"
		},
		"measured_demand": {
			"type": "double",
			"unit": "W",
			"description": "metered demand (peak of power)"
		},
		"measured_real_power": {
			"type": "double",
			"unit": "W",
			"description": "metered real power"
		},
		"measured_reactive_power": {
			"type": "double",
			"unit": "VAr",
			"description": "metered reactive power"
		},
		"meter_power_consumption": {
			"type": "complex",
			"unit": "VA",
			"description": "power consumed by meter operation"
		},
		"measured_voltage_1": {
			"type": "complex",
			"unit": "V",
			"description": "measured voltage, phase 1 to ground"
		},
		"measured_voltage_2": {
			"type": "complex",
			"unit": "V",
			"description": "measured voltage, phase 2 to ground"
		},
		"measured_voltage_N": {
			"type": "complex",
			"unit": "V",
			"description": "measured voltage, phase N to ground"
		},
		"measured_real_max_voltage_1_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured real max line-to-ground voltage on phase 1 over a specified interval"
		},
		"measured_real_max_voltage_2_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured real max line-to-ground voltage on phase 2 over a specified interval"
		},
		"measured_real_max_voltage_12_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured real max line-to-ground voltage on phase 12 over a specified interval"
		},
		"measured_imag_max_voltage_1_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured imaginary max line-to-ground voltage on phase 1 over a specified interval"
		},
		"measured_imag_max_voltage_2_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured imaginary max line-to-ground voltage on phase 2 over a specified interval"
		},
		"measured_imag_max_voltage_12_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured imaginary max line-to-ground voltage on phase 12 over a specified interval"
		},
		"measured_real_min_voltage_1_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured real min line-to-ground voltage on phase 1 over a specified interval"
		},
		"measured_real_min_voltage_2_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured real min line-to-ground voltage on phase 2 over a specified interval"
		},
		"measured_real_min_voltage_12_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured real min line-to-ground voltage on phase 12 over a specified interval"
		},
		"measured_imag_min_voltage_1_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured imaginary min line-to-ground voltage on phase 1 over a specified interval"
		},
		"measured_imag_min_voltage_2_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured imaginary min line-to-ground voltage on phase 2 over a specified interval"
		},
		"measured_imag_min_voltage_12_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured imaginary min line-to-ground voltage on phase 12 over a specified interval"
		},
		"measured_avg_voltage_1_mag_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured average line-to-ground voltage magnitude on phase 1 over a specified interval"
		},
		"measured_avg_voltage_2_mag_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured average line-to-ground voltage magnitude on phase 2 over a specified interval"
		},
		"measured_avg_voltage_12_mag_in_interval": {
			"type": "double",
			"unit": "V",
			"description": "measured average line-to-ground voltage magnitude on phase 12 over a specified interval"
		},
		"measured_real_max_power_in_interval": {
			"type": "double",
			"unit": "W",
			"description": "measured maximum real power over a specified interval"
		},
		"measured_reactive_max_power_in_interval": {
			"type": "double",
			"unit": "VAr",
			"description": "measured maximum reactive power over a specified interval"
		},
		"measured_real_min_power_in_interval": {
			"type": "double",
			"unit": "W",
			"description": "measured minimum real power over a specified interval"
		},
		"measured_reactive_min_power_in_interval": {
			"type": "double",
			"unit": "VAr",
			"description": "measured minimum reactive power over a specified interval"
		},
		"measured_avg_real_power_in_interval": {
			"type": "double",
			"unit": "W",
			"description": "measured average real power over a specified interval"
		},
		"measured_avg_reactive_power_in_interval": {
			"type": "double",
			"unit": "VAr",
			"description": "measured average reactive power over a specified interval"
		},
		"measured_stats_interval": {
			"type": "double",
			"unit": "s",
			"description": "Period of timestep for min/max/average calculations"
		},
		"measured_current_1": {
			"type": "complex",
			"unit": "A",
			"description": "measured current, phase 1"
		},
		"measured_current_2": {
			"type": "complex",
			"unit": "A",
			"description": "measured current, phase 2"
		},
		"measured_current_N": {
			"type": "complex",
			"unit": "A",
			"description": "measured current, phase N"
		},
		"customer_interrupted": {
			"type": "bool",
			"description": "Reliability flag - goes active if the customer is in an interrupted state"
		},
		"customer_interrupted_secondary": {
			"type": "bool",
			"description": "Reliability flag - goes active if the customer is in a secondary interrupted state - i.e., momentary"
		},
		"monthly_bill": {
			"type": "double",
			"unit": "$",
			"description": "Accumulator for the current month's bill"
		},
		"previous_monthly_bill": {
			"type": "double",
			"unit": "$",
			"description": "Total monthly bill for the previous month"
		},
		"previous_monthly_energy": {
			"type": "double",
			"unit": "kWh",
			"description": ""
		},
		"monthly_fee": {
			"type": "double",
			"unit": "$",
			"description": "Total monthly energy for the previous month"
		},
		"monthly_energy": {
			"type": "double",
			"unit": "kWh",
			"description": "Accumulator for the current month's energy"
		},
		"bill_mode": {
			"type": "enumeration",
			"keywords": {
				"TIERED_TOU":5,
				"TIERED_RTP":4,
				"HOURLY":3,
				"TIERED":2,
				"UNIFORM":1,
				"NONE":0
			},
			"description": "Designates the bill mode to be used"
		},
		"power_market": {
			"type": "object",
			"description": "Designates the auction object where prices are read from for bill mode"
		},
		"bill_day": {
			"type": "int32",
			"description": "Day bill is to be processed (assumed to occur at midnight of that day)"
		},
		"price": {
			"type": "double",
			"unit": "$/kWh",
			"description": "Standard uniform pricing"
		},
		"price_base": {
			"type": "double",
			"unit": "$/kWh",
			"description": "Used only in TIERED_RTP mode to describe the price before the first tier"
		},
		"first_tier_price": {
			"type": "double",
			"unit": "$/kWh",
			"description": "first tier price of energy between first and second tier energy"
		},
		"first_tier_energy": {
			"type": "double",
			"unit": "kWh",
			"description": "price of energy on tier above price or price base"
		},
		"second_tier_price": {
			"type": "double",
			"unit": "$/kWh",
			"description": "first tier price of energy between second and third tier energy"
		},
		"second_tier_energy": {
			"type": "double",
			"unit": "kWh",
			"description": "price of energy on tier above first tier"
		},
		"third_tier_price": {
			"type": "double",
			"unit": "$/kWh",
			"description": "first tier price of energy greater than third tier energy"
		},
		"third_tier_energy": {
			"type": "double",
			"unit": "kWh",
			"description": "price of energy on tier above second tier"
		}
	},
	"triplex_node": {
		"powerflow_object": {
			"type": "parent"
		},
		"bustype": {
			"type": "enumeration",
			"keywords": {
				"SWING_PQ":3,
				"SWING":2,
				"PV":1,
				"PQ":0
			},
			"description": "defines whether the node is a PQ, PV, or SWING node"
		},
		"busflags": {
			"type": "set",
			"keywords": {
				"ISSOURCE":2,
				"HASSOURCE":1
			},
			"description": "flag indicates node has a source for voltage, i.e. connects to the swing node"
		},
		"reference_bus": {
			"type": "object",
			"description": "reference bus from which frequency is defined"
		},
		"maximum_voltage_error": {
			"type": "double",
			"unit": "V",
			"description": "convergence voltage limit or convergence criteria"
		},
		"voltage_1": {
			"type": "complex",
			"unit": "V",
			"description": "bus voltage, phase 1 to ground"
		},
		"voltage_2": {
			"type": "complex",
			"unit": "V",
			"description": "bus voltage, phase 2 to ground"
		},
		"voltage_N": {
			"type": "complex",
			"unit": "V",
			"description": "bus voltage, phase N to ground"
		},
		"voltage_12": {
			"type": "complex",
			"unit": "V",
			"description": "bus voltage, phase 1 to 2"
		},
		"voltage_1N": {
			"type": "complex",
			"unit": "V",
			"description": "bus voltage, phase 1 to N"
		},
		"voltage_2N": {
			"type": "complex",
			"unit": "V",
			"description": "bus voltage, phase 2 to N"
		},
		"house_present": {
			"type": "bool",
			"description": "boolean for detecting whether a house is attached, not an input"
		},
		"GFA_enable": {
			"type": "bool",
			"description": "Disable/Enable Grid Friendly Applicance(TM)-type functionality"
		},
		"GFA_freq_low_trip": {
			"type": "double",
			"unit": "Hz",
			"description": "Low frequency trip point for Grid Friendly Appliance(TM)-type functionality"
		},
		"GFA_freq_high_trip": {
			"type": "double",
			"unit": "Hz",
			"description": "High frequency trip point for Grid Friendly Appliance(TM)-type functionality"
		},
		"GFA_volt_low_trip": {
			"type": "double",
			"unit": "pu",
			"description": "Low voltage trip point for Grid Friendly Appliance(TM)-type functionality"
		},
		"GFA_volt_high_trip": {
			"type": "double",
			"unit": "pu",
			"description": "High voltage trip point for Grid Friendly Appliance(TM)-type functionality"
		},
		"GFA_reconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "Reconnect time for Grid Friendly Appliance(TM)-type functionality"
		},
		"GFA_freq_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "Frequency violation disconnect time for Grid Friendly Appliance(TM)-type functionality"
		},
		"GFA_volt_disconnect_time": {
			"type": "double",
			"unit": "s",
			"description": "Voltage violation disconnect time for Grid Friendly Appliance(TM)-type functionality"
		},
		"GFA_status": {
			"type": "bool",
			"description": "Low frequency trip point for Grid Friendly Appliance(TM)-type functionality"
		},
		"GFA_trip_method": {
			"type": "enumeration",
			"keywords": {
				"OVER_VOLTAGE":4,
				"UNDER_VOLTAGE":3,
				"OVER_FREQUENCY":2,
				"UNDER_FREQUENCY":1,
				"NONE":0
			},
			"description": "GFA trip for over-voltage"
		},
		"service_status": {
			"type": "enumeration",
			"keywords": {
				"OUT_OF_SERVICE":0,
				"IN_SERVICE":1
			},
			"description": "In and out of service flag"
		},
		"service_status_double": {
			"type": "double",
			"description": "In and out of service flag - type double - will indiscriminately override service_status - useful for schedules"
		},
		"previous_uptime": {
			"type": "double",
			"unit": "min",
			"description": "Previous time between disconnects of node in minutes"
		},
		"current_uptime": {
			"type": "double",
			"unit": "min",
			"description": "Current time since last disconnect of node in minutes"
		},
		"topological_parent": {
			"type": "object",
			"description": "topological parent as per GLM configuration"
		},
		"behaving_as_swing": {
			"type": "bool",
			"description": "Indicator flag for if a bus is behaving as a reference voltage source - valid for a SWING or SWING_PQ"
		},
		"frequency_measure_type": {
			"type": "enumeration",
			"keywords": {
				"PLL":3,
				"SIMPLE":2,
				"NONE":1
			},
			"description": "PLL frequency measurement"
		},
		"sfm_Tf": {
			"type": "double",
			"unit": "s",
			"description": "Transducer time constant for simplified frequency measurement (seconds)"
		},
		"pll_Kp": {
			"type": "double",
			"unit": "pu",
			"description": "Proportional gain of PLL frequency measurement"
		},
		"pll_Ki": {
			"type": "double",
			"unit": "pu",
			"description": "Integration gain of PLL frequency measurement"
		},
		"measured_angle_1": {
			"type": "double",
			"unit": "rad",
			"description": "bus angle measurement, phase 1N"
		},
		"measured_frequency_1": {
			"type": "double",
			"unit": "Hz",
			"description": "frequency measurement, phase 1N"
		},
		"measured_angle_2": {
			"type": "double",
			"unit": "rad",
			"description": "bus angle measurement, phase 2N"
		},
		"measured_frequency_2": {
			"type": "double",
			"unit": "Hz",
			"description": "frequency measurement, phase 2N"
		},
		"measured_angle_12": {
			"type": "double",
			"unit": "rad",
			"description": "bus angle measurement, across the phases"
		},
		"measured_frequency_12": {
			"type": "double",
			"unit": "Hz",
			"description": "frequency measurement, across the phases"
		},
		"measured_frequency": {
			"type": "double",
			"unit": "Hz",
			"description": "frequency measurement - average of present phases"
		}
	},
	"underground_line": {
		"line": {
			"type": "parent"
		}
	},
	"underground_line_conductor": {
		"outer_diameter": {
			"type": "double",
			"unit": "in",
			"description": "Outer diameter of conductor and sheath"
		},
		"conductor_gmr": {
			"type": "double",
			"unit": "ft",
			"description": "Geometric mean radius of the conductor"
		},
		"conductor_diameter": {
			"type": "double",
			"unit": "in",
			"description": "Diameter of conductor"
		},
		"conductor_resistance": {
			"type": "double",
			"unit": "Ohm/mile",
			"description": "Resistance of conductor in ohm/mile"
		},
		"neutral_gmr": {
			"type": "double",
			"unit": "ft",
			"description": "Geometric mean radius of an individual neutral conductor/strand"
		},
		"neutral_diameter": {
			"type": "double",
			"unit": "in",
			"description": "Diameter of individual neutral conductor/strand of concentric neutral"
		},
		"neutral_resistance": {
			"type": "double",
			"unit": "Ohm/mile",
			"description": "Resistance of an individual neutral conductor/strand in ohm/mile"
		},
		"neutral_strands": {
			"type": "int16",
			"description": "Number of cable strands in neutral conductor"
		},
		"shield_thickness": {
			"type": "double",
			"unit": "in",
			"description": "The thickness of Tape shield in inches"
		},
		"shield_diameter": {
			"type": "double",
			"unit": "in",
			"description": "The outside diameter of Tape shield in inches"
		},
		"insulation_relative_permitivitty": {
			"type": "double",
			"unit": "unit",
			"description": "Permitivitty of insulation, relative to air"
		},
		"shield_gmr": {
			"type": "double",
			"unit": "ft",
			"description": "Geometric mean radius of shielding sheath"
		},
		"shield_resistance": {
			"type": "double",
			"unit": "Ohm/mile",
			"description": "Resistance of shielding sheath in ohms/mile"
		},
		"rating.summer.continuous": {
			"type": "double",
			"unit": "A",
			"description": "amp rating in summer, continuous"
		},
		"rating.summer.emergency": {
			"type": "double",
			"unit": "A",
			"description": "amp rating in summer, short term"
		},
		"rating.winter.continuous": {
			"type": "double",
			"unit": "A",
			"description": "amp rating in winter, continuous"
		},
		"rating.winter.emergency": {
			"type": "double",
			"unit": "A",
			"description": "amp rating in winter, short term"
		}
	},
	"vfd": {
		"link": {
			"type": "parent"
		},
		"rated_motor_speed": {
			"type": "double",
			"unit": "1/min",
			"description": "Rated speed of the VFD in RPM. Default = 1800 RPM"
		},
		"desired_motor_speed": {
			"type": "double",
			"unit": "1/min",
			"description": "Desired speed of the VFD In ROM. Default = 1800 RPM (max)"
		},
		"motor_poles": {
			"type": "double",
			"description": "Number of Motor Poles. Default = 4"
		},
		"rated_output_voltage": {
			"type": "double",
			"unit": "V",
			"description": "Line to Line Voltage - VFD Rated voltage. Default to TO node nominal_voltage"
		},
		"rated_horse_power": {
			"type": "double",
			"unit": "hp",
			"description": "Rated Horse Power of the VFD. Default = 75 HP"
		},
		"nominal_output_frequency": {
			"type": "double",
			"unit": "Hz",
			"description": "Nominal VFD output frequency. Default = 60 Hz"
		},
		"desired_output_frequency": {
			"type": "double",
			"unit": "Hz",
			"description": "VFD desired output frequency based on the desired RPM"
		},
		"current_output_frequency": {
			"type": "double",
			"unit": "Hz",
			"description": "VFD currently output frequency"
		},
		"efficiency": {
			"type": "double",
			"unit": "%",
			"description": "Current VFD efficiency based on the load/VFD output Horsepower"
		},
		"stable_time": {
			"type": "double",
			"unit": "s",
			"description": "Time taken by the VFD to reach desired frequency (based on RPM). Default = 1.45 seconds"
		},
		"vfd_state": {
			"type": "enumeration",
			"keywords": {
				"STEADY_STATE":2,
				"CHANGING":1,
				"OFF":0
			},
			"description": "Current state of the VFD"
		}
	},
	"volt_var_control": {
		"control_method": {
			"type": "enumeration",
			"keywords": {
				"STANDBY":0,
				"ACTIVE":1
			},
			"description": "IVVC activated or in standby"
		},
		"capacitor_delay": {
			"type": "double",
			"unit": "s",
			"description": "Default capacitor time delay - overridden by local defintions"
		},
		"regulator_delay": {
			"type": "double",
			"unit": "s",
			"description": "Default regulator time delay - overriden by local definitions"
		},
		"desired_pf": {
			"type": "double",
			"description": "Desired power-factor magnitude at the substation transformer or regulator"
		},
		"d_max": {
			"type": "double",
			"description": "Scaling constant for capacitor switching on - typically 0.3 - 0.6"
		},
		"d_min": {
			"type": "double",
			"description": "Scaling constant for capacitor switching off - typically 0.1 - 0.4"
		},
		"substation_link": {
			"type": "object",
			"description": "Substation link, transformer, or regulator to measure power factor"
		},
		"pf_phase": {
			"type": "set",
			"keywords": {
				"C":4,
				"B":2,
				"A":1
			},
			"description": "Phase to include in power factor monitoring"
		},
		"regulator_list": {
			"type": "char1024",
			"description": "List of voltage regulators for the system, separated by commas"
		},
		"capacitor_list": {
			"type": "char1024",
			"description": "List of controllable capacitors on the system separated by commas"
		},
		"voltage_measurements": {
			"type": "char1024",
			"description": "List of voltage measurement devices, separated by commas"
		},
		"minimum_voltages": {
			"type": "char1024",
			"description": "Minimum voltages allowed for feeder, separated by commas"
		},
		"maximum_voltages": {
			"type": "char1024",
			"description": "Maximum voltages allowed for feeder, separated by commas"
		},
		"desired_voltages": {
			"type": "char1024",
			"description": "Desired operating voltages for the regulators, separated by commas"
		},
		"max_vdrop": {
			"type": "char1024",
			"description": "Maximum voltage drop between feeder and end measurements for each regulator, separated by commas"
		},
		"high_load_deadband": {
			"type": "char1024",
			"description": "High loading case voltage deadband for each regulator, separated by commas"
		},
		"low_load_deadband": {
			"type": "char1024",
			"description": "Low loading case voltage deadband for each regulator, separated by commas"
		},
		"pf_signed": {
			"type": "bool",
			"description": "Set to true to consider the sign on the power factor.  Otherwise, it just maintains the deadband of +/-desired_pf"
		}
	},
	"voltdump": {
		"group": {
			"type": "char32",
			"description": "the group ID to output data for (all nodes if empty)"
		},
		"runtime": {
			"type": "timestamp",
			"description": "the time to check voltage data"
		},
		"filename": {
			"type": "char256",
			"description": "the file to dump the voltage data into"
		},
		"file": {
			"type": "char256",
			"description": "the file to dump the voltage data into"
		},
		"runcount": {
			"type": "int32",
			"description": "the number of times the file has been written to"
		},
		"mode": {
			"type": "enumeration",
			"keywords": {
				"POLAR":1,
				"RECT":0
			},
			"description": "dumps the voltages in either polar or rectangular notation"
		}
	}
}
,
"reliability": {
	"global_attributes": {
		"enable_subsecond_models": {
			"type": "bool",
			"description": "Flag to enable deltamode functionality in the reliability module"
		},
		"maximum_event_length": {
			"type": "double",
			"unit": "s",
			"description": "Maximum duration of any faulting event"
		},
		"report_event_log": {
			"type": "bool",
			"description": "Should the metrics object dump a logfile?"
		},
		"deltamode_timestep": {
			"type": "double",
			"unit": "ns",
			"description": "Desired minimum timestep for deltamode-related simulations"
		}
	},
	"eventgen": {
		"target_group": {
			"type": "char1024"
		},
		"fault_type": {
			"type": "char256"
		},
		"failure_dist": {
			"type": "enumeration",
			"keywords": {
				"TRIANGLE":10,
				"BETA":9,
				"GAMMA":8,
				"WEIBULL":7,
				"RAYLEIGH":6,
				"EXPONENTIAL":5,
				"PARETO":4,
				"BERNOULLI":3,
				"LOGNORMAL":2,
				"NORMAL":1,
				"UNIFORM":0
			}
		},
		"restoration_dist": {
			"type": "enumeration",
			"keywords": {
				"TRIANGLE":10,
				"BETA":9,
				"GAMMA":8,
				"WEIBULL":7,
				"RAYLEIGH":6,
				"EXPONENTIAL":5,
				"PARETO":4,
				"BERNOULLI":3,
				"LOGNORMAL":2,
				"NORMAL":1,
				"UNIFORM":0
			}
		},
		"failure_dist_param_1": {
			"type": "double"
		},
		"failure_dist_param_2": {
			"type": "double"
		},
		"restoration_dist_param_1": {
			"type": "double"
		},
		"restoration_dist_param_2": {
			"type": "double"
		},
		"manual_outages": {
			"type": "char1024"
		},
		"max_outage_length": {
			"type": "double",
			"unit": "s"
		},
		"max_simultaneous_faults": {
			"type": "int32"
		},
		"controlled_switch": {
			"type": "char256",
			"description": "Name of a switch to manually fault/un-fault"
		},
		"switch_state": {
			"type": "int32",
			"description": "Current state (1=closed, 0=open) for the controlled switch"
		},
		"external_fault_event": {
			"type": "char1024",
			"description": "This variable is populated from external programs with a fault they would like to add/remove to the system."
		},
		"use_external_faults": {
			"type": "bool",
			"description": "Boolean to let the object know to check for faults messages from an external source."
		}
	},
	"metrics": {
		"report_file": {
			"type": "char1024"
		},
		"customer_group": {
			"type": "char1024"
		},
		"module_metrics_object": {
			"type": "object"
		},
		"metrics_of_interest": {
			"type": "char1024"
		},
		"metric_interval": {
			"type": "double",
			"unit": "s"
		},
		"report_interval": {
			"type": "double",
			"unit": "s"
		}
	}
}
,
"residential": {
	"global_attributes": {
		"default_line_voltage": {
			"type": "double",
			"unit": "V",
			"description": "line voltage (L-N) to use when no circuit is attached"
		},
		"default_outdoor_temperature": {
			"type": "double",
			"unit": "degF",
			"description": "outdoor air temperature when no climate data is found"
		},
		"default_humidity": {
			"type": "double",
			"unit": "%",
			"description": "humidity when no climate data is found"
		},
		"default_horizontal_solar": {
			"type": "double",
			"unit": "Btu/sf",
			"description": "horizontal solar gains when no climate data is found"
		},
		"default_etp_iterations": {
			"type": "int64",
			"description": "number of iterations ETP solver will run"
		},
		"default_grid_frequency": {
			"type": "double",
			"unit": "Hz",
			"description": "grid frequency when no powerflow attachment is found"
		},
		"ANSI_voltage_check": {
			"type": "bool",
			"description": "enable or disable messages about ANSI voltage limit violations in the house"
		},
		"enable_subsecond_models": {
			"type": "bool",
			"description": "Enable deltamode capabilities within the residential module"
		},
		"deltamode_timestep": {
			"type": "double",
			"unit": "ns",
			"description": "Desired minimum timestep for deltamode-related simulations"
		},
		"all_residential_delta": {
			"type": "bool",
			"description": "Modeling convenient - enables all residential objects in deltamode"
		},
		"implicit_enduses": {
			"type": "set",
			"keywords": {
				"NONE":0,
				"DRYER":33554432,
				"CLOTHESWASHER":16777216,
				"WATERHEATER":1048576,
				"EVCHARGER":524288,
				"RANGE":262144,
				"REFRIGERATOR":131072,
				"FREEZER":65536,
				"MICROWAVE":512,
				"DISHWASHER":256,
				"OCCUPANCY":4,
				"PLUGS":2,
				"LIGHTS":1
			},
			"description": "list of implicit enduses that are active in houses"
		},
		"implicit_enduse_source": {
			"type": "enumeration",
			"keywords": {
				"RBSA2014":2,
				"ELCAP2010":1,
				"ELCAP1990":0
			}
		},
		"house_low_temperature_warning": {
			"type": "double",
			"unit": "degF",
			"description": "the low house indoor temperature at which a warning will be generated"
		},
		"house_high_temperature_warning": {
			"type": "double",
			"unit": "degF",
			"description": "the high house indoor temperature at which a warning will be generated"
		},
		"thermostat_control_warning": {
			"type": "double",
			"description": "boolean to indicate whether a warning is generated when indoor temperature is out of control limits"
		},
		"system_dwell_time": {
			"type": "double",
			"unit": "s",
			"description": "the heating/cooling system dwell time interval for changing system state"
		},
		"aux_cutin_temperature": {
			"type": "double",
			"unit": "degF",
			"description": "the outdoor air temperature below which AUX heating is used"
		}
	},
	"ZIPload": {
		"residential_enduse": {
			"type": "parent"
		},
		"heat_fraction": {
			"type": "double",
			"description": "fraction of ZIPload that is transferred as heat"
		},
		"base_power": {
			"type": "double",
			"unit": "kW",
			"description": "base real power of the overall load"
		},
		"power_pf": {
			"type": "double",
			"description": "power factor for constant power portion"
		},
		"current_pf": {
			"type": "double",
			"description": "power factor for constant current portion"
		},
		"impedance_pf": {
			"type": "double",
			"description": "power factor for constant impedance portion"
		},
		"is_240": {
			"type": "bool",
			"description": "load is 220/240 V (across both phases)"
		},
		"breaker_val": {
			"type": "double",
			"unit": "A",
			"description": "Amperage of connected breaker"
		},
		"actual_power": {
			"type": "complex",
			"unit": "kVA",
			"description": "variable to pull actual load as function of voltage"
		},
		"multiplier": {
			"type": "double",
			"description": "this variable is used to modify the base power as a function of multiplier x base_power"
		},
		"heatgain_only": {
			"type": "bool",
			"description": "allows the zipload to generate heat only (no kW), not activated by default"
		},
		"demand_response_mode": {
			"type": "bool",
			"description": "Activates equilibrium dynamic representation of demand response"
		},
		"number_of_devices": {
			"type": "int16",
			"description": "Number of devices to model - base power is the total load of all devices"
		},
		"thermostatic_control_range": {
			"type": "int16",
			"description": "Range of the thermostat's control operation"
		},
		"number_of_devices_off": {
			"type": "double",
			"description": "Total number of devices that are off"
		},
		"number_of_devices_on": {
			"type": "double",
			"description": "Total number of devices that are on"
		},
		"rate_of_cooling": {
			"type": "double",
			"unit": "K/h",
			"description": "rate at which devices cool down"
		},
		"rate_of_heating": {
			"type": "double",
			"unit": "K/h",
			"description": "rate at which devices heat up"
		},
		"temperature": {
			"type": "int16",
			"description": "temperature of the device's controlled media (eg air temp or water temp)"
		},
		"phi": {
			"type": "double",
			"description": "duty cycle of the device"
		},
		"demand_rate": {
			"type": "double",
			"unit": "1/h",
			"description": "consumer demand rate that prematurely turns on a device or population"
		},
		"nominal_power": {
			"type": "double",
			"description": "the rated amount of power demanded by devices that are on"
		},
		"duty_cycle": {
			"type": "double",
			"unit": "pu",
			"description": "fraction of time in the on state"
		},
		"recovery_duty_cycle": {
			"type": "double",
			"unit": "pu",
			"description": "fraction of time in the on state, while in recovery interval"
		},
		"period": {
			"type": "double",
			"unit": "h",
			"description": "time interval to apply duty cycle"
		},
		"phase": {
			"type": "double",
			"unit": "pu",
			"description": "initial phase of load; duty will be assumed to occur at beginning of period"
		}
	},
	"appliance": {
		"residential_enduse": {
			"type": "parent"
		},
		"powers": {
			"type": "complex_array"
		},
		"impedances": {
			"type": "complex_array"
		},
		"currents": {
			"type": "complex_array"
		},
		"durations": {
			"type": "double_array"
		},
		"transitions": {
			"type": "double_array"
		},
		"heatgains": {
			"type": "double_array"
		}
	},
	"clotheswasher": {
		"residential_enduse": {
			"type": "parent"
		},
		"motor_power": {
			"type": "double",
			"unit": "kW"
		},
		"circuit_split": {
			"type": "double"
		},
		"queue": {
			"type": "double",
			"unit": "unit",
			"description": "the total laundry accumulated"
		},
		"demand": {
			"type": "double",
			"unit": "unit/day",
			"description": "the amount of laundry accumulating daily"
		},
		"energy_meter": {
			"type": "complex",
			"unit": "kWh"
		},
		"stall_voltage": {
			"type": "double",
			"unit": "V"
		},
		"start_voltage": {
			"type": "double",
			"unit": "V"
		},
		"clothesWasherPower": {
			"type": "double"
		},
		"stall_impedance": {
			"type": "complex",
			"unit": "Ohm"
		},
		"trip_delay": {
			"type": "double",
			"unit": "s"
		},
		"reset_delay": {
			"type": "double",
			"unit": "s"
		},
		"Is_on": {
			"type": "double"
		},
		"normal_perc": {
			"type": "double"
		},
		"perm_press_perc": {
			"type": "double"
		},
		"NORMAL_PREWASH_POWER": {
			"type": "double"
		},
		"NORMAL_WASH_POWER": {
			"type": "double"
		},
		"NORMAL_SPIN_LOW_POWER": {
			"type": "double"
		},
		"NORMAL_SPIN_MEDIUM_POWER": {
			"type": "double"
		},
		"NORMAL_SPIN_HIGH_POWER": {
			"type": "double"
		},
		"NORMAL_SMALLWASH_POWER": {
			"type": "double"
		},
		"NORMAL_PREWASH_ENERGY": {
			"type": "double"
		},
		"NORMAL_WASH_ENERGY": {
			"type": "double"
		},
		"NORMAL_SPIN_LOW_ENERGY": {
			"type": "double"
		},
		"NORMAL_SPIN_MEDIUM_ENERGY": {
			"type": "double"
		},
		"NORMAL_SPIN_HIGH_ENERGY": {
			"type": "double"
		},
		"NORMAL_SMALLWASH_ENERGY": {
			"type": "double"
		},
		"PERMPRESS_PREWASH_POWER": {
			"type": "double"
		},
		"PERMPRESS_WASH_POWER": {
			"type": "double"
		},
		"PERMPRESS_SPIN_LOW_POWER": {
			"type": "double"
		},
		"PERMPRESS_SPIN_MEDIUM_POWER": {
			"type": "double"
		},
		"PERMPRESS_SPIN_HIGH_POWER": {
			"type": "double"
		},
		"PERMPRESS_SMALLWASH_POWER": {
			"type": "double"
		},
		"PERMPRESS_PREWASH_ENERGY": {
			"type": "double"
		},
		"PERMPRESS_WASH_ENERGY": {
			"type": "double"
		},
		"PERMPRESS_SPIN_LOW_ENERGY": {
			"type": "double"
		},
		"PERMPRESS_SPIN_MEDIUM_ENERGY": {
			"type": "double"
		},
		"PERMPRESS_SPIN_HIGH_ENERGY": {
			"type": "double"
		},
		"PERMPRESS_SMALLWASH_ENERGY": {
			"type": "double"
		},
		"GENTLE_PREWASH_POWER": {
			"type": "double"
		},
		"GENTLE_WASH_POWER": {
			"type": "double"
		},
		"GENTLE_SPIN_LOW_POWER": {
			"type": "double"
		},
		"GENTLE_SPIN_MEDIUM_POWER": {
			"type": "double"
		},
		"GENTLE_SPIN_HIGH_POWER": {
			"type": "double"
		},
		"GENTLE_SMALLWASH_POWER": {
			"type": "double"
		},
		"GENTLE_PREWASH_ENERGY": {
			"type": "double"
		},
		"GENTLE_WASH_ENERGY": {
			"type": "double"
		},
		"GENTLE_SPIN_LOW_ENERGY": {
			"type": "double"
		},
		"GENTLE_SPIN_MEDIUM_ENERGY": {
			"type": "double"
		},
		"GENTLE_SPIN_HIGH_ENERGY": {
			"type": "double"
		},
		"GENTLE_SMALLWASH_ENERGY": {
			"type": "double"
		},
		"queue_min": {
			"type": "double",
			"unit": "unit"
		},
		"queue_max": {
			"type": "double",
			"unit": "unit"
		},
		"clotheswasher_run_prob": {
			"type": "double"
		},
		"state": {
			"type": "enumeration",
			"keywords": {
				"SPIN4":9,
				"SPIN3":8,
				"SPIN2":7,
				"SPIN1":6,
				"WASH":5,
				"PREWASH":4,
				"STOPPED":0
			}
		},
		"spin_mode": {
			"type": "enumeration",
			"keywords": {
				"SMALLWASH":4,
				"SPIN_WASH":3,
				"SPIN_HIGH":2,
				"SPIN_MEDIUM":1,
				"SPIN_LOW":0
			}
		},
		"wash_mode": {
			"type": "enumeration",
			"keywords": {
				"GENTLE":2,
				"PERM_PRESS":1,
				"NORMAL":0
			}
		}
	},
	"dishwasher": {
		"residential_enduse": {
			"type": "parent"
		},
		"control_power": {
			"type": "double",
			"unit": "W"
		},
		"dishwasher_coil_power_1": {
			"type": "double",
			"unit": "W"
		},
		"dishwasher_coil_power_2": {
			"type": "double",
			"unit": "W"
		},
		"dishwasher_coil_power_3": {
			"type": "double",
			"unit": "W"
		},
		"motor_power": {
			"type": "double",
			"unit": "W"
		},
		"circuit_split": {
			"type": "double"
		},
		"queue": {
			"type": "double",
			"unit": "unit",
			"description": "number of loads accumulated"
		},
		"stall_voltage": {
			"type": "double",
			"unit": "V"
		},
		"start_voltage": {
			"type": "double",
			"unit": "V"
		},
		"stall_impedance": {
			"type": "complex",
			"unit": "Ohm"
		},
		"trip_delay": {
			"type": "double",
			"unit": "s"
		},
		"reset_delay": {
			"type": "double",
			"unit": "s"
		},
		"total_power": {
			"type": "double",
			"unit": "W"
		},
		"state": {
			"type": "enumeration",
			"keywords": {
				"HEATEDDRY_ONLY":7,
				"CONTROL_ONLY":6,
				"COIL_ONLY":3,
				"MOTOR_COIL_ONLY":4,
				"MOTOR_ONLY":5,
				"TRIPPED":2,
				"STALLED":1,
				"STOPPED":0
			}
		},
		"energy_baseline": {
			"type": "double",
			"unit": "kWh"
		},
		"energy_used": {
			"type": "double",
			"unit": "kWh"
		},
		"control_check1": {
			"type": "bool"
		},
		"control_check2": {
			"type": "bool"
		},
		"control_check3": {
			"type": "bool"
		},
		"control_check4": {
			"type": "bool"
		},
		"control_check5": {
			"type": "bool"
		},
		"control_check6": {
			"type": "bool"
		},
		"control_check7": {
			"type": "bool"
		},
		"control_check8": {
			"type": "bool"
		},
		"control_check9": {
			"type": "bool"
		},
		"control_check10": {
			"type": "bool"
		},
		"control_check11": {
			"type": "bool"
		},
		"control_check12": {
			"type": "bool"
		},
		"control_check_temp": {
			"type": "bool"
		},
		"motor_only_check1": {
			"type": "bool"
		},
		"motor_only_check2": {
			"type": "bool"
		},
		"motor_only_check3": {
			"type": "bool"
		},
		"motor_only_check4": {
			"type": "bool"
		},
		"motor_only_check5": {
			"type": "bool"
		},
		"motor_only_check6": {
			"type": "bool"
		},
		"motor_only_check7": {
			"type": "bool"
		},
		"motor_only_check8": {
			"type": "bool"
		},
		"motor_only_check9": {
			"type": "bool"
		},
		"motor_only_temp1": {
			"type": "bool"
		},
		"motor_only_temp2": {
			"type": "bool"
		},
		"motor_coil_only_check1": {
			"type": "bool"
		},
		"motor_coil_only_check2": {
			"type": "bool"
		},
		"heateddry_check1": {
			"type": "bool"
		},
		"heateddry_check2": {
			"type": "bool"
		},
		"coil_only_check1": {
			"type": "bool"
		},
		"coil_only_check2": {
			"type": "bool"
		},
		"coil_only_check3": {
			"type": "bool"
		},
		"Heateddry_option_check": {
			"type": "bool"
		},
		"queue_min": {
			"type": "double",
			"unit": "unit"
		},
		"queue_max": {
			"type": "double",
			"unit": "unit"
		},
		"pulse_interval_1": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_2": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_3": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_4": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_5": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_6": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_7": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_8": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_9": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_10": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_11": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_12": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_13": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_14": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_15": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_16": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_17": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_18": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_19": {
			"type": "double",
			"unit": "s"
		},
		"dishwasher_run_prob": {
			"type": "double"
		},
		"energy_needed": {
			"type": "double",
			"unit": "kWh"
		},
		"dishwasher_demand": {
			"type": "double",
			"unit": "kWh"
		},
		"daily_dishwasher_demand": {
			"type": "double",
			"unit": "kWh"
		},
		"actual_dishwasher_demand": {
			"type": "double",
			"unit": "kWh"
		},
		"motor_on_off": {
			"type": "double"
		},
		"motor_coil_on_off": {
			"type": "double"
		},
		"is_240": {
			"type": "bool",
			"description": "load is 220/240 V (across both phases)"
		}
	},
	"dryer": {
		"residential_enduse": {
			"type": "parent"
		},
		"motor_power": {
			"type": "double",
			"unit": "W"
		},
		"dryer_coil_power": {
			"type": "double",
			"unit": "W"
		},
		"controls_power": {
			"type": "double",
			"unit": "W"
		},
		"circuit_split": {
			"type": "double"
		},
		"queue": {
			"type": "double",
			"unit": "unit",
			"description": "number of loads accumulated"
		},
		"queue_min": {
			"type": "double",
			"unit": "unit"
		},
		"queue_max": {
			"type": "double",
			"unit": "unit"
		},
		"stall_voltage": {
			"type": "double",
			"unit": "V"
		},
		"start_voltage": {
			"type": "double",
			"unit": "V"
		},
		"stall_impedance": {
			"type": "complex",
			"unit": "Ohm"
		},
		"trip_delay": {
			"type": "double",
			"unit": "s"
		},
		"reset_delay": {
			"type": "double",
			"unit": "s"
		},
		"total_power": {
			"type": "double",
			"unit": "W"
		},
		"state": {
			"type": "enumeration",
			"keywords": {
				"CONTROL_ONLY":5,
				"MOTOR_COIL_ONLY":3,
				"MOTOR_ONLY":4,
				"TRIPPED":2,
				"STALLED":1,
				"STOPPED":0
			}
		},
		"energy_baseline": {
			"type": "double",
			"unit": "kWh"
		},
		"energy_used": {
			"type": "double",
			"unit": "kWh"
		},
		"next_t": {
			"type": "double"
		},
		"control_check": {
			"type": "bool"
		},
		"motor_only_check1": {
			"type": "bool"
		},
		"motor_only_check2": {
			"type": "bool"
		},
		"motor_only_check3": {
			"type": "bool"
		},
		"motor_only_check4": {
			"type": "bool"
		},
		"motor_only_check5": {
			"type": "bool"
		},
		"motor_only_check6": {
			"type": "bool"
		},
		"dryer_on": {
			"type": "bool"
		},
		"dryer_ready": {
			"type": "bool"
		},
		"dryer_check": {
			"type": "bool"
		},
		"motor_coil_only_check1": {
			"type": "bool"
		},
		"motor_coil_only_check2": {
			"type": "bool"
		},
		"motor_coil_only_check3": {
			"type": "bool"
		},
		"motor_coil_only_check4": {
			"type": "bool"
		},
		"motor_coil_only_check5": {
			"type": "bool"
		},
		"motor_coil_only_check6": {
			"type": "bool"
		},
		"dryer_run_prob": {
			"type": "double"
		},
		"dryer_turn_on": {
			"type": "double"
		},
		"pulse_interval_1": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_2": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_3": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_4": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_5": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_6": {
			"type": "double",
			"unit": "s"
		},
		"pulse_interval_7": {
			"type": "double",
			"unit": "s"
		},
		"energy_needed": {
			"type": "double",
			"unit": "kWh"
		},
		"daily_dryer_demand": {
			"type": "double",
			"unit": "kWh"
		},
		"actual_dryer_demand": {
			"type": "double",
			"unit": "kWh"
		},
		"motor_on_off": {
			"type": "double"
		},
		"motor_coil_on_off": {
			"type": "double"
		},
		"is_240": {
			"type": "bool",
			"description": "load is 220/240 V (across both phases)"
		}
	},
	"evcharger": {
		"residential_enduse": {
			"type": "parent"
		},
		"charger_type": {
			"type": "enumeration",
			"keywords": {
				"HIGH":2,
				"MEDIUM":1,
				"LOW":0
			}
		},
		"vehicle_type": {
			"type": "enumeration",
			"keywords": {
				"HYBRID":1,
				"ELECTRIC":0
			}
		},
		"state": {
			"type": "enumeration",
			"keywords": {
				"WORK":1,
				"HOME":0,
				"UNKNOWN":4294967295
			}
		},
		"p_go_home": {
			"type": "double",
			"unit": "unit/h"
		},
		"p_go_work": {
			"type": "double",
			"unit": "unit/h"
		},
		"work_dist": {
			"type": "double",
			"unit": "mile"
		},
		"capacity": {
			"type": "double",
			"unit": "kWh"
		},
		"charge": {
			"type": "double",
			"unit": "unit"
		},
		"charge_at_work": {
			"type": "bool"
		},
		"charge_throttle": {
			"type": "double",
			"unit": "unit"
		},
		"charger_efficiency": {
			"type": "double",
			"unit": "unit",
			"description": "Efficiency of the charger in terms of energy in to battery stored"
		},
		"power_train_efficiency": {
			"type": "double",
			"unit": "mile/kWh",
			"description": "Miles per kWh of battery charge"
		},
		"mileage_classification": {
			"type": "double",
			"unit": "mile",
			"description": "Miles expected range on battery only"
		},
		"demand_profile": {
			"type": "char1024"
		}
	},
	"evcharger_det": {
		"residential_enduse": {
			"type": "parent"
		},
		"desired_charge_rate": {
			"type": "double",
			"unit": "W",
			"description": "Current desired charge rate of the vehicle"
		},
		"actual_charge_rate": {
			"type": "double",
			"unit": "W",
			"description": "Actual charge rate of the vehicle - may be ramp limited"
		},
		"realized_charge_rate": {
			"type": "double",
			"unit": "kW",
			"description": "Implemented charge rate of the vehicle - grid-influence result of actual_charge_rate"
		},
		"variation_mean": {
			"type": "double",
			"unit": "s",
			"description": "Mean of normal variation of schedule variation"
		},
		"variation_std_dev": {
			"type": "double",
			"unit": "s",
			"description": "Standard deviation of normal variation of schedule times"
		},
		"variation_trip_mean": {
			"type": "double",
			"unit": "mile",
			"description": "Mean of normal variation of trip distance variation"
		},
		"variation_trip_std_dev": {
			"type": "double",
			"unit": "mile",
			"description": "Standard deviation of normal variation of trip distance"
		},
		"mileage_classification": {
			"type": "double",
			"unit": "mile",
			"description": "Mileage classification of electric vehicle"
		},
		"work_charging_available": {
			"type": "bool",
			"description": "Charging available when at work"
		},
		"data_file": {
			"type": "char1024",
			"description": "Path to .CSV file with vehicle travel information"
		},
		"vehicle_index": {
			"type": "int32",
			"description": "Index of vehicles in file this particular vehicle's data"
		},
		"vehicle_location": {
			"type": "enumeration",
			"keywords": {
				"DRIVING_WORK":4,
				"DRIVING_HOME":3,
				"WORK":2,
				"HOME":1,
				"UNKNOWN":0
			}
		},
		"travel_distance": {
			"type": "double",
			"unit": "mile",
			"description": "Distance vehicle travels from home to home (round trip)"
		},
		"arrival_at_work": {
			"type": "double",
			"description": "Time vehicle arrives at work - HHMM"
		},
		"duration_at_work": {
			"type": "double",
			"unit": "s",
			"description": "Duration the vehicle remains at work"
		},
		"arrival_at_home": {
			"type": "double",
			"description": "Time vehicle arrives at home - HHMM"
		},
		"duration_at_home": {
			"type": "double",
			"unit": "s",
			"description": "Duration the vehicle remains at home"
		},
		"battery_capacity": {
			"type": "double",
			"unit": "kWh",
			"description": "Current capacity of the battery in kWh"
		},
		"battery_SOC": {
			"type": "double",
			"unit": "%",
			"description": "State of charge of battery"
		},
		"battery_size": {
			"type": "double",
			"unit": "kWh",
			"description": "Full capacity of battery"
		},
		"mileage_efficiency": {
			"type": "double",
			"unit": "mile/kWh",
			"description": "Efficiency of drive train in mile/kWh"
		},
		"maximum_charge_rate": {
			"type": "double",
			"unit": "W",
			"description": "Maximum output rate of charger in kW"
		},
		"charging_efficiency": {
			"type": "double",
			"unit": "unit",
			"description": "Efficiency of charger (ratio) when charging"
		},
		"maximum_overload_current": {
			"type": "double",
			"unit": "unit",
			"description": "Maximum overload current, in per-unit"
		},
		"enable_J2894": {
			"type": "bool",
			"description": "Enable SAE J2894-suggested voltage and ramping suggestions"
		},
		"charger_enabled": {
			"type": "bool",
			"description": "Flag to indicate if the charger is working, or disconnected due to SAE J2894/ANSI C84.1"
		},
		"J2894_trip_method": {
			"type": "enumeration",
			"keywords": {
				"UNKNOWN":7,
				"EXTREME_UNDER_VOLT":6,
				"LOW_UNDER_VOLT":5,
				"UNDER_VOLT":4,
				"OVER_VOLT":3,
				"HIGH_OVER_VOLT":2,
				"SURGE_OVER_VOLT":1,
				"NONE":0
			},
			"description": "SAE J2894 threshold exceeded for the tripping"
		},
		"J2894_highest_voltage_surge_value": {
			"type": "double",
			"unit": "pu",
			"description": "J2894-suggested high voltage surge threshold magnitude"
		},
		"J2894_highest_voltage_surge_time": {
			"type": "double",
			"unit": "s",
			"description": "J2894-suggested high voltage surge threshold duration"
		},
		"J2894_high_voltage_persistent_value": {
			"type": "double",
			"unit": "pu",
			"description": "J2894-suggested higher-voltage momentary magnitude"
		},
		"J2894_high_voltage_persistent_time": {
			"type": "double",
			"unit": "s",
			"description": "J2894-suggsted higher-voltage momentary duration"
		},
		"J2894_lowest_voltage_surge_value": {
			"type": "double",
			"unit": "pu",
			"description": "J2894-suggested low voltage surge threshold magnitude"
		},
		"J2894_lowest_voltage_surge_time": {
			"type": "double",
			"unit": "s",
			"description": "J2894-suggested low voltage surge threshold duration"
		},
		"J2894_low_voltage_persistent_value": {
			"type": "double",
			"unit": "pu",
			"description": "J2894-suggested lower-voltage momentary magnitude"
		},
		"J2894_low_voltage_persistent_time": {
			"type": "double",
			"unit": "s",
			"description": "J2894-suggested lower-voltage momentary duration"
		},
		"J2894_ramp_rate_limit": {
			"type": "double",
			"unit": "A/s",
			"description": "J2894-suggested ramp rate limit for charger activation"
		},
		"J2894_outage_disconnect_interval": {
			"type": "double",
			"unit": "s",
			"description": "J2894-suggested outage length, when criterion has been exceeded"
		}
	},
	"freezer": {
		"residential_enduse": {
			"type": "parent"
		},
		"size": {
			"type": "double",
			"unit": "cf"
		},
		"rated_capacity": {
			"type": "double",
			"unit": "Btu/h"
		},
		"temperature": {
			"type": "double",
			"unit": "degF"
		},
		"setpoint": {
			"type": "double",
			"unit": "degF"
		},
		"deadband": {
			"type": "double",
			"unit": "degF"
		},
		"next_time": {
			"type": "timestamp"
		},
		"output": {
			"type": "double"
		},
		"event_temp": {
			"type": "double"
		},
		"UA": {
			"type": "double",
			"unit": "Btu/degF*h"
		},
		"state": {
			"type": "enumeration",
			"keywords": {
				"ON":1,
				"OFF":0
			}
		}
	},
	"house": {
		"residential_enduse": {
			"type": "parent"
		},
		"weather": {
			"type": "object",
			"description": "reference to the climate object"
		},
		"floor_area": {
			"type": "double",
			"unit": "sf",
			"description": "home conditioned floor area"
		},
		"gross_wall_area": {
			"type": "double",
			"unit": "sf",
			"description": "gross outdoor wall area"
		},
		"ceiling_height": {
			"type": "double",
			"unit": "ft",
			"description": "average ceiling height"
		},
		"aspect_ratio": {
			"type": "double",
			"description": "aspect ratio of the home's footprint"
		},
		"envelope_UA": {
			"type": "double",
			"unit": "Btu/degF*h",
			"description": "overall UA of the home's envelope"
		},
		"window_wall_ratio": {
			"type": "double",
			"description": "ratio of window area to wall area"
		},
		"number_of_doors": {
			"type": "double",
			"description": "ratio of door area to wall area"
		},
		"exterior_wall_fraction": {
			"type": "double",
			"description": "ratio of exterior wall area to total wall area"
		},
		"interior_exterior_wall_ratio": {
			"type": "double",
			"description": "ratio of interior to exterior walls"
		},
		"exterior_ceiling_fraction": {
			"type": "double",
			"description": "ratio of external ceiling sf to floor area"
		},
		"exterior_floor_fraction": {
			"type": "double",
			"description": "ratio of floor area used in UA calculation"
		},
		"window_shading": {
			"type": "double",
			"description": "transmission coefficient through window due to glazing"
		},
		"window_exterior_transmission_coefficient": {
			"type": "double",
			"description": "coefficient for the amount of energy that passes through window"
		},
		"solar_heatgain_factor": {
			"type": "double",
			"description": "product of the window area, window transmitivity, and the window exterior transmission coefficient"
		},
		"airchange_per_hour": {
			"type": "double",
			"unit": "unit/h",
			"description": "number of air-changes per hour"
		},
		"airchange_UA": {
			"type": "double",
			"unit": "Btu/degF*h",
			"description": "additional UA due to air infiltration"
		},
		"UA": {
			"type": "double",
			"unit": "Btu/degF*h",
			"description": "the total UA"
		},
		"internal_gain": {
			"type": "double",
			"unit": "Btu/h",
			"description": "internal heat gains"
		},
		"solar_gain": {
			"type": "double",
			"unit": "Btu/h",
			"description": "solar heat gains"
		},
		"incident_solar_radiation": {
			"type": "double",
			"unit": "Btu/h*sf",
			"description": "average incident solar radiation hitting the house"
		},
		"heat_cool_gain": {
			"type": "double",
			"unit": "Btu/h",
			"description": "system heat gains(losses)"
		},
		"include_solar_quadrant": {
			"type": "set",
			"keywords": {
				"W":16,
				"S":8,
				"E":4,
				"N":2,
				"H":1,
				"NONE":0
			},
			"description": "bit set for determining which solar incidence quadrants should be included in the solar heatgain"
		},
		"horizontal_diffuse_solar_radiation": {
			"type": "double",
			"unit": "Btu/h*sf",
			"description": "incident solar radiation hitting the top of the house"
		},
		"north_incident_solar_radiation": {
			"type": "double",
			"unit": "Btu/h*sf",
			"description": "incident solar radiation hitting the north side of the house"
		},
		"northwest_incident_solar_radiation": {
			"type": "double",
			"unit": "Btu/h*sf",
			"description": "incident solar radiation hitting the northwest side of the house"
		},
		"west_incident_solar_radiation": {
			"type": "double",
			"unit": "Btu/h*sf",
			"description": "incident solar radiation hitting the west side of the house"
		},
		"southwest_incident_solar_radiation": {
			"type": "double",
			"unit": "Btu/h*sf",
			"description": "incident solar radiation hitting the southwest side of the house"
		},
		"south_incident_solar_radiation": {
			"type": "double",
			"unit": "Btu/h*sf",
			"description": "incident solar radiation hitting the south side of the house"
		},
		"southeast_incident_solar_radiation": {
			"type": "double",
			"unit": "Btu/h*sf",
			"description": "incident solar radiation hitting the southeast side of the house"
		},
		"east_incident_solar_radiation": {
			"type": "double",
			"unit": "Btu/h*sf",
			"description": "incident solar radiation hitting the east side of the house"
		},
		"northeast_incident_solar_radiation": {
			"type": "double",
			"unit": "Btu/h*sf",
			"description": "incident solar radiation hitting the northeast side of the house"
		},
		"heating_cop_curve": {
			"type": "enumeration",
			"keywords": {
				"CURVED":3,
				"LINEAR":2,
				"FLAT":1,
				"DEFAULT":0
			},
			"description": "Defines the function type to use for the adjusted heating COP as a function of outside air temperature."
		},
		"heating_cap_curve": {
			"type": "enumeration",
			"keywords": {
				"CURVED":3,
				"LINEAR":2,
				"FLAT":1,
				"DEFAULT":0
			},
			"description": "Defines the function type to use for the adjusted heating capacity as a function of outside air temperature."
		},
		"cooling_cop_curve": {
			"type": "enumeration",
			"keywords": {
				"CURVED":3,
				"LINEAR":2,
				"FLAT":1,
				"DEFAULT":0
			},
			"description": "Defines the function type to use for the adjusted cooling COP as a function of outside air temperature."
		},
		"cooling_cap_curve": {
			"type": "enumeration",
			"keywords": {
				"CURVED":3,
				"LINEAR":2,
				"FLAT":1,
				"DEFAULT":0
			},
			"description": "Defines the function type to use for the adjusted cooling capacity as a function of outside air temperature."
		},
		"use_latent_heat": {
			"type": "bool",
			"description": "Boolean for using the heat latency of the air to the humidity when cooling."
		},
		"include_fan_heatgain": {
			"type": "bool",
			"description": "Boolean to choose whether to include the heat generated by the fan in the ETP model."
		},
		"thermostat_deadband": {
			"type": "double",
			"unit": "degF",
			"description": "deadband of thermostat control"
		},
		"dlc_offset": {
			"type": "double",
			"unit": "degF",
			"description": "used as a cap to offset the thermostat deadband for direct load control applications"
		},
		"thermostat_cycle_time": {
			"type": "int16",
			"description": "minimum time in seconds between thermostat updates"
		},
		"thermostat_off_cycle_time": {
			"type": "int16",
			"description": "the minimum amount of time the thermostat cycle must stay in the off state"
		},
		"thermostat_on_cycle_time": {
			"type": "int16",
			"description": "the minimum amount of time the thermostat cycle must stay in the on state"
		},
		"thermostat_last_cycle_time": {
			"type": "timestamp",
			"description": "last time the thermostat changed state"
		},
		"heating_setpoint": {
			"type": "double",
			"unit": "degF",
			"description": "thermostat heating setpoint"
		},
		"cooling_setpoint": {
			"type": "double",
			"unit": "degF",
			"description": "thermostat cooling setpoint"
		},
		"design_heating_setpoint": {
			"type": "double",
			"unit": "degF",
			"description": "system design heating setpoint"
		},
		"design_cooling_setpoint": {
			"type": "double",
			"unit": "degF",
			"description": "system design cooling setpoint"
		},
		"over_sizing_factor": {
			"type": "double",
			"description": "over sizes the heating and cooling system from standard specifications (0.2 ='s 120% sizing)"
		},
		"simulate_window_openings": {
			"type": "bool",
			"description": "activates a representation of an occupant opening a window and de-activating the HVAC system"
		},
		"is_window_open": {
			"type": "double",
			"description": "defines the state of the window opening, 1=open, 2=closed"
		},
		"window_low_temperature_cutoff": {
			"type": "double",
			"unit": "degF",
			"description": "lowest temperature at which the window opening might occur"
		},
		"window_high_temperature_cutoff": {
			"type": "double",
			"unit": "degF",
			"description": "highest temperature at which the window opening might occur"
		},
		"window_quadratic_coefficient": {
			"type": "double",
			"description": "quadratic coefficient for describing function between low and high temperature cutoffs"
		},
		"window_linear_coefficient": {
			"type": "double",
			"description": "linear coefficient for describing function between low and high temperature cutoffs"
		},
		"window_constant_coefficient": {
			"type": "double",
			"description": "constant coefficient for describing function between low and high temperature cutoffs"
		},
		"window_temperature_delta": {
			"type": "double",
			"description": "change in outdoor temperature required to update the window opening model"
		},
		"design_heating_capacity": {
			"type": "double",
			"unit": "Btu/h",
			"description": "system heating capacity"
		},
		"design_cooling_capacity": {
			"type": "double",
			"unit": "Btu/h",
			"description": "system cooling capacity"
		},
		"cooling_design_temperature": {
			"type": "double",
			"unit": "degF",
			"description": "system cooling design temperature"
		},
		"heating_design_temperature": {
			"type": "double",
			"unit": "degF",
			"description": "system heating design temperature"
		},
		"design_peak_solar": {
			"type": "double",
			"unit": "Btu/h*sf",
			"description": "system design solar load"
		},
		"design_internal_gains": {
			"type": "double",
			"unit": "Btu/h",
			"description": "system design internal gains"
		},
		"air_heat_fraction": {
			"type": "double",
			"unit": "pu",
			"description": "fraction of heat gain/loss that goes to air (as opposed to mass)"
		},
		"mass_solar_gain_fraction": {
			"type": "double",
			"unit": "pu",
			"description": "fraction of the heat gain/loss from the solar gains that goes to the mass"
		},
		"mass_internal_gain_fraction": {
			"type": "double",
			"unit": "pu",
			"description": "fraction of heat gain/loss from the internal gains that goes to the mass"
		},
		"auxiliary_heat_capacity": {
			"type": "double",
			"unit": "Btu/h",
			"description": "installed auxiliary heating capacity"
		},
		"aux_heat_deadband": {
			"type": "double",
			"unit": "degF",
			"description": "temperature offset from standard heat activation to auxiliary heat activation"
		},
		"aux_heat_temperature_lockout": {
			"type": "double",
			"unit": "degF",
			"description": "temperature at which auxiliary heat will not engage above"
		},
		"aux_heat_time_delay": {
			"type": "double",
			"unit": "s",
			"description": "time required for heater to run until auxiliary heating engages"
		},
		"cooling_supply_air_temp": {
			"type": "double",
			"unit": "degF",
			"description": "temperature of air blown out of the cooling system"
		},
		"heating_supply_air_temp": {
			"type": "double",
			"unit": "degF",
			"description": "temperature of air blown out of the heating system"
		},
		"duct_pressure_drop": {
			"type": "double",
			"unit": "inH2O",
			"description": "end-to-end pressure drop for the ventilation ducts, in inches of water"
		},
		"fan_design_power": {
			"type": "double",
			"unit": "W",
			"description": "designed maximum power draw of the ventilation fan"
		},
		"fan_low_power_fraction": {
			"type": "double",
			"unit": "pu",
			"description": "fraction of ventilation fan power draw during low-power mode (two-speed only)"
		},
		"fan_power": {
			"type": "double",
			"unit": "kW",
			"description": "current ventilation fan power draw"
		},
		"fan_design_airflow": {
			"type": "double",
			"unit": "cfm",
			"description": "designed airflow for the ventilation system"
		},
		"fan_impedance_fraction": {
			"type": "double",
			"unit": "pu",
			"description": "Impedance component of fan ZIP load"
		},
		"fan_power_fraction": {
			"type": "double",
			"unit": "pu",
			"description": "Power component of fan ZIP load"
		},
		"fan_current_fraction": {
			"type": "double",
			"unit": "pu",
			"description": "Current component of fan ZIP load"
		},
		"fan_power_factor": {
			"type": "double",
			"unit": "pu",
			"description": "Power factor of the fan load"
		},
		"heating_demand": {
			"type": "double",
			"unit": "kW",
			"description": "the current power draw to run the heating system"
		},
		"cooling_demand": {
			"type": "double",
			"unit": "kW",
			"description": "the current power draw to run the cooling system"
		},
		"heating_COP": {
			"type": "double",
			"unit": "pu",
			"description": "system heating performance coefficient"
		},
		"cooling_COP": {
			"type": "double",
			"unit": "pu",
			"description": "system cooling performance coefficient"
		},
		"air_temperature": {
			"type": "double",
			"unit": "degF",
			"description": "indoor air temperature"
		},
		"outdoor_temperature": {
			"type": "double",
			"unit": "degF",
			"description": "outdoor air temperature"
		},
		"outdoor_rh": {
			"type": "double",
			"unit": "%",
			"description": "outdoor relative humidity"
		},
		"mass_heat_capacity": {
			"type": "double",
			"unit": "Btu/degF",
			"description": "interior mass heat capacity"
		},
		"mass_heat_coeff": {
			"type": "double",
			"unit": "Btu/degF*h",
			"description": "interior mass heat exchange coefficient"
		},
		"mass_temperature": {
			"type": "double",
			"unit": "degF",
			"description": "interior mass temperature"
		},
		"air_volume": {
			"type": "double",
			"unit": "cf",
			"description": "air volume"
		},
		"air_mass": {
			"type": "double",
			"unit": "lb",
			"description": "air mass"
		},
		"air_heat_capacity": {
			"type": "double",
			"unit": "Btu/degF",
			"description": "air thermal mass"
		},
		"latent_load_fraction": {
			"type": "double",
			"unit": "pu",
			"description": "fractional increase in cooling load due to latent heat"
		},
		"total_thermal_mass_per_floor_area": {
			"type": "double",
			"unit": "Btu/degF*sf"
		},
		"interior_surface_heat_transfer_coeff": {
			"type": "double",
			"unit": "Btu/h*degF*sf"
		},
		"number_of_stories": {
			"type": "double",
			"description": "number of stories within the structure"
		},
		"is_AUX_on": {
			"type": "double",
			"description": "logic statement to determine population statistics - is the AUX on? 0 no, 1 yes"
		},
		"is_HEAT_on": {
			"type": "double",
			"description": "logic statement to determine population statistics - is the HEAT on? 0 no, 1 yes"
		},
		"is_COOL_on": {
			"type": "double",
			"description": "logic statement to determine population statistics - is the COOL on? 0 no, 1 yes"
		},
		"thermal_storage_present": {
			"type": "bool",
			"description": "logic statement for determining if energy storage is present"
		},
		"thermal_storage_in_use": {
			"type": "bool",
			"description": "logic statement for determining if energy storage is being utilized"
		},
		"thermostat_mode": {
			"type": "enumeration",
			"keywords": {
				"COOL":3,
				"HEAT":2,
				"AUTO":1,
				"OFF":0
			},
			"description": "tells the thermostat whether it is even allowed to heat or cool the house."
		},
		"system_type": {
			"type": "set",
			"keywords": {
				"RESISTIVE":16,
				"TWOSTAGE":8,
				"FORCEDAIR":4,
				"AIRCONDITIONING":2,
				"GAS":1,
				"NONE":0
			},
			"description": "heating/cooling system type/options"
		},
		"auxiliary_strategy": {
			"type": "set",
			"keywords": {
				"LOCKOUT":4,
				"TIMER":2,
				"DEADBAND":1,
				"NONE":0
			},
			"description": "auxiliary heating activation strategies"
		},
		"system_mode": {
			"type": "enumeration",
			"keywords": {
				"AUX":3,
				"COOL":4,
				"OFF":1,
				"HEAT":2,
				"UNKNOWN":0
			},
			"description": "heating/cooling system operation state"
		},
		"last_system_mode": {
			"type": "enumeration",
			"keywords": {
				"AUX":3,
				"COOL":4,
				"OFF":1,
				"HEAT":2,
				"UNKNOWN":0
			},
			"description": "heating/cooling system operation state"
		},
		"heating_system_type": {
			"type": "enumeration",
			"keywords": {
				"RESISTANCE":4,
				"HEAT_PUMP":3,
				"GAS":2,
				"NONE":1
			}
		},
		"cooling_system_type": {
			"type": "enumeration",
			"keywords": {
				"HEAT_PUMP":2,
				"ELECTRIC":2,
				"NONE":1
			}
		},
		"auxiliary_system_type": {
			"type": "enumeration",
			"keywords": {
				"ELECTRIC":2,
				"NONE":1
			}
		},
		"fan_type": {
			"type": "enumeration",
			"keywords": {
				"TWO_SPEED":3,
				"ONE_SPEED":2,
				"NONE":1
			}
		},
		"thermal_integrity_level": {
			"type": "enumeration",
			"keywords": {
				"UNKNOWN":7,
				"VERY_GOOD":6,
				"GOOD":5,
				"ABOVE_NORMAL":4,
				"NORMAL":3,
				"BELOW_NORMAL":2,
				"LITTLE":1,
				"VERY_LITTLE":0
			},
			"description": "default envelope UA settings"
		},
		"glass_type": {
			"type": "enumeration",
			"keywords": {
				"LOW_E_GLASS":2,
				"GLASS":1,
				"OTHER":0
			},
			"description": "glass used in the windows"
		},
		"window_frame": {
			"type": "enumeration",
			"keywords": {
				"INSULATED":4,
				"WOOD":3,
				"THERMAL_BREAK":2,
				"ALUMINIUM":1,
				"ALUMINUM":1,
				"NONE":0
			},
			"description": "type of window frame"
		},
		"glazing_treatment": {
			"type": "enumeration",
			"keywords": {
				"HIGH_S":5,
				"LOW_S":4,
				"REFL":3,
				"ABS":2,
				"CLEAR":1,
				"OTHER":0
			},
			"description": "the treatment to increase the reflectivity of the exterior windows"
		},
		"glazing_layers": {
			"type": "enumeration",
			"keywords": {
				"OTHER":4,
				"THREE":3,
				"TWO":2,
				"ONE":1
			},
			"description": "number of layers of glass in each window"
		},
		"motor_model": {
			"type": "enumeration",
			"keywords": {
				"FULL":2,
				"BASIC":1,
				"NONE":0
			},
			"description": "indicates the level of detail used in modelling the hvac motor parameters"
		},
		"motor_efficiency": {
			"type": "enumeration",
			"keywords": {
				"VERY_GOOD":4,
				"GOOD":3,
				"AVERAGE":2,
				"POOR":1,
				"VERY_POOR":0
			},
			"description": "when using motor model, describes the efficiency of the motor"
		},
		"last_mode_timer": {
			"type": "int64"
		},
		"hvac_motor_efficiency": {
			"type": "double",
			"unit": "unit",
			"description": "when using motor model, percent efficiency of hvac motor"
		},
		"hvac_motor_loss_power_factor": {
			"type": "double",
			"unit": "unit",
			"description": "when using motor model, power factor of motor losses"
		},
		"Rroof": {
			"type": "double",
			"unit": "degF*sf*h/Btu",
			"description": "roof R-value"
		},
		"Rwall": {
			"type": "double",
			"unit": "degF*sf*h/Btu",
			"description": "wall R-value"
		},
		"Rfloor": {
			"type": "double",
			"unit": "degF*sf*h/Btu",
			"description": "floor R-value"
		},
		"Rwindows": {
			"type": "double",
			"unit": "degF*sf*h/Btu",
			"description": "window R-value"
		},
		"Rdoors": {
			"type": "double",
			"unit": "degF*sf*h/Btu",
			"description": "door R-value"
		},
		"hvac_breaker_rating": {
			"type": "double",
			"unit": "A",
			"description": "determines the amount of current the HVAC circuit breaker can handle"
		},
		"hvac_power_factor": {
			"type": "double",
			"unit": "unit",
			"description": "power factor of hvac"
		},
		"hvac_load": {
			"type": "double",
			"unit": "kW",
			"description": "heating/cooling system load"
		},
		"last_heating_load": {
			"type": "double",
			"unit": "kW",
			"description": "stores the previous heating/cooling system load"
		},
		"last_cooling_load": {
			"type": "double",
			"unit": "kW",
			"description": "stores the previous heating/cooling system load"
		},
		"hvac_power": {
			"type": "complex",
			"unit": "kVA",
			"description": "describes hvac load complex power consumption"
		},
		"total_load": {
			"type": "double",
			"unit": "kVA",
			"description": "total panel enduse load"
		},
		"panel": {
			"type": "enduse",
			"description": "the enduse load description"
		},
		"panel.energy": {
			"type": "complex",
			"unit": "kVAh",
			"description": "the total energy consumed since the last meter reading"
		},
		"panel.power": {
			"type": "complex",
			"unit": "kVA",
			"description": "the total power consumption of the load"
		},
		"panel.peak_demand": {
			"type": "complex",
			"unit": "kVA",
			"description": "the peak power consumption since the last meter reading"
		},
		"panel.heatgain": {
			"type": "double",
			"unit": "Btu/h",
			"description": "the heat transferred from the enduse to the parent"
		},
		"panel.cumulative_heatgain": {
			"type": "double",
			"unit": "Btu",
			"description": "the cumulative heatgain from the enduse to the parent"
		},
		"panel.heatgain_fraction": {
			"type": "double",
			"unit": "pu",
			"description": "the fraction of the heat that goes to the parent"
		},
		"panel.current_fraction": {
			"type": "double",
			"unit": "pu",
			"description": "the fraction of total power that is constant current"
		},
		"panel.impedance_fraction": {
			"type": "double",
			"unit": "pu",
			"description": "the fraction of total power that is constant impedance"
		},
		"panel.power_fraction": {
			"type": "double",
			"unit": "pu",
			"description": "the fraction of the total power that is constant power"
		},
		"panel.power_factor": {
			"type": "double",
			"description": "the power factor of the load"
		},
		"panel.constant_power": {
			"type": "complex",
			"unit": "kVA",
			"description": "the constant power portion of the total load"
		},
		"panel.constant_current": {
			"type": "complex",
			"unit": "kVA",
			"description": "the constant current portion of the total load"
		},
		"panel.constant_admittance": {
			"type": "complex",
			"unit": "kVA",
			"description": "the constant admittance portion of the total load"
		},
		"panel.voltage_factor": {
			"type": "double",
			"unit": "pu",
			"description": "the voltage change factor"
		},
		"panel.breaker_amps": {
			"type": "double",
			"unit": "A",
			"description": "the rated breaker amperage"
		},
		"panel.configuration": {
			"type": "set",
			"keywords": {
				"IS220":1,
				"IS110":0
			},
			"description": "the load configuration options"
		},
		"design_internal_gain_density": {
			"type": "double",
			"unit": "W/sf",
			"description": "average density of heat generating devices in the house"
		},
		"compressor_on": {
			"type": "bool"
		},
		"compressor_count": {
			"type": "int64"
		},
		"hvac_last_on": {
			"type": "timestamp"
		},
		"hvac_last_off": {
			"type": "timestamp"
		},
		"hvac_period_length": {
			"type": "double",
			"unit": "s"
		},
		"hvac_duty_cycle": {
			"type": "double"
		},
		"external_pf_mode": {
			"type": "enumeration",
			"keywords": {
				"TWOV":2,
				"ONEV":1,
				"NONE":0
			},
			"description": "set up for using ONE or TWO external_v1N and v2N from another powerflow solver. v12 = v1N - v2N. If ONEV, v2N = -v1N"
		},
		"external_v1N": {
			"type": "complex",
			"description": "circuit 1N voltage from external power flow"
		},
		"external_v2N": {
			"type": "complex",
			"description": "circuit 2N voltage from external power flow"
		},
		"thermostat_control": {
			"type": "enumeration",
			"keywords": {
				"NONE":2,
				"BAND":1,
				"FULL":0
			},
			"description": "determine level of internal thermostatic control"
		},
		"dump_house_initialization_parameters": {
			"type": "bool",
			"description": "bool to dump the house initialization parameters to <house object name>_parameters_dump.txt"
		}
	},
	"lights": {
		"residential_enduse": {
			"type": "parent"
		},
		"type": {
			"type": "enumeration",
			"keywords": {
				"HID":4,
				"SSL":3,
				"CFL":2,
				"FLUORESCENT":1,
				"INCANDESCENT":0
			},
			"description": "lighting type (affects power_factor)"
		},
		"placement": {
			"type": "enumeration",
			"keywords": {
				"OUTDOOR":1,
				"INDOOR":0
			},
			"description": "lighting location (affects where heatgains go)"
		},
		"installed_power": {
			"type": "double",
			"unit": "kW",
			"description": "installed lighting capacity"
		},
		"power_density": {
			"type": "double",
			"unit": "W/sf",
			"description": "installed power density"
		},
		"curtailment": {
			"type": "double",
			"unit": "pu",
			"description": "lighting curtailment factor"
		},
		"demand": {
			"type": "double",
			"unit": "pu",
			"description": "the current lighting demand"
		},
		"actual_power": {
			"type": "complex",
			"unit": "kVA",
			"description": "actual power demand of lights object"
		}
	},
	"microwave": {
		"residential_enduse": {
			"type": "parent"
		},
		"installed_power": {
			"type": "double",
			"unit": "kW",
			"description": "rated microwave power level"
		},
		"standby_power": {
			"type": "double",
			"unit": "kW",
			"description": "standby microwave power draw (unshaped only)"
		},
		"circuit_split": {
			"type": "double"
		},
		"state": {
			"type": "enumeration",
			"keywords": {
				"ON":1,
				"OFF":0
			},
			"description": "on/off state of the microwave"
		},
		"cycle_length": {
			"type": "double",
			"unit": "s",
			"description": "length of the combined on/off cycle between uses"
		},
		"runtime": {
			"type": "double",
			"unit": "s",
			"description": ""
		},
		"state_time": {
			"type": "double",
			"unit": "s",
			"description": ""
		}
	},
	"occupantload": {
		"residential_enduse": {
			"type": "parent"
		},
		"number_of_occupants": {
			"type": "int32"
		},
		"occupancy_fraction": {
			"type": "double",
			"unit": "unit"
		},
		"heatgain_per_person": {
			"type": "double",
			"unit": "Btu/h"
		}
	},
	"plugload": {
		"residential_enduse": {
			"type": "parent"
		},
		"circuit_split": {
			"type": "double"
		},
		"demand": {
			"type": "double",
			"unit": "unit"
		},
		"installed_power": {
			"type": "double",
			"unit": "kW",
			"description": "installed plugs capacity"
		},
		"actual_power": {
			"type": "complex",
			"unit": "kVA",
			"description": "actual power demand"
		}
	},
	"range": {
		"residential_enduse": {
			"type": "parent"
		},
		"oven_volume": {
			"type": "double",
			"unit": "gal",
			"description": "the volume of the oven"
		},
		"oven_UA": {
			"type": "double",
			"unit": "Btu/degF*h",
			"description": "the UA of the oven (surface area divided by R-value)"
		},
		"oven_diameter": {
			"type": "double",
			"unit": "ft",
			"description": "the diameter of the oven"
		},
		"oven_demand": {
			"type": "double",
			"unit": "gpm",
			"description": "the hot food take out from the oven"
		},
		"heating_element_capacity": {
			"type": "double",
			"unit": "kW",
			"description": "the power of the heating element"
		},
		"inlet_food_temperature": {
			"type": "double",
			"unit": "degF",
			"description": "the inlet temperature of the food"
		},
		"heat_mode": {
			"type": "enumeration",
			"keywords": {
				"GASHEAT":1,
				"ELECTRIC":0
			},
			"description": "the energy source for heating the oven"
		},
		"location": {
			"type": "enumeration",
			"keywords": {
				"GARAGE":1,
				"INSIDE":0
			},
			"description": "whether the range is inside or outside"
		},
		"oven_setpoint": {
			"type": "double",
			"unit": "degF",
			"description": "the temperature around which the oven will heat its contents"
		},
		"thermostat_deadband": {
			"type": "double",
			"unit": "degF",
			"description": "the degree to heat the food in the oven, when needed"
		},
		"temperature": {
			"type": "double",
			"unit": "degF",
			"description": "the outlet temperature of the oven"
		},
		"height": {
			"type": "double",
			"unit": "ft",
			"description": "the height of the oven"
		},
		"food_density": {
			"type": "double",
			"description": "food density"
		},
		"specificheat_food": {
			"type": "double"
		},
		"queue_cooktop": {
			"type": "double",
			"unit": "unit",
			"description": "number of loads accumulated"
		},
		"queue_oven": {
			"type": "double",
			"unit": "unit",
			"description": "number of loads accumulated"
		},
		"queue_min": {
			"type": "double",
			"unit": "unit"
		},
		"queue_max": {
			"type": "double",
			"unit": "unit"
		},
		"time_cooktop_operation": {
			"type": "double"
		},
		"time_cooktop_setting": {
			"type": "double"
		},
		"cooktop_run_prob": {
			"type": "double"
		},
		"oven_run_prob": {
			"type": "double"
		},
		"cooktop_coil_setting_1": {
			"type": "double",
			"unit": "kW"
		},
		"cooktop_coil_setting_2": {
			"type": "double",
			"unit": "kW"
		},
		"cooktop_coil_setting_3": {
			"type": "double",
			"unit": "kW"
		},
		"total_power_oven": {
			"type": "double",
			"unit": "kW"
		},
		"total_power_cooktop": {
			"type": "double",
			"unit": "kW"
		},
		"total_power_range": {
			"type": "double",
			"unit": "kW"
		},
		"demand_cooktop": {
			"type": "double",
			"unit": "unit/day",
			"description": "number of loads accumulating daily"
		},
		"demand_oven": {
			"type": "double",
			"unit": "unit/day",
			"description": "number of loads accumulating daily"
		},
		"stall_voltage": {
			"type": "double",
			"unit": "V"
		},
		"start_voltage": {
			"type": "double",
			"unit": "V"
		},
		"stall_impedance": {
			"type": "complex",
			"unit": "Ohm"
		},
		"trip_delay": {
			"type": "double",
			"unit": "s"
		},
		"reset_delay": {
			"type": "double",
			"unit": "s"
		},
		"time_oven_operation": {
			"type": "double",
			"unit": "s"
		},
		"time_oven_setting": {
			"type": "double",
			"unit": "s"
		},
		"state_cooktop": {
			"type": "enumeration",
			"keywords": {
				"CT_TRIPPED":6,
				"CT_STALLED":5,
				"STAGE_8_ONLY":4,
				"STAGE_7_ONLY":3,
				"STAGE_6_ONLY":2,
				"CT_STOPPED":1
			}
		},
		"cooktop_energy_baseline": {
			"type": "double",
			"unit": "kWh"
		},
		"cooktop_energy_used": {
			"type": "double"
		},
		"Toff": {
			"type": "double"
		},
		"Ton": {
			"type": "double"
		},
		"cooktop_interval_setting_1": {
			"type": "double",
			"unit": "s"
		},
		"cooktop_interval_setting_2": {
			"type": "double",
			"unit": "s"
		},
		"cooktop_interval_setting_3": {
			"type": "double",
			"unit": "s"
		},
		"cooktop_energy_needed": {
			"type": "double",
			"unit": "kWh"
		},
		"heat_needed": {
			"type": "bool"
		},
		"oven_check": {
			"type": "bool"
		},
		"remainon": {
			"type": "bool"
		},
		"cooktop_check": {
			"type": "bool"
		},
		"actual_load": {
			"type": "double",
			"unit": "kW",
			"description": "the actual load based on the current voltage across the coils"
		},
		"previous_load": {
			"type": "double",
			"unit": "kW",
			"description": "the actual load based on current voltage stored for use in controllers"
		},
		"actual_power": {
			"type": "complex",
			"unit": "kVA",
			"description": "the actual power based on the current voltage across the coils"
		},
		"is_range_on": {
			"type": "double",
			"description": "simple logic output to determine state of range (1-on, 0-off)"
		}
	},
	"refrigerator": {
		"residential_enduse": {
			"type": "parent"
		},
		"size": {
			"type": "double",
			"unit": "cf",
			"description": "volume of the refrigerator"
		},
		"rated_capacity": {
			"type": "double",
			"unit": "Btu/h"
		},
		"temperature": {
			"type": "double",
			"unit": "degF"
		},
		"setpoint": {
			"type": "double",
			"unit": "degF"
		},
		"deadband": {
			"type": "double",
			"unit": "degF"
		},
		"cycle_time": {
			"type": "double",
			"unit": "s"
		},
		"output": {
			"type": "double"
		},
		"event_temp": {
			"type": "double"
		},
		"UA": {
			"type": "double",
			"unit": "Btu/degF*h"
		},
		"compressor_off_normal_energy": {
			"type": "double"
		},
		"compressor_off_normal_power": {
			"type": "double",
			"unit": "W"
		},
		"compressor_on_normal_energy": {
			"type": "double"
		},
		"compressor_on_normal_power": {
			"type": "double",
			"unit": "W"
		},
		"defrost_energy": {
			"type": "double"
		},
		"defrost_power": {
			"type": "double",
			"unit": "W"
		},
		"icemaking_energy": {
			"type": "double"
		},
		"icemaking_power": {
			"type": "double",
			"unit": "W"
		},
		"ice_making_probability": {
			"type": "double"
		},
		"FF_Door_Openings": {
			"type": "int32"
		},
		"door_opening_energy": {
			"type": "int32"
		},
		"door_opening_power": {
			"type": "int32"
		},
		"DO_Thershold": {
			"type": "double"
		},
		"dr_mode_double": {
			"type": "double"
		},
		"energy_needed": {
			"type": "double"
		},
		"energy_used": {
			"type": "double"
		},
		"refrigerator_power": {
			"type": "double"
		},
		"icemaker_running": {
			"type": "bool"
		},
		"check_DO": {
			"type": "int32"
		},
		"is_240": {
			"type": "bool"
		},
		"defrostDelayed": {
			"type": "double"
		},
		"long_compressor_cycle_due": {
			"type": "bool"
		},
		"long_compressor_cycle_time": {
			"type": "double"
		},
		"long_compressor_cycle_power": {
			"type": "double"
		},
		"long_compressor_cycle_energy": {
			"type": "double"
		},
		"long_compressor_cycle_threshold": {
			"type": "double"
		},
		"defrost_criterion": {
			"type": "enumeration",
			"keywords": {
				"COMPRESSOR_TIME":3,
				"DOOR_OPENINGS":2,
				"TIMED":1
			}
		},
		"run_defrost": {
			"type": "bool"
		},
		"door_opening_criterion": {
			"type": "double"
		},
		"compressor_defrost_time": {
			"type": "double"
		},
		"delay_defrost_time": {
			"type": "double"
		},
		"daily_door_opening": {
			"type": "int32"
		},
		"state": {
			"type": "enumeration",
			"keywords": {
				"COMPRESSSOR_ON_NORMAL":3,
				"COMPRESSSOR_ON_LONG":4,
				"COMPRESSSOR_OFF_NORMAL":2,
				"DEFROST":1
			}
		}
	},
	"residential_enduse": {
		"shape": {
			"type": "loadshape"
		},
		"load": {
			"type": "enduse",
			"description": "the enduse load description"
		},
		"energy": {
			"type": "complex",
			"unit": "kVAh",
			"description": "the total energy consumed since the last meter reading"
		},
		"power": {
			"type": "complex",
			"unit": "kVA",
			"description": "the total power consumption of the load"
		},
		"peak_demand": {
			"type": "complex",
			"unit": "kVA",
			"description": "the peak power consumption since the last meter reading"
		},
		"heatgain": {
			"type": "double",
			"unit": "Btu/h",
			"description": "the heat transferred from the enduse to the parent"
		},
		"cumulative_heatgain": {
			"type": "double",
			"unit": "Btu",
			"description": "the cumulative heatgain from the enduse to the parent"
		},
		"heatgain_fraction": {
			"type": "double",
			"unit": "pu",
			"description": "the fraction of the heat that goes to the parent"
		},
		"current_fraction": {
			"type": "double",
			"unit": "pu",
			"description": "the fraction of total power that is constant current"
		},
		"impedance_fraction": {
			"type": "double",
			"unit": "pu",
			"description": "the fraction of total power that is constant impedance"
		},
		"power_fraction": {
			"type": "double",
			"unit": "pu",
			"description": "the fraction of the total power that is constant power"
		},
		"power_factor": {
			"type": "double",
			"description": "the power factor of the load"
		},
		"constant_power": {
			"type": "complex",
			"unit": "kVA",
			"description": "the constant power portion of the total load"
		},
		"constant_current": {
			"type": "complex",
			"unit": "kVA",
			"description": "the constant current portion of the total load"
		},
		"constant_admittance": {
			"type": "complex",
			"unit": "kVA",
			"description": "the constant admittance portion of the total load"
		},
		"voltage_factor": {
			"type": "double",
			"unit": "pu",
			"description": "the voltage change factor"
		},
		"breaker_amps": {
			"type": "double",
			"unit": "A",
			"description": "the rated breaker amperage"
		},
		"configuration": {
			"type": "set",
			"keywords": {
				"IS220":1,
				"IS110":0
			},
			"description": "the load configuration options"
		},
		"override": {
			"type": "enumeration",
			"keywords": {
				"OFF":2,
				"ON":1,
				"NORMAL":0
			}
		},
		"power_state": {
			"type": "enumeration",
			"keywords": {
				"UNKNOWN":2,
				"ON":1,
				"OFF":0
			}
		}
	},
	"thermal_storage": {
		"residential_enduse": {
			"type": "parent"
		},
		"total_capacity": {
			"type": "double",
			"unit": "Btu",
			"description": "total storage capacity of unit"
		},
		"stored_capacity": {
			"type": "double",
			"unit": "Btu",
			"description": "amount of capacity that is stored"
		},
		"recharge_power": {
			"type": "double",
			"unit": "kW",
			"description": "installed compressor power usage"
		},
		"discharge_power": {
			"type": "double",
			"unit": "kW",
			"description": "installed pump power usage"
		},
		"recharge_pf": {
			"type": "double",
			"description": "installed compressor power factor"
		},
		"discharge_pf": {
			"type": "double",
			"description": "installed pump power factor"
		},
		"discharge_schedule_type": {
			"type": "enumeration",
			"keywords": {
				"EXTERNAL":1,
				"INTERNAL":0
			},
			"description": "Scheduling method for discharging"
		},
		"recharge_schedule_type": {
			"type": "enumeration",
			"keywords": {
				"EXTERNAL":1,
				"INTERNAL":0
			},
			"description": "Scheduling method for charging"
		},
		"recharge_time": {
			"type": "double",
			"description": "Flag indicating if recharging is available at the current time (1 or 0)"
		},
		"discharge_time": {
			"type": "double",
			"description": "Flag indicating if discharging is available at the current time (1 or 0)"
		},
		"discharge_rate": {
			"type": "double",
			"unit": "Btu/h",
			"description": "rating of discharge or cooling"
		},
		"SOC": {
			"type": "double",
			"unit": "%",
			"description": "state of charge as percentage of total capacity"
		},
		"k": {
			"type": "double",
			"unit": "W/m/K",
			"description": "coefficient of thermal conductivity (W/m/K)"
		}
	},
	"waterheater": {
		"residential_enduse": {
			"type": "parent"
		},
		"tank_volume": {
			"type": "double",
			"unit": "gal",
			"description": "the volume of water in the tank when it is full"
		},
		"tank_UA": {
			"type": "double",
			"unit": "Btu*h/degF",
			"description": "the UA of the tank (surface area divided by R-value)"
		},
		"tank_diameter": {
			"type": "double",
			"unit": "ft",
			"description": "the diameter of the water heater tank"
		},
		"tank_height": {
			"type": "double",
			"unit": "ft",
			"description": "the height of the water heater tank"
		},
		"water_demand": {
			"type": "double",
			"unit": "gpm",
			"description": "the hot water draw from the water heater"
		},
		"heating_element_capacity": {
			"type": "double",
			"unit": "kW",
			"description": "the power of the heating element"
		},
		"inlet_water_temperature": {
			"type": "double",
			"unit": "degF",
			"description": "the inlet temperature of the water tank"
		},
		"waterheater_model": {
			"type": "enumeration",
			"keywords": {
				"NONE":0,
				"MULTILAYER":4,
				"FORTRAN":3,
				"TWONODE":2,
				"ONEZNODE":1
			},
			"description": "the water heater model to use"
		},
		"heat_mode": {
			"type": "enumeration",
			"keywords": {
				"HEAT_PUMP":2,
				"GASHEAT":1,
				"ELECTRIC":0
			},
			"description": "the energy source for heating the water heater"
		},
		"location": {
			"type": "enumeration",
			"keywords": {
				"GARAGE":1,
				"INSIDE":0
			},
			"description": "whether the water heater is inside or outside"
		},
		"tank_setpoint": {
			"type": "double",
			"unit": "degF",
			"description": "the temperature around which the water heater will heat its contents"
		},
		"thermostat_deadband": {
			"type": "double",
			"unit": "degF",
			"description": "the degree to heat the water tank, when needed"
		},
		"temperature": {
			"type": "double",
			"unit": "degF",
			"description": "the outlet temperature of the water tank"
		},
		"height": {
			"type": "double",
			"unit": "ft",
			"description": "the height of the hot water column within the water tank"
		},
		"demand": {
			"type": "complex",
			"unit": "kVA",
			"description": "the water heater power consumption"
		},
		"actual_load": {
			"type": "double",
			"unit": "kW",
			"description": "the actual load based on the current voltage across the coils"
		},
		"previous_load": {
			"type": "double",
			"unit": "kW",
			"description": "the previous load based on voltage across the coils at the last sync operation"
		},
		"actual_power": {
			"type": "complex",
			"unit": "kVA",
			"description": "the actual power based on the current voltage across the coils"
		},
		"is_waterheater_on": {
			"type": "double",
			"description": "simple logic output to determine state of waterheater (1-on, 0-off)"
		},
		"gas_fan_power": {
			"type": "double",
			"unit": "kW",
			"description": "load of a running gas waterheater"
		},
		"gas_standby_power": {
			"type": "double",
			"unit": "kW",
			"description": "load of a gas waterheater in standby"
		},
		"heat_pump_coefficient_of_performance": {
			"type": "double",
			"unit": "Btu/kWh",
			"description": "current COP of the water heater pump - currently calculated internally and not an input"
		},
		"Tcontrol": {
			"type": "double",
			"unit": "degF",
			"description": "in heat pump operation, defines the blended temperature used for turning on and off HP - currently calculated internally and not an input"
		},
		"current_tank_status": {
			"type": "enumeration",
			"keywords": {
				"EMPTY":2,
				"PARTIAL":1,
				"FULL":0
			}
		},
		"dr_signal": {
			"type": "double",
			"description": "the on/off signal to send to the fortran waterheater model"
		},
		"COP": {
			"type": "double",
			"description": "the cop of the fortran heat pump water heater model."
		},
		"operating_mode": {
			"type": "double",
			"description": "the operating mode the fortran water heater should be using."
		},
		"fortran_sim_time": {
			"type": "double",
			"unit": "s",
			"description": "the amount of time the fortran model should simulate."
		},
		"waterheater_power": {
			"type": "double",
			"unit": "kW",
			"description": "the current power draw from the fortran water heater."
		},
		"load_state": {
			"type": "enumeration",
			"keywords": {
				"STABLE":2,
				"RECOVERING":1,
				"DEPLETING":0
			}
		},
		"re_override": {
			"type": "enumeration",
			"keywords": {
				"OV_OFF":2,
				"OV_NORMAL":0,
				"OV_ON":1
			},
			"description": "the override setting for the water heater"
		},
		"lower_tank_setpoint": {
			"type": "double",
			"unit": "degF",
			"description": "MULTILAYER_MODEL: The setpoint for the lower heating element thermostat in the tank"
		},
		"upper_tank_setpoint": {
			"type": "double",
			"unit": "degF",
			"description": "MULTILAYER_MODEL: The setpoint for the upper heating element thermostat in the tank"
		},
		"lower_tank_deadband": {
			"type": "double",
			"unit": "degF",
			"description": "MULTILAYER_MODEL: The deadband for the lower heating element thermostat in the tank"
		},
		"upper_tank_deadband": {
			"type": "double",
			"unit": "degF",
			"description": "MULTILAYER_MODEL: The deadband for the upper heating element thermostat in the tank"
		},
		"lower_tank_temperature": {
			"type": "double",
			"unit": "degF",
			"description": "MULTILAYER_MODEL: The water temperature at the lower heating element thermostat in the tank"
		},
		"upper_tank_temperature": {
			"type": "double",
			"unit": "degF",
			"description": "MULTILAYER_MODEL: The water temperature for the upper heating element thermostat in the tank"
		},
		"discrete_step_size": {
			"type": "double",
			"unit": "s",
			"description": "MULTILAYER MODEL: The step size in seconds to use in the discrete tank temperature dynamics loop."
		},
		"circular_flow_rate": {
			"type": "double",
			"unit": "gpm",
			"description": "MULTILAYER MODEL: Heuristic flow activated once the heating elements turn on."
		},
		"T_mixing_valve": {
			"type": "double",
			"unit": "degF",
			"description": "MULTILAYER MODEL: Reference temperature to which mixing valve operate."
		},
		"lower_heating_element_state": {
			"type": "enumeration",
			"keywords": {
				"ON":1,
				"OFF":0
			},
			"description": "MULTILAYER MODEL: The state of the lower heating element in the tank."
		},
		"upper_heating_element_state": {
			"type": "enumeration",
			"keywords": {
				"ON":1,
				"OFF":0
			},
			"description": "MULTILAYER MODEL: The state of the upper heating element in the tank."
		}
	}
}
,
"tape": {
	"global_attributes": {
		"gnuplot_path": {
			"type": "char1024"
		},
		"flush_interval": {
			"type": "int32"
		},
		"csv_data_only": {
			"type": "int32"
		},
		"csv_keep_clean": {
			"type": "int32"
		},
		"delta_mode_needed": {
			"type": "timestamp"
		}
	},
	"collector": {
		"property": {
			"type": "char1024"
		},
		"trigger": {
			"type": "char32"
		},
		"file": {
			"type": "char1024"
		},
		"limit": {
			"type": "int32"
		},
		"group": {
			"type": "char256"
		},
		"flush": {
			"type": "int32"
		},
		"interval": {
			"type": "double",
			"unit": "s"
		}
	},
	"group_recorder": {
		"file": {
			"type": "char256",
			"description": "output file name"
		},
		"group": {
			"type": "char1024",
			"description": "group definition string"
		},
		"interval": {
			"type": "double",
			"unit": "s",
			"description": "recordering interval (0 'every iteration', -1 'on change')"
		},
		"flush_interval": {
			"type": "double",
			"unit": "s",
			"description": "file flush interval (0 never, negative on samples)"
		},
		"strict": {
			"type": "bool",
			"description": "causes the group_recorder to stop the simulation should there be a problem opening or writing with the group_recorder"
		},
		"print_units": {
			"type": "bool",
			"description": "flag to append units to each written value, if applicable"
		},
		"property": {
			"type": "char256",
			"description": "property to record"
		},
		"limit": {
			"type": "int32",
			"description": "the maximum number of lines to write to the file"
		},
		"format": {
			"type": "bool",
			"description": "determines whether output timestamp is formatted to be formatted as human-readable (default) or epoch"
		},
		"complex_part": {
			"type": "enumeration",
			"keywords": {
				"ANG_RAD":5,
				"ANG_DEG":4,
				"MAG":3,
				"IMAG":2,
				"REAL":1,
				"NONE":0
			},
			"description": "the complex part to record if complex properties are gathered"
		}
	},
	"histogram": {
		"filename": {
			"type": "char1024",
			"description": "the name of the file to write"
		},
		"filetype": {
			"type": "char8",
			"description": "the format to output a histogram in"
		},
		"mode": {
			"type": "char32",
			"description": "the mode of file output"
		},
		"group": {
			"type": "char1024",
			"description": "the GridLAB-D group expression to use for this histogram"
		},
		"bins": {
			"type": "char1024",
			"description": "the specific bin values to use"
		},
		"property": {
			"type": "char256",
			"description": "the property to sample"
		},
		"min": {
			"type": "double",
			"description": "the minimum value of the auto-sized bins to use"
		},
		"max": {
			"type": "double",
			"description": "the maximum value of the auto-sized bins to use"
		},
		"samplerate": {
			"type": "double",
			"unit": "s",
			"description": "the rate at which samples are read"
		},
		"countrate": {
			"type": "double",
			"unit": "s",
			"description": "the reate at which bins are counted and written"
		},
		"bin_count": {
			"type": "int32",
			"description": "the number of auto-sized bins to use"
		},
		"limit": {
			"type": "int32",
			"description": "the number of samples to write"
		}
	},
	"metrics_collector": {
		"interval": {
			"type": "double",
			"unit": "s",
			"description": "Interval at which the metrics_collector output is stored in JSON format"
		}
	},
	"metrics_collector_writer": {
		"filename": {
			"type": "char256",
			"description": "the JSON formatted output file name"
		},
		"extension": {
			"type": "char8",
			"description": "the file formatted type (JSON, H5)"
		},
		"alternate": {
			"type": "char8",
			"description": "the alternate file name convention"
		},
		"allextensions": {
			"type": "char8",
			"description": "write all file extensions"
		},
		"interim": {
			"type": "double",
			"unit": "s",
			"description": "Interim at which metrics_collector_writer output is written"
		},
		"interval": {
			"type": "double",
			"unit": "s",
			"description": "Interval at which the metrics_collector_writer output is stored in JSON format"
		}
	},
	"multi_recorder": {
		"interval": {
			"type": "double",
			"unit": "s"
		},
		"property": {
			"type": "char1024"
		},
		"trigger": {
			"type": "char32"
		},
		"file": {
			"type": "char1024"
		},
		"filetype": {
			"type": "char8"
		},
		"mode": {
			"type": "char32"
		},
		"multifile": {
			"type": "char1024"
		},
		"limit": {
			"type": "int32"
		},
		"plotcommands": {
			"type": "char1024"
		},
		"xdata": {
			"type": "char32"
		},
		"columns": {
			"type": "char32"
		},
		"format": {
			"type": "char32"
		},
		"output": {
			"type": "enumeration",
			"keywords": {
				"SVG":6,
				"PNG":5,
				"PDF":4,
				"JPG":3,
				"GIF":2,
				"EPS":1,
				"SCREEN":0
			}
		},
		"header_units": {
			"type": "enumeration",
			"keywords": {
				"NONE":2,
				"ALL":1,
				"DEFAULT":0
			}
		},
		"line_units": {
			"type": "enumeration",
			"keywords": {
				"NONE":2,
				"ALL":1,
				"DEFAULT":0
			}
		}
	},
	"player": {
		"property": {
			"type": "char256"
		},
		"file": {
			"type": "char1024"
		},
		"filetype": {
			"type": "char8"
		},
		"mode": {
			"type": "char32"
		},
		"loop": {
			"type": "int32"
		},
		"all_events_delta": {
			"type": "bool"
		}
	},
	"recorder": {
		"property": {
			"type": "char1024"
		},
		"trigger": {
			"type": "char32"
		},
		"file": {
			"type": "char1024"
		},
		"filetype": {
			"type": "char8"
		},
		"mode": {
			"type": "char32"
		},
		"multifile": {
			"type": "char1024"
		},
		"limit": {
			"type": "int32"
		},
		"plotcommands": {
			"type": "char1024"
		},
		"xdata": {
			"type": "char32"
		},
		"columns": {
			"type": "char32"
		},
		"flush": {
			"type": "int32"
		},
		"format": {
			"type": "bool"
		},
		"interval": {
			"type": "double",
			"unit": "s"
		},
		"output": {
			"type": "enumeration",
			"keywords": {
				"SVG":6,
				"PNG":5,
				"PDF":4,
				"JPG":3,
				"GIF":2,
				"EPS":1,
				"SCREEN":0
			}
		},
		"header_units": {
			"type": "enumeration",
			"keywords": {
				"NONE":2,
				"ALL":1,
				"DEFAULT":0
			}
		},
		"line_units": {
			"type": "enumeration",
			"keywords": {
				"NONE":2,
				"ALL":1,
				"DEFAULT":0
			}
		}
	},
	"shaper": {
		"file": {
			"type": "char1024"
		},
		"filetype": {
			"type": "char8"
		},
		"mode": {
			"type": "char32"
		},
		"group": {
			"type": "char256"
		},
		"property": {
			"type": "char256"
		},
		"magnitude": {
			"type": "double"
		},
		"events": {
			"type": "double"
		}
	},
	"violation_recorder": {
		"file": {
			"type": "char256",
			"description": "output file name"
		},
		"summary": {
			"type": "char256",
			"description": "summary output file name"
		},
		"virtual_substation": {
			"type": "char256",
			"description": "name of the substation node to monitor for reverse flow violation"
		},
		"interval": {
			"type": "double",
			"unit": "s",
			"description": "recording interval (0 'every iteration', -1 'on change')"
		},
		"flush_interval": {
			"type": "double",
			"unit": "s",
			"description": "file flush interval (0 never, negative on samples)"
		},
		"strict": {
			"type": "bool",
			"description": "causes the violation_recorder to stop the simulation should there be a problem opening or writing with the violation_recorder"
		},
		"echo": {
			"type": "bool",
			"description": "causes the violation_recorder to echo messages to the screen"
		},
		"limit": {
			"type": "int32",
			"description": "the maximum number of lines to write to the file"
		},
		"violation_delay": {
			"type": "int32",
			"description": "the number of seconds to skip before recording violations"
		},
		"xfrmr_thermal_limit_upper": {
			"type": "double",
			"description": "xfrmr_thermal_limit_upper"
		},
		"xfrmr_thermal_limit_lower": {
			"type": "double",
			"description": "xfrmr_thermal_limit_lower"
		},
		"line_thermal_limit_upper": {
			"type": "double",
			"description": "line_thermal_limit_upper"
		},
		"line_thermal_limit_lower": {
			"type": "double",
			"description": "line_thermal_limit_lower"
		},
		"node_instantaneous_voltage_limit_upper": {
			"type": "double",
			"description": "node_instantaneous_voltage_limit_upper"
		},
		"node_instantaneous_voltage_limit_lower": {
			"type": "double",
			"description": "node_instantaneous_voltage_limit_lower"
		},
		"node_continuous_voltage_limit_upper": {
			"type": "double",
			"description": "node_continuous_voltage_limit_upper"
		},
		"node_continuous_voltage_limit_lower": {
			"type": "double",
			"description": "node_continuous_voltage_limit_lower"
		},
		"node_continuous_voltage_interval": {
			"type": "double",
			"description": "node_continuous_voltage_interval"
		},
		"secondary_dist_voltage_rise_upper_limit": {
			"type": "double",
			"description": "secondary_dist_voltage_rise_upper_limit"
		},
		"secondary_dist_voltage_rise_lower_limit": {
			"type": "double",
			"description": "secondary_dist_voltage_rise_lower_limit"
		},
		"substation_breaker_A_limit": {
			"type": "double",
			"description": "breaker_phase_A_limit"
		},
		"substation_breaker_B_limit": {
			"type": "double",
			"description": "breaker_phase_B_limit"
		},
		"substation_breaker_C_limit": {
			"type": "double",
			"description": "breaker_phase_C_limit"
		},
		"substation_pf_lower_limit": {
			"type": "double",
			"description": "substation_pf_lower_limit"
		},
		"inverter_v_chng_per_interval_upper_bound": {
			"type": "double",
			"description": "inverter_v_chng_per_interval_upper_bound"
		},
		"inverter_v_chng_per_interval_lower_bound": {
			"type": "double",
			"description": "inverter_v_chng_per_interval_lower_bound"
		},
		"inverter_v_chng_interval": {
			"type": "double",
			"description": "inverter_v_chng_interval"
		},
		"violation_flag": {
			"type": "set",
			"keywords": {
				"ALLVIOLATIONS":255,
				"VIOLATION8":128,
				"VIOLATION7":64,
				"VIOLATION6":32,
				"VIOLATION5":16,
				"VIOLATION4":8,
				"VIOLATION3":4,
				"VIOLATION2":2,
				"VIOLATION1":1,
				"VIOLATION0":0
			},
			"description": "bit set for determining which violations to check"
		}
	}
}
}
